"edges":
  !!int "0": |-
    ---
    +++
    @@ -3,7 +3,7 @@
     """ change the-string+input into an integer
  !!int "1": |-
    ---
    +++
    @@ -5,16 +5,14 @@
     num into int.-If+Return+a+bool+indicating+if num is a prime-number,-return-"True".-if-not,-return-"False"+number. """
  !!int "2": |-
    ---
    +++
    @@ -8,4 +8,7 @@
     prime return true+else+return+false """
  !!int "3": |-
    ---
    +++
    @@ -6,7 +6,7 @@
     string into an-in+integer if the number
  !!int "4": |-
    ---
    +++
    @@ -1,17 +1,18 @@
     def check_prime(num): """-convert-the-input-to-an-integer.-return-whether+save the input num+to+an+integer+variable.+return+whether+this+integer is prime. """
  !!int "5": |-
    ---
    +++
    @@ -1,7 +1,11 @@
     def check_prime(num): """-if+Turns+num+into+int.+If num is a
  !!int "6": |-
    ---
    +++
    @@ -5,7 +5,12 @@
     the number is-prime+not+divisible+buy+4+or+3 return true else
  !!int "7": |-
    ---
    +++
    @@ -1,13 +1,20 @@
     def check_prime(num): """-treat+create+a+new+variable+that+saves the input num as an-integer.+integer+using+int(). return whether this
  !!int "8": |-
    ---
    +++
    @@ -1,6 +1,12 @@
     def check_prime(num): """+change+the+string+into+an+in if the number
  !!int "9": |-
    ---
    +++
    @@ -1,10 +1,15 @@
     def check_prime(num): """+Convert+each+input+to+an+integer. If-the-input-number+that+integer is prime return
  !!int "10": |-
    ---
    +++
    @@ -1,14 +1,13 @@
     def check_prime(num): """-save+treat the input num-to+as an-integer-variable.+integer. return whether this
  !!int "11": |-
    ---
    +++
    @@ -1,6 +1,11 @@
     def check_prime(num): """+Converts+input+into+an+integer. Returns 'True' if
  !!int "12": |-
    ---
    +++
    @@ -1,6 +1,12 @@
     def check_prime(num): """+convert+the+input+to+an+integer. return whether the
  !!int "13": |-
    ---
    +++
    @@ -2,6 +2,12 @@
     check_prime(num): """ given+a+string+type+cast+it+into an integer, if
  !!int "14": |-
    ---
    +++
    @@ -2,19 +2,30 @@
     check_prime(num): """ Convert-each+the input to an integer.-If-that+Then+check+if+the integer is+a prime+number+and return-"True".-Else,-return+"True"+if+it+is+prime+and "False"+if+it's+not """
  !!int "15": |-
    ---
    +++
    @@ -1,18 +1,13 @@
     def check_prime(num): """-given-a-string-type-cast-it-into+typecast+num+as an integer, if-the-integer+num is only divisible
"nodes":
  !!int "0":
    "stderr":
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 11, in <module>
          print(check_prime('2'))
        File "/tmp/file.py", line 7, in check_prime
          for i in range(2, num):
      TypeError: 'str' object cannot be interpreted as an integer
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 11, in <module>
          print(check_prime('8'))
        File "/tmp/file.py", line 7, in check_prime
          for i in range(2, num):
      TypeError: 'str' object cannot be interpreted as an integer
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 11, in <module>
          print(check_prime('9'))
        File "/tmp/file.py", line 7, in check_prime
          for i in range(2, num):
      TypeError: 'str' object cannot be interpreted as an integer
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 11, in <module>
          print(check_prime('11'))
        File "/tmp/file.py", line 7, in check_prime
          for i in range(2, num):
      TypeError: 'str' object cannot be interpreted as an integer
    "stderr_id": !!int |-
      1
    "stdout":
    - ""
    - ""
    - ""
    - ""
    "stdout_id": !!int |-
      1
  !!int "1":
    "stderr":
    - ""
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      3
    "stdout":
    - |
      True
    - |
      False
    - |
      False
    - |
      True
    "stdout_id": !!int |-
      0
  !!int "2":
    "stderr":
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 9, in <module>
          print(check_prime('2'))
        File "/tmp/file.py", line 5, in check_prime
          for i in range(2, num):
      TypeError: 'str' object cannot be interpreted as an integer
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 9, in <module>
          print(check_prime('8'))
        File "/tmp/file.py", line 5, in check_prime
          for i in range(2, num):
      TypeError: 'str' object cannot be interpreted as an integer
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 9, in <module>
          print(check_prime('9'))
        File "/tmp/file.py", line 5, in check_prime
          for i in range(2, num):
      TypeError: 'str' object cannot be interpreted as an integer
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 9, in <module>
          print(check_prime('11'))
        File "/tmp/file.py", line 5, in check_prime
          for i in range(2, num):
      TypeError: 'str' object cannot be interpreted as an integer
    "stderr_id": !!int |-
      5
    "stdout":
    - ""
    - ""
    - ""
    - ""
    "stdout_id": !!int |-
      1
  !!int "3":
    "stderr":
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 9, in <module>
          print(check_prime('2'))
        File "/tmp/file.py", line 5, in check_prime
          if num % 4 == 0 or num % 3 == 0:
      TypeError: not all arguments converted during string formatting
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 9, in <module>
          print(check_prime('8'))
        File "/tmp/file.py", line 5, in check_prime
          if num % 4 == 0 or num % 3 == 0:
      TypeError: not all arguments converted during string formatting
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 9, in <module>
          print(check_prime('9'))
        File "/tmp/file.py", line 5, in check_prime
          if num % 4 == 0 or num % 3 == 0:
      TypeError: not all arguments converted during string formatting
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 9, in <module>
          print(check_prime('11'))
        File "/tmp/file.py", line 5, in check_prime
          if num % 4 == 0 or num % 3 == 0:
      TypeError: not all arguments converted during string formatting
    "stderr_id": !!int |-
      8
    "stdout":
    - ""
    - ""
    - ""
    - ""
    "stdout_id": !!int |-
      1
  !!int "4":
    "stderr":
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 13, in <module>
          print(check_prime('2'))
        File "/tmp/file.py", line 7, in check_prime
          if num % 2 == 0:
      TypeError: not all arguments converted during string formatting
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 13, in <module>
          print(check_prime('8'))
        File "/tmp/file.py", line 7, in check_prime
          if num % 2 == 0:
      TypeError: not all arguments converted during string formatting
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 13, in <module>
          print(check_prime('9'))
        File "/tmp/file.py", line 7, in check_prime
          if num % 2 == 0:
      TypeError: not all arguments converted during string formatting
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 13, in <module>
          print(check_prime('11'))
        File "/tmp/file.py", line 7, in check_prime
          if num % 2 == 0:
      TypeError: not all arguments converted during string formatting
    "stderr_id": !!int |-
      2
    "stdout":
    - ""
    - ""
    - ""
    - ""
    "stdout_id": !!int |-
      1
  !!int "5":
    "stderr":
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 16, in <module>
          print(check_prime('2'))
        File "/tmp/file.py", line 5, in check_prime
          if num <= 1:
      TypeError: '<=' not supported between instances of 'str' and 'int'
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 16, in <module>
          print(check_prime('8'))
        File "/tmp/file.py", line 5, in check_prime
          if num <= 1:
      TypeError: '<=' not supported between instances of 'str' and 'int'
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 16, in <module>
          print(check_prime('9'))
        File "/tmp/file.py", line 5, in check_prime
          if num <= 1:
      TypeError: '<=' not supported between instances of 'str' and 'int'
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 16, in <module>
          print(check_prime('11'))
        File "/tmp/file.py", line 5, in check_prime
          if num <= 1:
      TypeError: '<=' not supported between instances of 'str' and 'int'
    "stderr_id": !!int |-
      4
    "stdout":
    - ""
    - ""
    - ""
    - ""
    "stdout_id": !!int |-
      1
  !!int "6":
    "stderr":
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 14, in <module>
          print(check_prime('2'))
        File "/tmp/file.py", line 10, in check_prime
          for i in range(2, num):
      TypeError: 'str' object cannot be interpreted as an integer
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 14, in <module>
          print(check_prime('8'))
        File "/tmp/file.py", line 10, in check_prime
          for i in range(2, num):
      TypeError: 'str' object cannot be interpreted as an integer
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 14, in <module>
          print(check_prime('9'))
        File "/tmp/file.py", line 10, in check_prime
          for i in range(2, num):
      TypeError: 'str' object cannot be interpreted as an integer
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 14, in <module>
          print(check_prime('11'))
        File "/tmp/file.py", line 10, in check_prime
          for i in range(2, num):
      TypeError: 'str' object cannot be interpreted as an integer
    "stderr_id": !!int |-
      7
    "stdout":
    - ""
    - ""
    - ""
    - ""
    "stdout_id": !!int |-
      1
  !!int "7":
    "stderr":
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 11, in <module>
          print(check_prime('2'))
        File "/tmp/file.py", line 5, in check_prime
          if num < 2:
      TypeError: '<' not supported between instances of 'str' and 'int'
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 11, in <module>
          print(check_prime('8'))
        File "/tmp/file.py", line 5, in check_prime
          if num < 2:
      TypeError: '<' not supported between instances of 'str' and 'int'
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 11, in <module>
          print(check_prime('9'))
        File "/tmp/file.py", line 5, in check_prime
          if num < 2:
      TypeError: '<' not supported between instances of 'str' and 'int'
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 11, in <module>
          print(check_prime('11'))
        File "/tmp/file.py", line 5, in check_prime
          if num < 2:
      TypeError: '<' not supported between instances of 'str' and 'int'
    "stderr_id": !!int |-
      0
    "stdout":
    - ""
    - ""
    - ""
    - ""
    "stdout_id": !!int |-
      1
  !!int "8":
    "stderr":
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 13, in <module>
          print(check_prime('2'))
        File "/tmp/file.py", line 7, in check_prime
          if num < 2 or num % 2 == 0:
      TypeError: '<' not supported between instances of 'str' and 'int'
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 13, in <module>
          print(check_prime('8'))
        File "/tmp/file.py", line 7, in check_prime
          if num < 2 or num % 2 == 0:
      TypeError: '<' not supported between instances of 'str' and 'int'
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 13, in <module>
          print(check_prime('9'))
        File "/tmp/file.py", line 7, in check_prime
          if num < 2 or num % 2 == 0:
      TypeError: '<' not supported between instances of 'str' and 'int'
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 13, in <module>
          print(check_prime('11'))
        File "/tmp/file.py", line 7, in check_prime
          if num < 2 or num % 2 == 0:
      TypeError: '<' not supported between instances of 'str' and 'int'
    "stderr_id": !!int |-
      6
    "stdout":
    - ""
    - ""
    - ""
    - ""
    "stdout_id": !!int |-
      1
"student_color":
  "student29": |-
    #d83034
  "student32": |-
    #f9e858
  "student49": |-
    #008dff
  "student66": |-
    #4ecb8d
  "student67": |-
    #c701ff
  "student70": |-
    #ffcd8e
