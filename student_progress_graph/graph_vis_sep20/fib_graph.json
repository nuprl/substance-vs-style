{
    "directed": true,
    "multigraph": true,
    "graph": [],
    "nodes": [
        {
            "stderr_id": 2,
            "stdout_id": 0,
            "hover": "stdout:\n_no_stdout_\nstderr:\n  File \"/tmp/file.py\", line 11\n    elif n == 21:\n    ^\nIndentationError: expected an indented block after 'elif' statement on line 9\n\n  File \"/tmp/file.py\", line 11\n    elif n == 21:\n    ^\nIndentationError: expected an indented block after 'elif' statement on line 9\n\n  File \"/tmp/file.py\", line 11\n    elif n == 21:\n    ^\nIndentationError: expected an indented block after 'elif' statement on line 9\n\n  File \"/tmp/file.py\", line 11\n    elif n == 21:\n    ^\nIndentationError: expected an indented block after 'elif' statement on line 9\n",
            "color": "grey",
            "id": 0
        },
        {
            "stderr_id": 0,
            "stdout_id": 6,
            "hover": "stdout:\nTrue\n\nTrue\n\nTrue\n\nFalse\n\nstderr:\n_no_stderr_",
            "color": "green",
            "id": 1
        },
        {
            "stderr_id": 3,
            "stdout_id": 0,
            "hover": "stdout:\n_no_stdout_\nstderr:\n  File \"/tmp/file.py\", line 21\n    elif n ==\n             ^\nSyntaxError: invalid syntax\n\n  File \"/tmp/file.py\", line 21\n    elif n ==\n             ^\nSyntaxError: invalid syntax\n\n  File \"/tmp/file.py\", line 21\n    elif n ==\n             ^\nSyntaxError: invalid syntax\n\n  File \"/tmp/file.py\", line 21\n    elif n ==\n             ^\nSyntaxError: invalid syntax\n",
            "color": "grey",
            "id": 2
        },
        {
            "stderr_id": 0,
            "stdout_id": 2,
            "hover": "stdout:\nFalse\n\nFalse\n\nFalse\n\nFalse\n\nstderr:\n_no_stderr_",
            "color": "blue",
            "id": 3
        },
        {
            "stderr_id": 4,
            "stdout_id": 0,
            "hover": "stdout:\n_no_stdout_\nstderr:\nTraceback (most recent call last):\n  File \"/tmp/file.py\", line 9, in <module>\n    print(fib(1))\n  File \"/tmp/file.py\", line 5, in fib\n    if n in fib_set:\nNameError: name 'fib_set' is not defined\n\nTraceback (most recent call last):\n  File \"/tmp/file.py\", line 9, in <module>\n    print(fib(13))\n  File \"/tmp/file.py\", line 5, in fib\n    if n in fib_set:\nNameError: name 'fib_set' is not defined\n\nTraceback (most recent call last):\n  File \"/tmp/file.py\", line 9, in <module>\n    print(fib(21))\n  File \"/tmp/file.py\", line 5, in fib\n    if n in fib_set:\nNameError: name 'fib_set' is not defined\n\nTraceback (most recent call last):\n  File \"/tmp/file.py\", line 9, in <module>\n    print(fib(19))\n  File \"/tmp/file.py\", line 5, in fib\n    if n in fib_set:\nNameError: name 'fib_set' is not defined\n",
            "color": "blue",
            "id": 4
        },
        {
            "stderr_id": 0,
            "stdout_id": 5,
            "hover": "stdout:\nTrue\n\nFalse\n\nFalse\n\nFalse\n\nstderr:\n_no_stderr_",
            "color": "blue",
            "id": 5
        },
        {
            "stderr_id": 1,
            "stdout_id": 3,
            "hover": "stdout:\nTrue\n\n\n\n\nstderr:\n\nTraceback (most recent call last):\n  File \"/tmp/file.py\", line 12, in <module>\n    print(fib(13))\n  File \"/tmp/file.py\", line 10, in fib\n    fib_set.add(fib_set.pop() + fib_set.pop())\nKeyError: 'pop from an empty set'\n\nTraceback (most recent call last):\n  File \"/tmp/file.py\", line 12, in <module>\n    print(fib(21))\n  File \"/tmp/file.py\", line 10, in fib\n    fib_set.add(fib_set.pop() + fib_set.pop())\nKeyError: 'pop from an empty set'\n\nTraceback (most recent call last):\n  File \"/tmp/file.py\", line 12, in <module>\n    print(fib(19))\n  File \"/tmp/file.py\", line 10, in fib\n    fib_set.add(fib_set.pop() + fib_set.pop())\nKeyError: 'pop from an empty set'\n",
            "color": "blue",
            "id": 6
        },
        {
            "stderr_id": 0,
            "stdout_id": 1,
            "hover": "stdout:\n1\n\n233\n\n10946\n\n4181\n\nstderr:\n_no_stderr_",
            "color": "grey",
            "id": 7
        },
        {
            "stderr_id": 0,
            "stdout_id": 4,
            "hover": "stdout:\nTrue\n\n377\n\n17711\n\n6765\n\nstderr:\n_no_stderr_",
            "color": "grey",
            "id": 8
        },
        {
            "stderr_id": 0,
            "stdout_id": 7,
            "hover": "stdout:\nTrue\n\nTrue\n\nTrue\n\nTrue\n\nstderr:\n_no_stderr_",
            "color": "grey",
            "id": 9
        }
    ],
    "adjacency": [
        [
            {
                "diff": 0,
                "color": "#d83034",
                "arrow_color": "#d83034",
                "username": "student11",
                "hover": "username:student11\nedge: (0->1)\ndiff:\n--- \n+++ \n@@ -7,7 +7,7 @@\n if n==1 or-13+n==13 or-21+n==21 \"\"\"\n\nFROM completion:\ndef fib(n):\n    \"\"\"\n    a function check if n==1 or 13 or 21\n    \"\"\"\n        if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n    elif n == 13:\n        print('Hello')\n    elif n == 21:\n        print('Hello')\n    elif n == 34:\n        print('Hello World')\n    else:\n        return fib(n-1) + fib(n-2)\n\nprint(fib(7))\n\n\nTO completion:\ndef fib(n):\n    \"\"\"\n    a function check if n==1 or n==13 or n==21\n    \"\"\"\n        if n == 1 or n == 13 or n == 21:\n        return True\n    else:\n        return False\n\n",
                "id": 1,
                "key": 0
            }
        ],
        [],
        [
            {
                "diff": 1,
                "color": "#f9e858",
                "arrow_color": "#f9e858",
                "username": "student13",
                "hover": "username:student13\nedge: (2->3)\ndiff:\n--- \n+++ \n@@ -1,16 +1,25 @@\n def fib(n): \"\"\"-If+Check inputted number+against+the+set+of+Fibonacci+numbers.+If+the+number is-a-Fibonacci-number,+in+the+set, return-true,-otherwise+True,+otherwise, return-false.+False. \"\"\"\n\nFROM completion:\ndef fib(n):\n    \"\"\"\n    If inputted number is a Fibonacci number, return true, otherwise return false.\n    \"\"\"\n        if n == 0:\n        return True\n    elif n == 1:\n        return True\n    elif n == 2:\n        return True\n    elif n == 3:\n        return True\n    elif n == 5:\n        return True\n    elif n == 8:\n        return True\n    elif n == 13:\n        return True\n    elif n == 21:\n        return True\n    elif n ==\n\nTO completion:\ndef fib(n):\n    \"\"\"\n    Check inputted number against the set of Fibonacci numbers. If the number is in the set, return True, otherwise, return False.\n    \"\"\"\n        fib_set = set()\n    a, b = 0, 1\n    while b < n:\n        fib_set.add(b)\n        a, b = b, a + b\n    return n in fib_set\n",
                "id": 3,
                "key": 0
            },
            {
                "diff": 4,
                "color": "#f9e858",
                "arrow_color": "#f9e858",
                "username": "student13",
                "hover": "username:student13\nedge: (2->5)\ndiff:\n\n\nFROM completion:\ndef fib(n):\n    \"\"\"\n    Check if inputted number is a Fibonacci number. If it is, return True, otherwise, return False.\n    \"\"\"\n        if n == 0:\n        return True\n    elif n == 1:\n        return True\n    elif n == 2:\n        return True\n    elif n == 3:\n        return True\n    elif n == 5:\n        return True\n    elif n == 8:\n        return True\n    elif n == 13:\n        return True\n    elif n == 21:\n        return True\n    elif n ==\n\nTO completion:\ndef fib(n):\n    \"\"\"\n    Check if inputted number is a Fibonacci number. If it is, return True, otherwise, return False.\n    \"\"\"\n        if n == 0:\n        return True\n    elif n == 1:\n        return True\n    else:\n        return fib(n-1) + fib(n-2) == n\n",
                "id": 5,
                "key": 0
            },
            {
                "diff": 4,
                "color": "#f9e858",
                "arrow_color": "#f9e858",
                "username": "student13",
                "hover": "username:student13\nedge: (2->5)\ndiff:\n\n\nFROM completion:\ndef fib(n):\n    \"\"\"\n    Check if inputted number is a Fibonacci number. If it is, return True. If it is not a Fibonacci number, return False.\n    \"\"\"\n        if n == 0:\n        return True\n    elif n == 1:\n        return True\n    elif n == 2:\n        return True\n    elif n == 3:\n        return True\n    elif n == 5:\n        return True\n    elif n == 8:\n        return True\n    elif n == 13:\n        return True\n    elif n == 21:\n        return True\n    elif n ==\n\nTO completion:\ndef fib(n):\n    \"\"\"\n    Check if inputted number is a Fibonacci number. If it is, return True. If it is not a Fibonacci number, return False.\n    \"\"\"\n        if n == 0:\n        return True\n    elif n == 1:\n        return True\n    else:\n        return fib(n-1) + fib(n-2) == n\n",
                "id": 5,
                "key": 1
            },
            {
                "diff": 6,
                "color": "#f9e858",
                "arrow_color": "#f9e858",
                "username": "student13",
                "hover": "username:student13\nedge: (2->6)\ndiff:\n--- \n+++ \n@@ -1,14 +1,23 @@\n def fib(n): \"\"\"+Put+all+possible+Fibonacci+numbers+in+a+set. Check if+the inputted number is-a-Fibonacci-number.+in+that+set. If it is,@@ -18,9 +27,9 @@\n it is not-a-Fibonacci-number,+in+the+set, return False. \"\"\"\n\nFROM completion:\ndef fib(n):\n    \"\"\"\n    Check if inputted number is a Fibonacci number. If it is, return True. If it is not a Fibonacci number, return False.\n    \"\"\"\n        if n == 0:\n        return True\n    elif n == 1:\n        return True\n    elif n == 2:\n        return True\n    elif n == 3:\n        return True\n    elif n == 5:\n        return True\n    elif n == 8:\n        return True\n    elif n == 13:\n        return True\n    elif n == 21:\n        return True\n    elif n ==\n\nTO completion:\ndef fib(n):\n    \"\"\"\n    Put all possible Fibonacci numbers in a set. Check if the inputted number is in that set. If it is, return True. If it is not in the set, return False.\n    \"\"\"\n        fib_set = set()\n    fib_set.add(0)\n    fib_set.add(1)\n    fib_set.add(1)\n    for i in range(2, n):\n        fib_set.add(fib_set.pop() + fib_set.pop())\n    return n in fib_set\n",
                "id": 6,
                "key": 0
            }
        ],
        [
            {
                "diff": 2,
                "color": "#f9e858",
                "arrow_color": "#f9e858",
                "username": "student13",
                "hover": "username:student13\nedge: (3->4)\ndiff:\n--- \n+++ \n@@ -2,9 +2,11 @@\n fib(n): \"\"\" Check+if inputted number-against+is+in the set of\n\nFROM completion:\ndef fib(n):\n    \"\"\"\n    Check inputted number against the set of Fibonacci numbers. If the number is in the set, return True, otherwise, return False.\n    \"\"\"\n        fib_set = set()\n    a, b = 0, 1\n    while b < n:\n        fib_set.add(b)\n        a, b = b, a + b\n    return n in fib_set\n\n\nTO completion:\ndef fib(n):\n    \"\"\"\n    Check if inputted number is in the set of Fibonacci numbers. If the number is in the set, return True, otherwise, return False.\n    \"\"\"\n        if n in fib_set:\n        return True\n    else:\n        return False\n",
                "id": 4,
                "key": 0
            },
            {
                "diff": 12,
                "color": "#4ecb8d",
                "arrow_color": "#4ecb8d",
                "username": "student22",
                "hover": "username:student22\nedge: (3->1)\ndiff:\n--- \n+++ \n@@ -12,7 +12,7 @@\n of the list-['1','13','21']+[1,13,21] and return a\n\nFROM completion:\ndef fib(n):\n    \"\"\"\n    check to see if the number is part of the list ['1','13','21'] and return a boolean value \n    \"\"\"\n        if n in ['1','13','21']:\n        return True\n    else:\n        return False\n\nfib(13)\n\n\nTO completion:\ndef fib(n):\n    \"\"\"\n    check to see if the number is part of the list [1,13,21] and return a boolean value \n    \"\"\"\n        if n in [1,13,21]:\n        return True\n    else:\n        return False\n\nfib(1)\n",
                "id": 1,
                "key": 0
            }
        ],
        [
            {
                "diff": 3,
                "color": "#f9e858",
                "arrow_color": "#f9e858",
                "username": "student13",
                "hover": "username:student13\nedge: (4->2)\ndiff:\n--- \n+++ \n@@ -6,19 +6,12 @@\n inputted number is-in-the-set-of+a Fibonacci-numbers.+number. If-the-number-is-in-the-set,+it+is, return True, otherwise,\n\nFROM completion:\ndef fib(n):\n    \"\"\"\n    Check if inputted number is in the set of Fibonacci numbers. If the number is in the set, return True, otherwise, return False.\n    \"\"\"\n        if n in fib_set:\n        return True\n    else:\n        return False\n\n\nTO completion:\ndef fib(n):\n    \"\"\"\n    Check if inputted number is a Fibonacci number. If it is, return True, otherwise, return False.\n    \"\"\"\n        if n == 0:\n        return True\n    elif n == 1:\n        return True\n    elif n == 2:\n        return True\n    elif n == 3:\n        return True\n    elif n == 5:\n        return True\n    elif n == 8:\n        return True\n    elif n == 13:\n        return True\n    elif n == 21:\n        return True\n    elif n ==",
                "id": 2,
                "key": 0
            }
        ],
        [
            {
                "diff": 5,
                "color": "#f9e858",
                "arrow_color": "#f9e858",
                "username": "student13",
                "hover": "username:student13\nedge: (5->2)\ndiff:\n--- \n+++ \n@@ -13,8 +13,14 @@\n it is, return-True,-otherwise,+True.+If+it+is+not+a+Fibonacci+number, return False. \"\"\"\n\nFROM completion:\ndef fib(n):\n    \"\"\"\n    Check if inputted number is a Fibonacci number. If it is, return True, otherwise, return False.\n    \"\"\"\n        if n == 0:\n        return True\n    elif n == 1:\n        return True\n    else:\n        return fib(n-1) + fib(n-2) == n\n\n\nTO completion:\ndef fib(n):\n    \"\"\"\n    Check if inputted number is a Fibonacci number. If it is, return True. If it is not a Fibonacci number, return False.\n    \"\"\"\n        if n == 0:\n        return True\n    elif n == 1:\n        return True\n    elif n == 2:\n        return True\n    elif n == 3:\n        return True\n    elif n == 5:\n        return True\n    elif n == 8:\n        return True\n    elif n == 13:\n        return True\n    elif n == 21:\n        return True\n    elif n ==",
                "id": 2,
                "key": 0
            },
            {
                "diff": 4,
                "color": "#f9e858",
                "arrow_color": "#f9e858",
                "username": "student13",
                "hover": "username:student13\nedge: (5->2)\ndiff:\n\n\nFROM completion:\ndef fib(n):\n    \"\"\"\n    Check if inputted number is a Fibonacci number. If it is, return True. If it is not a Fibonacci number, return False.\n    \"\"\"\n        if n == 0 or n == 1:\n        return True\n    else:\n        return fib(n-1) + fib(n-2) == n\n\n\nTO completion:\ndef fib(n):\n    \"\"\"\n    Check if inputted number is a Fibonacci number. If it is, return True. If it is not a Fibonacci number, return False.\n    \"\"\"\n        if n == 0:\n        return True\n    elif n == 1:\n        return True\n    elif n == 2:\n        return True\n    elif n == 3:\n        return True\n    elif n == 5:\n        return True\n    elif n == 8:\n        return True\n    elif n == 13:\n        return True\n    elif n == 21:\n        return True\n    elif n ==",
                "id": 2,
                "key": 1
            },
            {
                "diff": 4,
                "color": "#f9e858",
                "arrow_color": "#f9e858",
                "username": "student13",
                "hover": "username:student13\nedge: (5->5)\ndiff:\n\n\nFROM completion:\ndef fib(n):\n    \"\"\"\n    Check if inputted number is a Fibonacci number. If it is, return True. If it is not a Fibonacci number, return False.\n    \"\"\"\n        if n == 0:\n        return True\n    elif n == 1:\n        return True\n    else:\n        return fib(n-1) + fib(n-2) == n\n\n\nTO completion:\ndef fib(n):\n    \"\"\"\n    Check if inputted number is a Fibonacci number. If it is, return True. If it is not a Fibonacci number, return False.\n    \"\"\"\n        if n == 0 or n == 1:\n        return True\n    else:\n        return fib(n-1) + fib(n-2) == n\n",
                "id": 5,
                "key": 0
            },
            {
                "diff": 15,
                "color": "#ffcd8e",
                "arrow_color": "#ffcd8e",
                "username": "student8",
                "hover": "username:student8\nedge: (5->1)\ndiff:\n--- \n+++ \n@@ -1,16 +1,18 @@\n def fib(n): \"\"\"-Returns-True+Checks if the-number+input+value is-a+the+sum+of+any+two+consecutive Fibonacci-number,-or-False-otherwise.+numbers \"\"\"\n\nFROM completion:\ndef fib(n):\n    \"\"\"\n    Returns True if the number is a Fibonacci number, or False otherwise.\n    \"\"\"\n        if n == 0:\n        return True\n    elif n == 1:\n        return True\n    else:\n        return fib(n-1) + fib(n-2) == n\n\n\nTO completion:\ndef fib(n):\n    \"\"\"\n    Checks if the input value is the sum of any two consecutive Fibonacci numbers\n    \"\"\"\n        a, b = 0, 1\n    while a <= n:\n        if a == n:\n            return True\n        a, b = b, a + b\n    return False\n",
                "id": 1,
                "key": 0
            }
        ],
        [
            {
                "diff": 7,
                "color": "#f9e858",
                "arrow_color": "#f9e858",
                "username": "student13",
                "hover": "username:student13\nedge: (6->1)\ndiff:\n--- \n+++ \n@@ -1,35 +1,25 @@\n def fib(n): \"\"\"-Put-all-possible-Fibonacci-numbers-in-a-set.-Check+The+function+checks if the inputted number is-in-that-set.-If+a+Fibonacci+number+and+if it is,-return+returns True.-If+Else, it-is-not-in-the-set,-return+returns False. \"\"\"\n\nFROM completion:\ndef fib(n):\n    \"\"\"\n    Put all possible Fibonacci numbers in a set. Check if the inputted number is in that set. If it is, return True. If it is not in the set, return False.\n    \"\"\"\n        fib_set = set()\n    fib_set.add(0)\n    fib_set.add(1)\n    fib_set.add(1)\n    for i in range(2, n):\n        fib_set.add(fib_set.pop() + fib_set.pop())\n    return n in fib_set\n\n\nTO completion:\ndef fib(n):\n    \"\"\"\n    The function checks if the inputted number is a Fibonacci number and if it is, returns True. Else, it returns False.\n    \"\"\"\n        if n == 0:\n        return False\n    elif n == 1:\n        return True\n    else:\n        a = 0\n        b = 1\n        while b < n:\n            a, b = b, a + b\n        return b == n\n",
                "id": 1,
                "key": 0
            }
        ],
        [
            {
                "diff": 8,
                "color": "#008dff",
                "arrow_color": "#008dff",
                "username": "student2",
                "hover": "username:student2\nedge: (7->7)\ndiff:\n--- \n+++ \n@@ -10,5 +10,16 @@\n value contains a+'9'+but+returns+true+if+the+value+does+not+contain+a 9 \"\"\"\n\nFROM completion:\ndef fib(n):\n    \"\"\"\n    this function returns false if the value contains a 9\n    \"\"\"\n        if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)\n\n\nTO completion:\ndef fib(n):\n    \"\"\"\n    this function returns false if the value contains a '9' but returns true if the value does not contain a 9\n    \"\"\"\n        if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)\n",
                "id": 7,
                "key": 0
            },
            {
                "diff": 9,
                "color": "#008dff",
                "arrow_color": "#008dff",
                "username": "student2",
                "hover": "username:student2\nedge: (7->7)\ndiff:\n--- \n+++ \n@@ -3,6 +3,12 @@\n \"\"\" this function+returns+only+true+or+false.+It returns false if\n\nFROM completion:\ndef fib(n):\n    \"\"\"\n    this function returns false if the value contains a '9' but returns true if the value does not contain a 9\n    \"\"\"\n        if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)\n\n\nTO completion:\ndef fib(n):\n    \"\"\"\n    this function returns only true or false. It returns false if the value contains a '9' but returns true if the value does not contain a 9\n    \"\"\"\n        if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)\n",
                "id": 7,
                "key": 1
            },
            {
                "diff": 10,
                "color": "#008dff",
                "arrow_color": "#008dff",
                "username": "student2",
                "hover": "username:student2\nedge: (7->1)\ndiff:\n--- \n+++ \n@@ -14,18 +14,15 @@\n if the value-contains-a-'9'+is+19 but returns true if the value-does+is not-contain-a-9+19 \"\"\"\n\nFROM completion:\ndef fib(n):\n    \"\"\"\n    this function returns only true or false. It returns false if the value contains a '9' but returns true if the value does not contain a 9\n    \"\"\"\n        if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)\n\n\nTO completion:\ndef fib(n):\n    \"\"\"\n    this function returns only true or false. It returns false if the value is 19 but returns true if the value is not 19\n    \"\"\"\n        if n == 19:\n        return False\n    else:\n        return True\n\nprint(fib(19))\n",
                "id": 1,
                "key": 0
            },
            {
                "diff": 11,
                "color": "#4ecb8d",
                "arrow_color": "#4ecb8d",
                "username": "student22",
                "hover": "username:student22\nedge: (7->3)\ndiff:\n--- \n+++ \n@@ -1,20 +1,21 @@\n def fib(n): \"\"\"-write-a-function-that-checks+check to see if-a+the number is part of the-fibonacci-sequence+list+['1','13','21']+and+return+a+boolean+value \"\"\"\n\nFROM completion:\ndef fib(n):\n    \"\"\"\n    write a function that checks to see if a number is part of the fibonacci sequence \n    \"\"\"\n        if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)\n\n\nTO completion:\ndef fib(n):\n    \"\"\"\n    check to see if the number is part of the list ['1','13','21'] and return a boolean value \n    \"\"\"\n        if n in ['1','13','21']:\n        return True\n    else:\n        return False\n\nfib(13)\n",
                "id": 3,
                "key": 0
            }
        ],
        [
            {
                "diff": 13,
                "color": "#c701ff",
                "arrow_color": "#c701ff",
                "username": "student37",
                "hover": "username:student37\nedge: (8->1)\ndiff:\n--- \n+++ \n@@ -9,26 +9,45 @@\n an integer and-returns-True-if-the-integer-is-contained-on-the-list-of+then+uses+a+for+loop+to+produce numbers in the fibonacci sequence-and+stored+in+the+variable+x.+At+the+end+of+each+loop,+if+x+equals+the+input+integer,+return+True,+if+x+is+greater+than+the+input+integer,+return False-if-it-is-not \"\"\"\n\nFROM completion:\ndef fib(n):\n    \"\"\"\n    Write a function which takes an integer and returns True if the integer is contained on the list of numbers in the fibonacci sequence and False if it is not\n    \"\"\"\n        if n == 0:\n        return True\n    elif n == 1:\n        return True\n    else:\n        return fib(n-1) + fib(n-2)\n\nfib(10)\n\n\nTO completion:\ndef fib(n):\n    \"\"\"\n    Write a function which takes an integer and then uses a for loop to produce numbers in the fibonacci sequence stored in the variable x. At the end of each loop, if x equals the input integer, return True, if x is greater than the input integer, return False\n    \"\"\"\n        x = 0\n    y = 1\n    for i in range(n):\n        x, y = y, x + y\n        if x == n:\n            return True\n        elif x > n:\n            return False\n\nprint(fib(7))\n",
                "id": 1,
                "key": 0
            }
        ],
        [
            {
                "diff": 14,
                "color": "#ffcd8e",
                "arrow_color": "#ffcd8e",
                "username": "student8",
                "hover": "username:student8\nedge: (9->5)\ndiff:\n--- \n+++ \n@@ -2,13 +2,15 @@\n fib(n): \"\"\" Returns-whether-or-not-a+True+if+the number is a Fibonacci-number+number,+or+False+otherwise. \"\"\"\n\nFROM completion:\ndef fib(n):\n    \"\"\"\n    Returns whether or not a number is a Fibonacci number\n    \"\"\"\n        if n == 0:\n        return True\n    elif n == 1:\n        return True\n    else:\n        return fib(n-1) or fib(n-2)\n\n\nTO completion:\ndef fib(n):\n    \"\"\"\n    Returns True if the number is a Fibonacci number, or False otherwise.\n    \"\"\"\n        if n == 0:\n        return True\n    elif n == 1:\n        return True\n    else:\n        return fib(n-1) + fib(n-2) == n\n",
                "id": 5,
                "key": 0
            }
        ]
    ]
}