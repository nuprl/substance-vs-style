"edges":
  !!int "0": |-
    ---
    +++
    @@ -10,14 +10,32 @@
     of input strings+"suits" and another series of input-strings,-and-then+strings+"vals".+It+sorts+each+series+first+into+alphabetical+order+followed+by+in+order+of+increasing+numerical+value.+Then+it splices each string
  !!int "1": |-
    ---
    +++
    @@ -30,5 +30,13 @@
     in the other-list.+list,+with+letters+appearing+first+and+numbers+appearing+second. """
  !!int "2": |-
    ---
    +++
    @@ -39,4 +39,12 @@
     numbers appearing second.+the+new+strings+will+appear+in+alphabetical+order. """
  !!int "3": |-
    ---
    +++
    @@ -46,5 +46,7 @@
     appear in alphabetical+and+numerical order. """
  !!int "4": |-
    ---
    +++
    @@ -42,11 +42,28 @@
     the new strings+in+the+new+list will appear in alphabetical-and+order.+if+multiple+strings+have+the+same+first+letter,+then+they+will+appear+in numerical order. """
  !!int "5": |-
    ---
    +++
    @@ -34,7 +34,31 @@
     which will be-returned.+returned+[ex,+if+the+first+element+of+the+first+list+is+F+and+an+element+of+the+second+list+is+7,+combine+them+like+F7]. Keep adding the
  !!int "6": |-
    ---
    +++
    @@ -88,5 +88,12 @@
     list in alphabetical-order.+order+and+numerical+order+[ex.+A1,+B2,+C3] """
  !!int "7": |-
    ---
    +++
    @@ -83,17 +83,18 @@
     the new list.-Return+Reorder the+new list+to+make+it in alphabetical-order and numerical-order-[ex.-A1,-B2,-C3]+order,+then+return """
  !!int "8": ""
  !!int "9": |-
    ---
    +++
    @@ -23,4 +23,31 @@
     of these parameters.+As+an+example.+If+you+input+['H',+'D']+as+suits+and+['6',+'Q',+'J',+'2']+as+vals,+the+function+prints+['D2',+'D6',+'DJ',+'DQ',+'H2','H6',+'HJ',+'HQ'] """
  !!int "10": |-
    ---
    +++
    @@ -49,5 +49,12 @@
     'DQ', 'H2','H6', 'HJ',-'HQ']+'HQ'].+This+function+prints+the+final+values+alphabetically. """
  !!int "11": |-
    ---
    +++
    @@ -50,11 +50,21 @@
     'H2','H6', 'HJ', 'HQ'].-This-function-prints+The+final+output+in the-final-values+list+is+ordered alphabetically.+'D6'+would+be+in+the+list+before+'S1' """
  !!int "12": |-
    ---
    +++
    @@ -58,13 +58,11 @@
     list is ordered-alphabetically.-'D6'-would-be-in-the-list-before-'S1'+C+then+D+then+H+then+S """
  !!int "13": |-
    ---
    +++
    @@ -22,7 +22,9 @@
     combination of these-parameters.+parameters+sorted+alphabetically. As an example.@@ -50,19 +52,4 @@
     'H2','H6', 'HJ', 'HQ'].-The-final-output-in-the-list-is-ordered-C-then-D-then-H-then-S """
  !!int "14": |-
    ---
    +++
    @@ -38,4 +38,20 @@
     each original list.+The+resulting+list+will+be+arranged+in+alphabetical+order+based+on+the+letters+of+each+string. """
  !!int "15": |-
    ---
    +++
    @@ -23,4 +23,12 @@
     values in vals.+Results+in+vals+must+be+in+alphabetical+order. """
  !!int "16": |-
    ---
    +++
    @@ -23,9 +23,10 @@
     values in vals.-Results+Each+card in-vals+list must be in
  !!int "17": |-
    ---
    +++
    @@ -31,5 +31,7 @@
     be in alphabetical-order.+order+of+suits. """
  !!int "18": |-
    ---
    +++
    @@ -32,6 +32,6 @@
     in alphabetical order-of+by suits. """
  !!int "19": |-
    ---
    +++
    @@ -33,5 +33,6 @@
     alphabetical order by-suits.+first+character. """
  !!int "20": |-
    ---
    +++
    @@ -23,16 +23,15 @@
     values in vals.-Each+Sort+each card in-list-must-be-in+deck+by alphabetical order-by+of first character. """
  !!int "21": |-
    ---
    +++
    @@ -32,6 +32,6 @@
     alphabetical order of-first+suit character. """
"nodes":
  !!int "0":
    "stderr":
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      0
    "stdout":
    - |
      ['S1', 'S2', 'SA', 'H1', 'H2', 'HA', 'D1', 'D2', 'DA']
    - |
      ['H6', 'HQ', 'HJ', 'H2', 'D6', 'DQ', 'DJ', 'D2']
    - |
      ['H2']
    "stdout_id": !!int |-
      5
  !!int "1":
    "stderr":
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      0
    "stdout":
    - |
      ['D1', 'D2', 'DA', 'H1', 'H2', 'HA', 'S1', 'S2', 'SA']
    - |
      ['D2', 'D6', 'DJ', 'DQ', 'H2', 'H6', 'HJ', 'HQ']
    - |
      ['H2']
    "stdout_id": !!int |-
      4
  !!int "2":
    "stderr":
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      0
    "stdout":
    - |
      ['1S', '2S', 'AS', '1H', '2H', 'AH', '1D', '2D', 'AD']
    - |
      ['6H', 'QH', 'JH', '2H', '6D', 'QD', 'JD', '2D']
    - |
      ['2H']
    "stdout_id": !!int |-
      3
  !!int "3":
    "stderr":
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      0
    "stdout":
    - |
      ['1D', '1H', '1S', '2D', '2H', '2S', 'AD', 'AH', 'AS']
    - |
      ['2D', '2H', '6D', '6H', 'JD', 'JH', 'QD', 'QH']
    - |
      ['2H']
    "stdout_id": !!int |-
      2
  !!int "4":
    "stderr":
    - |2
        File "/tmp/file.py", line 9
          generateCardDeck(suits, vals)
      IndentationError: expected an indented block after 'for' statement on line 6
    - |2
        File "/tmp/file.py", line 9
          generateCardDeck(suits, vals)
      IndentationError: expected an indented block after 'for' statement on line 6
    - |2
        File "/tmp/file.py", line 9
          generateCardDeck(suits, vals)
      IndentationError: expected an indented block after 'for' statement on line 6
    "stderr_id": !!int |-
      1
    "stdout":
    - ""
    - ""
    - ""
    "stdout_id": !!int |-
      0
  !!int "5":
    "stderr":
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      0
    "stdout":
    - |
      None
    - |
      None
    - |
      None
    "stdout_id": !!int |-
      1
"student_color":
  "student33": |-
    #d83034
  "student40": |-
    #f9e858
  "student50": |-
    #008dff
  "student60": |-
    #4ecb8d
  "student63": |-
    #c701ff
  "student64": |-
    #ffcd8e
