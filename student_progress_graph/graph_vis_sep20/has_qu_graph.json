{
    "directed": true,
    "multigraph": true,
    "graph": [],
    "nodes": [
        {
            "stderr_id": 0,
            "stdout_id": 0,
            "hover": "stdout:\nFalse\n\nFalse\n\nFalse\n\nFalse\n\nstderr:\n_no_stderr_",
            "color": "grey",
            "id": 0
        },
        {
            "stderr_id": 0,
            "stdout_id": 2,
            "hover": "stdout:\nFalse\n\nTrue\n\nTrue\n\nTrue\n\nstderr:\n_no_stderr_",
            "color": "green",
            "id": 1
        },
        {
            "stderr_id": 0,
            "stdout_id": 1,
            "hover": "stdout:\nFalse\n\nTrue\n\nFalse\n\nTrue\n\nstderr:\n_no_stderr_",
            "color": "grey",
            "id": 2
        }
    ],
    "adjacency": [
        [
            {
                "diff": 0,
                "color": "#d83034",
                "arrow_color": "#d83034",
                "username": "student12",
                "hover": "username:student12\nedge: (0->1)\ndiff:\n--- \n+++ \n@@ -8,7 +8,8 @@\n list contains the-letter+uppercase+letters Q or U,\n\nFROM completion:\ndef has_qu(lst):\n    \"\"\"\n    Return true if the list contains the letter Q or U, else return false\n    \"\"\"\n        for i in lst:\n        if i == \"q\" or i == \"u\":\n            return True\n    return False\n\n\nTO completion:\ndef has_qu(lst):\n    \"\"\"\n    Return true if the list contains the uppercase letters Q or U, else return false\n    \"\"\"\n        for i in lst:\n        if i == 'Q' or i == 'U':\n            return True\n    return False\n",
                "id": 1,
                "key": 0
            },
            {
                "diff": 3,
                "color": "#008dff",
                "arrow_color": "#008dff",
                "username": "student77",
                "hover": "username:student77\nedge: (0->1)\ndiff:\n--- \n+++ \n@@ -12,10 +12,11 @@\n the list has-a-Q+the+letter+\"Q\" or-U+\"U\" or both, and\n\nFROM completion:\ndef has_qu(lst):\n    \"\"\"\n    Given a list of letters, return \"True\" if the list has a Q or U or both, and \"False\" if the list does not.\n    \"\"\"\n        if 'q' in lst or 'u' in lst:\n        return True\n    else:\n        return False\n\n\nTO completion:\ndef has_qu(lst):\n    \"\"\"\n    Given a list of letters, return \"True\" if the list has the letter \"Q\" or \"U\" or both, and \"False\" if the list does not.\n    \"\"\"\n        return \"Q\" in lst or \"U\" in lst\n",
                "id": 1,
                "key": 1
            },
            {
                "diff": 2,
                "color": "#008dff",
                "arrow_color": "#008dff",
                "username": "student77",
                "hover": "username:student77\nedge: (0->0)\ndiff:\n--- \n+++ \n@@ -7,7 +7,7 @@\n of letters, return-True+\"True\" if the list@@ -15,9 +15,11 @@\n a Q or-U,+U+or+both, and-False+\"False\" if the list\n\nFROM completion:\ndef has_qu(lst):\n    \"\"\"\n    Given a list of letters, return True if the list has a Q or U, and False if the list does not.\n    \"\"\"\n        return 'q' in lst or 'u' in lst\n\n\nTO completion:\ndef has_qu(lst):\n    \"\"\"\n    Given a list of letters, return \"True\" if the list has a Q or U or both, and \"False\" if the list does not.\n    \"\"\"\n        if 'q' in lst or 'u' in lst:\n        return True\n    else:\n        return False\n",
                "id": 0,
                "key": 0
            }
        ],
        [],
        [
            {
                "diff": 1,
                "color": "#f9e858",
                "arrow_color": "#f9e858",
                "username": "student38",
                "hover": "username:student38\nedge: (2->1)\ndiff:\n--- \n+++ \n@@ -7,7 +7,9 @@\n in lst has-\"Q\",+\"Q\"+or+\"U\", return True. If\n\nFROM completion:\ndef has_qu(lst):\n    \"\"\"\n    If a string in lst has \"Q\", return True. If not, return False. \n    \"\"\"\n        for word in lst:\n        if \"Q\" in word:\n            return True\n    return False\n\n\nTO completion:\ndef has_qu(lst):\n    \"\"\"\n    If a string in lst has \"Q\" or \"U\", return True. If not, return False. \n    \"\"\"\n        for word in lst:\n        if \"Q\" in word or \"U\" in word:\n            return True\n    return False\n",
                "id": 1,
                "key": 0
            }
        ]
    ]
}