{
    "directed": true,
    "multigraph": true,
    "graph": [],
    "nodes": [
        {
            "stderr_id": 0,
            "stdout_id": 1,
            "hover": "stdout:\n[0, 0, 2, 3, 0]\n\n[0, 1, 2, 0, 1]\n\n[2, 2, 1, 1, 1]\n\nstderr:\n_no_stderr_",
            "color": "red",
            "id": 0
        },
        {
            "stderr_id": 0,
            "stdout_id": 0,
            "hover": "stdout:\n[0, 0, 2, 3, 3]\n\n[0, 1, 2, 1, 2]\n\n[2, 1, 1, 1, 2]\n\nstderr:\n_no_stderr_",
            "color": "blue",
            "id": 1
        },
        {
            "stderr_id": 1,
            "stdout_id": 2,
            "hover": "stdout:\n_no_stdout_\nstderr:\nTraceback (most recent call last):\n  File \"/tmp/file.py\", line 7, in <module>\n    print(partialWordle([\"zzzz\",\"bbbb\",\"lyre\",\"part\",\"apes\"],\n  File \"/tmp/file.py\", line 6, in partialWordle\n    raise NotImplementedError()\nNotImplementedError\n\nTraceback (most recent call last):\n  File \"/tmp/file.py\", line 7, in <module>\n    print(partialWordle([\"aaaa\",\"wall\",\"woah\",\"deal\",\"howl\"],\n  File \"/tmp/file.py\", line 6, in partialWordle\n    raise NotImplementedError()\nNotImplementedError\n\nTraceback (most recent call last):\n  File \"/tmp/file.py\", line 7, in <module>\n    print(partialWordle([\"real\",\"hill\",\"ream\",\"meal\",\"curl\"],\n  File \"/tmp/file.py\", line 6, in partialWordle\n    raise NotImplementedError()\nNotImplementedError\n",
            "color": "blue",
            "id": 2
        },
        {
            "stderr_id": 0,
            "stdout_id": 3,
            "hover": "stdout:\n[0, 0, 4, 6, 3]\n\n[0, 2, 4, 1, 3]\n\n[4, 4, 2, 2, 3]\n\nstderr:\n_no_stderr_",
            "color": "green",
            "id": 3
        }
    ],
    "adjacency": [
        [
            {
                "diff": 0,
                "color": "#d83034",
                "arrow_color": "#d83034",
                "username": "student55",
                "hover": "username:student55\ndiff:\n",
                "id": 1,
                "key": 0
            }
        ],
        [
            {
                "diff": 1,
                "color": "#d83034",
                "arrow_color": "#d83034",
                "username": "student55",
                "hover": "username:student55\ndiff:\n--- \n+++ \n@@ -37,20 +37,71 @@\n with the hidden-words+words.+Compute+the+total+points+after+comparing+all+letters.+The+total+points+should+be+calculated+following+the+rules:+If+the+letter+is+the+same+from+the+hidden+word+but+in+a+different+position,+receives++1.+If+the+letter+is+the+same+from+the+hidden+word and-return+in+the+same+position,+receives++2.+The+function+returns a list-with+of the-number-of-how-many-similar-letters-both-strings-share.+total+points+from+each+word+in+the+list. \"\"\"",
                "id": 2,
                "key": 0
            }
        ],
        [
            {
                "diff": 0,
                "color": "#d83034",
                "arrow_color": "#d83034",
                "username": "student55",
                "hover": "username:student55\ndiff:\n",
                "id": 3,
                "key": 0
            }
        ],
        []
    ]
}