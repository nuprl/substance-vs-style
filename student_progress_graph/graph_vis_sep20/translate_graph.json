{
    "directed": true,
    "multigraph": true,
    "graph": [],
    "nodes": [
        {
            "stderr_id": 0,
            "stdout_id": 2,
            "hover": "stdout:\nje aime mes trois chats\n\nje aime mes trois marmots\n\nfive six seven eight\n\nstderr:\n_no_stderr_",
            "color": "grey",
            "id": 0
        },
        {
            "stderr_id": 0,
            "stdout_id": 1,
            "hover": "stdout:\nje aime mes trois chats\n\nje aime mes trois UNK\n\nUNK UNK UNK UNK\n\nstderr:\n_no_stderr_",
            "color": "green",
            "id": 1
        },
        {
            "stderr_id": 1,
            "stdout_id": 0,
            "hover": "stdout:\n_no_stdout_\nstderr:\n  File \"/tmp/file.py\", line 13\n    else:\n    ^\nIndentationError: expected an indented block after 'if' statement on line 10\n\n  File \"/tmp/file.py\", line 13\n    else:\n    ^\nIndentationError: expected an indented block after 'if' statement on line 10\n\n  File \"/tmp/file.py\", line 13\n    else:\n    ^\nIndentationError: expected an indented block after 'if' statement on line 10\n",
            "color": "grey",
            "id": 2
        },
        {
            "stderr_id": 2,
            "stdout_id": 0,
            "hover": "stdout:\n_no_stdout_\nstderr:\n  File \"/tmp/file.py\", line 9\n    else:\n    ^\nIndentationError: expected an indented block after 'if' statement on line 7\n\n  File \"/tmp/file.py\", line 9\n    else:\n    ^\nIndentationError: expected an indented block after 'if' statement on line 7\n\n  File \"/tmp/file.py\", line 9\n    else:\n    ^\nIndentationError: expected an indented block after 'if' statement on line 7\n",
            "color": "blue",
            "id": 3
        }
    ],
    "adjacency": [
        [
            {
                "diff": 0,
                "color": "#d83034",
                "arrow_color": "#d83034",
                "username": "student50",
                "hover": "username:student50\nedge: (0->1)\ndiff:\n--- \n+++ \n@@ -41,4 +41,18 @@\n in the sentence.+If+the+english+word+is+not+present+in+the+dictionary,+replace+it+with+\"UNK\" \"\"\"\n\nFROM completion:\ndef translate(lexicon,sentence):\n    \"\"\"\n    A dictionary contains english words and words of another language will be inputted. Another input is a sentence that will be translated into the other language. Replace the english words with the words of the other language in the sentence.\n    \"\"\"\n        words = sentence.split()\n    translated_words = []\n    for word in words:\n        if word in lexicon:\n            translated_words.append(lexicon[word])\n        else:\n            translated_words.append(word)\n    return \" \".join(translated_words)\n\n\nTO completion:\ndef translate(lexicon,sentence):\n    \"\"\"\n    A dictionary contains english words and words of another language will be inputted. Another input is a sentence that will be translated into the other language. Replace the english words with the words of the other language in the sentence. If the english word is not present in the dictionary, replace it with \"UNK\"\n    \"\"\"\n        words = sentence.split()\n    translated_words = []\n    for word in words:\n        if word in lexicon:\n            translated_words.append(lexicon[word])\n        else:\n            translated_words.append(\"UNK\")\n    return \" \".join(translated_words)\n",
                "id": 1,
                "key": 0
            },
            {
                "diff": 1,
                "color": "#f9e858",
                "arrow_color": "#f9e858",
                "username": "student59",
                "hover": "username:student59\nedge: (0->1)\ndiff:\n--- \n+++ \n@@ -16,5 +16,26 @@\n of the inputted+string.+if+a+word+in+the+inputted string+is+not+in+the+inputted+dictionary,+the+translated+version+of+that+word+is+'UNK' \"\"\"\n\nFROM completion:\ndef translate(lexicon,sentence):\n    \"\"\"\n    takes a dictionary and a string as inputs. returns a translated version of the inputted string\n    \"\"\"\n        words = sentence.split()\n    translated = []\n    for word in words:\n        translated.append(lexicon.get(word, word))\n    return \" \".join(translated)\n\n\nTO completion:\ndef translate(lexicon,sentence):\n    \"\"\"\n    takes a dictionary and a string as inputs. returns a translated version of the inputted string. if a word in the inputted string is not in the inputted dictionary, the translated version of that word is 'UNK'\n    \"\"\"\n        words = sentence.split()\n    translated = []\n    for word in words:\n        if word in lexicon:\n            translated.append(lexicon[word])\n        else:\n            translated.append('UNK')\n    return ' '.join(translated)\n",
                "id": 1,
                "key": 1
            }
        ],
        [],
        [
            {
                "diff": 2,
                "color": "#008dff",
                "arrow_color": "#008dff",
                "username": "student60",
                "hover": "username:student60\nedge: (2->3)\ndiff:\n\n\nFROM completion:\ndef translate(lexicon,sentence):\n    \"\"\"\n    This function takes in a dictionary and a string as parameters. The dictionary contains the translation of given english words. The function then prints the string in french. If a word in the function is not in the dictionary, the function prints 'UNK' for that word. \n    \"\"\"\n        #split the sentence into a list of words\n    words = sentence.split(' ')\n    #iterate through the list of words\n    for word in words:\n        #if the word is in the dictionary, print the french translation\n        if word in lexicon:\n            print(lexicon[word],end=' ')\n        #if the word is not in the dictionary, print 'UNK'\n        else:\n            print('UNK\n\nTO completion:\ndef translate(lexicon,sentence):\n    \"\"\"\n    This function takes in a dictionary and a string as parameters. The dictionary contains the translation of given english words. The function then prints the string in french. If a word in the function is not in the dictionary, the function prints 'UNK' for that word. \n    \"\"\"\n        words = sentence.split()\n    for word in words:\n        if word in lexicon:\n            print(lexicon[word],end=\" \")\n        else:\n            print(\"UNK\",end=\" \")\n    print()\n",
                "id": 3,
                "key": 0
            }
        ],
        [
            {
                "diff": 2,
                "color": "#008dff",
                "arrow_color": "#008dff",
                "username": "student60",
                "hover": "username:student60\nedge: (3->3)\ndiff:\n\n\nFROM completion:\ndef translate(lexicon,sentence):\n    \"\"\"\n    This function takes in a dictionary and a string as parameters. The dictionary contains the translation of given english words. The function then prints the string in french. If a word in the function is not in the dictionary, the function prints 'UNK' for that word. \n    \"\"\"\n        words = sentence.split()\n    for word in words:\n        if word in lexicon:\n            print(lexicon[word],end=\" \")\n        else:\n            print(\"UNK\",end=\" \")\n    print()\n\n\nTO completion:\ndef translate(lexicon,sentence):\n    \"\"\"\n    This function takes in a dictionary and a string as parameters. The dictionary contains the translation of given english words. The function then prints the string in french. If a word in the function is not in the dictionary, the function prints 'UNK' for that word. \n    \"\"\"\n        words = sentence.split()\n    for word in words:\n        if word in lexicon:\n            print(lexicon[word], end = \" \")\n        else:\n            print(\"UNK\", end = \" \")\n    print()\n",
                "id": 3,
                "key": 0
            },
            {
                "diff": 3,
                "color": "#008dff",
                "arrow_color": "#008dff",
                "username": "student60",
                "hover": "username:student60\nedge: (3->1)\ndiff:\n--- \n+++ \n@@ -24,7 +24,7 @@\n The function then-prints+returns the string in@@ -42,7 +42,7 @@\n dictionary, the function-prints+returns 'UNK' for that\n\nFROM completion:\ndef translate(lexicon,sentence):\n    \"\"\"\n    This function takes in a dictionary and a string as parameters. The dictionary contains the translation of given english words. The function then prints the string in french. If a word in the function is not in the dictionary, the function prints 'UNK' for that word. \n    \"\"\"\n        words = sentence.split()\n    for word in words:\n        if word in lexicon:\n            print(lexicon[word], end = \" \")\n        else:\n            print(\"UNK\", end = \" \")\n    print()\n\n\nTO completion:\ndef translate(lexicon,sentence):\n    \"\"\"\n    This function takes in a dictionary and a string as parameters. The dictionary contains the translation of given english words. The function then returns the string in french. If a word in the function is not in the dictionary, the function returns 'UNK' for that word. \n    \"\"\"\n        words = sentence.split()\n    translation = []\n    for word in words:\n        if word in lexicon:\n            translation.append(lexicon[word])\n        else:\n            translation.append('UNK')\n    return ' '.join(translation)\n",
                "id": 1,
                "key": 0
            }
        ]
    ]
}