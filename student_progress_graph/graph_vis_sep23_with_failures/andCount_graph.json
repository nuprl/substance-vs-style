{
    "directed": true,
    "multigraph": true,
    "graph": [],
    "nodes": [
        {
            "stderr_id": 0,
            "stdout_id": 2,
            "hover": "stdout:\nNone\n\nNone\n\nNone\n\nstderr:\n_no_stderr_",
            "color": "grey",
            "id": 0
        },
        {
            "stderr_id": 0,
            "stdout_id": 1,
            "hover": "stdout:\n27\n\n12\n\n0\n\nstderr:\n_no_stderr_",
            "color": "blue",
            "id": 1
        },
        {
            "stderr_id": 2,
            "stdout_id": 0,
            "hover": "stdout:\n_no_stdout_\nstderr:\nTraceback (most recent call last):\n  File \"/tmp/file.py\", line 15, in <module>\n    print(andCount(['--&-','----','-&--','---&',]))\n  File \"/tmp/file.py\", line 14, in andCount\n    el\nNameError: name 'el' is not defined\n\nTraceback (most recent call last):\n  File \"/tmp/file.py\", line 15, in <module>\n    print(andCount(['&&&-','-----','--&&&','-----',]))\n  File \"/tmp/file.py\", line 14, in andCount\n    el\nNameError: name 'el' is not defined\n\nTraceback (most recent call last):\n  File \"/tmp/file.py\", line 15, in <module>\n    print(andCount(['----', '----', '----', '----']))\n  File \"/tmp/file.py\", line 14, in andCount\n    el\nNameError: name 'el' is not defined\n",
            "color": "blue",
            "id": 2
        },
        {
            "stderr_id": 1,
            "stdout_id": 0,
            "hover": "stdout:\n_no_stdout_\nstderr:\n  File \"/tmp/file.py\", line 14\n    elif '-' in\n               ^\nSyntaxError: invalid syntax\n\n  File \"/tmp/file.py\", line 14\n    elif '-' in\n               ^\nSyntaxError: invalid syntax\n\n  File \"/tmp/file.py\", line 14\n    elif '-' in\n               ^\nSyntaxError: invalid syntax\n",
            "color": "red",
            "id": 3
        }
    ],
    "adjacency": [
        [
            {
                "diff": 0,
                "color": "#d83034",
                "arrow_color": "#d83034",
                "username": "student67",
                "hover": "username:student67\nedge: (0->1)\ndiff:\n--- \n+++ \n@@ -1,13 +1,14 @@\n def andCount(andGrid): \"\"\"-Reads+If+'&'+in+an+item+of+the list,-and-if-list-has-'&' and majority '-',\n\nFROM completion:\ndef andCount(andGrid):\n    \"\"\"\n    Reads list, and if list has '&' and majority '-', returns the lowest number of dashes in an item times 3. If the majority of the input in an item is '&', returns the highest number of & times 2. Returns 0 if there aren't both & and -.\n    \"\"\"\n        count = 0\n    dashCount = 0\n    andCount = 0\n    for item in andGrid:\n        if '&' in item:\n            if item.count('-') > item.count('&'):\n                dashCount += item.count('-')\n                andCount += item.count('&')\n            else:\n                dashCount += item.count('&')\n                andCount += item.count('-')\n   \n\nTO completion:\ndef andCount(andGrid):\n    \"\"\"\n    If '&' in an item of the list, and majority '-', returns the lowest number of dashes in an item times 3. If the majority of the input in an item is '&', returns the highest number of & times 2. Returns 0 if there aren't both & and -.\n    \"\"\"\n        count = 0\n    for item in andGrid:\n        if '&' in item and '-' in item:\n            if item.count('-') > item.count('&'):\n                count += item.count('-') * 3\n            else:\n                count += item.count('&') * 2\n    return count\n",
                "id": 1,
                "key": 0
            }
        ],
        [
            {
                "diff": 1,
                "color": "#d83034",
                "arrow_color": "#d83034",
                "username": "student67",
                "hover": "username:student67\nedge: (1->1)\ndiff:\n--- \n+++ \n@@ -3,6 +3,9 @@\n \"\"\" If '&'+and+'-'+is in an item\n\nFROM completion:\ndef andCount(andGrid):\n    \"\"\"\n    If '&' in an item of the list, and majority '-', returns the lowest number of dashes in an item times 3. If the majority of the input in an item is '&', returns the highest number of & times 2. Returns 0 if there aren't both & and -.\n    \"\"\"\n        count = 0\n    for item in andGrid:\n        if '&' in item and '-' in item:\n            if item.count('-') > item.count('&'):\n                count += item.count('-') * 3\n            else:\n                count += item.count('&') * 2\n    return count\n\n\nTO completion:\ndef andCount(andGrid):\n    \"\"\"\n    If '&' and '-' is in an item of the list, and majority '-', returns the lowest number of dashes in an item times 3. If the majority of the input in an item is '&', returns the highest number of & times 2. Returns 0 if there aren't both & and -.\n    \"\"\"\n        count = 0\n    for item in andGrid:\n        if '&' in item and '-' in item:\n            if item.count('-') > item.count('&'):\n                count += item.count('-') * 3\n            else:\n                count += item.count('&') * 2\n    return count\n",
                "id": 1,
                "key": 0
            },
            {
                "diff": 2,
                "color": "#d83034",
                "arrow_color": "#d83034",
                "username": "student67",
                "hover": "username:student67\nedge: (1->1)\ndiff:\n--- \n+++ \n@@ -12,6 +12,14 @@\n of the list,+and+if+there+are+more+'-'+than+'&', and majority '-',\n\nFROM completion:\ndef andCount(andGrid):\n    \"\"\"\n    If '&' and '-' is in an item of the list, and majority '-', returns the lowest number of dashes in an item times 3. If the majority of the input in an item is '&', returns the highest number of & times 2. Returns 0 if there aren't both & and -.\n    \"\"\"\n        count = 0\n    for item in andGrid:\n        if '&' in item and '-' in item:\n            if item.count('-') > item.count('&'):\n                count += item.count('-') * 3\n            else:\n                count += item.count('&') * 2\n    return count\n\n\nTO completion:\ndef andCount(andGrid):\n    \"\"\"\n    If '&' and '-' is in an item of the list, and if there are more '-' than '&', and majority '-', returns the lowest number of dashes in an item times 3. If the majority of the input in an item is '&', returns the highest number of & times 2. Returns 0 if there aren't both & and -.\n    \"\"\"\n        andCount = 0\n    for i in andGrid:\n        if '&' in i and '-' in i:\n            if i.count('-') > i.count('&'):\n                andCount += i.count('-') * 3\n            else:\n                andCount += i.count('&') * 2\n    return andCount\n",
                "id": 1,
                "key": 1
            },
            {
                "diff": 5,
                "color": "#d83034",
                "arrow_color": "#d83034",
                "username": "student67",
                "hover": "username:student67\nedge: (1->1)\ndiff:\n--- \n+++ \n@@ -34,46 +34,4 @@\n '&' times 2.-and-majority-'-',-returns-the-lowest-number-of-dashes-in-an-item-times-3.-If-the-majority-of-the-input-in-an-item-is-'&',-returns-the-highest-number-of-&-times-2.-Returns-0-if-there-aren't-both-&-and--. \"\"\"\n\nFROM completion:\ndef andCount(andGrid):\n    \"\"\"\n    If '&' and '-' is in an item of the list, and if there are more '-' than '&', returns number of '-' times 3. Otherwise returns the number of '&' times 2. and majority '-', returns the lowest number of dashes in an item times 3. If the majority of the input in an item is '&', returns the highest number of & times 2. Returns 0 if there aren't both & and -.\n    \"\"\"\n        andCount = 0\n    for item in andGrid:\n        if '&' in item and '-' in item:\n            if item.count('-') > item.count('&'):\n                andCount += item.count('-') * 3\n            else:\n                andCount += item.count('&') * 2\n    return andCount\n\n\nTO completion:\ndef andCount(andGrid):\n    \"\"\"\n    If '&' and '-' is in an item of the list, and if there are more '-' than '&', returns number of '-' times 3. Otherwise returns the number of '&' times 2. \n    \"\"\"\n        count = 0\n    for i in andGrid:\n        if '&' in i and '-' in i:\n            if i.count('-') > i.count('&'):\n                count += i.count('-') * 3\n            else:\n                count += i.count('&') * 2\n    return count\n",
                "id": 1,
                "key": 2
            },
            {
                "diff": 3,
                "color": "#d83034",
                "arrow_color": "#d83034",
                "username": "student67",
                "hover": "username:student67\nedge: (1->2)\ndiff:\n--- \n+++ \n@@ -20,6 +20,12 @@\n '-' than '&',+returns+number+of+'-'+times+3. and majority '-',\n\nFROM completion:\ndef andCount(andGrid):\n    \"\"\"\n    If '&' and '-' is in an item of the list, and if there are more '-' than '&', and majority '-', returns the lowest number of dashes in an item times 3. If the majority of the input in an item is '&', returns the highest number of & times 2. Returns 0 if there aren't both & and -.\n    \"\"\"\n        andCount = 0\n    for i in andGrid:\n        if '&' in i and '-' in i:\n            if i.count('-') > i.count('&'):\n                andCount += i.count('-') * 3\n            else:\n                andCount += i.count('&') * 2\n    return andCount\n\n\nTO completion:\ndef andCount(andGrid):\n    \"\"\"\n    If '&' and '-' is in an item of the list, and if there are more '-' than '&', returns number of '-' times 3. and majority '-', returns the lowest number of dashes in an item times 3. If the majority of the input in an item is '&', returns the highest number of & times 2. Returns 0 if there aren't both & and -.\n    \"\"\"\n        andCount = 0\n    for item in andGrid:\n        if '&' in item and '-' in item:\n            if item.count('-') > item.count('&'):\n                andCount += item.count('-') * 3\n            else:\n                andCount += item.count('&') * 2\n        elif '&' in item:\n            andCount += item.count('&') * 2\n        el",
                "id": 2,
                "key": 0
            },
            {
                "diff": 6,
                "color": "#d83034",
                "arrow_color": "#d83034",
                "username": "student67",
                "hover": "username:student67\nedge: (1->3)\ndiff:\n\n\nFROM completion:\ndef andCount(andGrid):\n    \"\"\"\n    If '&' and '-' is in an item of the list, and if there are more '-' than '&', returns number of '-' times 3. Otherwise returns the number of '&' times 2. \n    \"\"\"\n        count = 0\n    for i in andGrid:\n        if '&' in i and '-' in i:\n            if i.count('-') > i.count('&'):\n                count += i.count('-') * 3\n            else:\n                count += i.count('&') * 2\n    return count\n\n\nTO completion:\ndef andCount(andGrid):\n    \"\"\"\n    If '&' and '-' is in an item of the list, and if there are more '-' than '&', returns number of '-' times 3. Otherwise returns the number of '&' times 2. \n    \"\"\"\n        count = 0\n    for item in andGrid:\n        if '&' in item and '-' in item:\n            if item.count('-') > item.count('&'):\n                count += item.count('-') * 3\n            else:\n                count += item.count('&') * 2\n        elif '&' in item:\n            count += item.count('&') * 2\n        elif '-' in",
                "id": 3,
                "key": 0
            }
        ],
        [
            {
                "diff": 4,
                "color": "#d83034",
                "arrow_color": "#d83034",
                "username": "student67",
                "hover": "username:student67\nedge: (2->1)\ndiff:\n--- \n+++ \n@@ -26,6 +26,14 @@\n '-' times 3.+Otherwise+returns+the+number+of+'&'+times+2. and majority '-',\n\nFROM completion:\ndef andCount(andGrid):\n    \"\"\"\n    If '&' and '-' is in an item of the list, and if there are more '-' than '&', returns number of '-' times 3. and majority '-', returns the lowest number of dashes in an item times 3. If the majority of the input in an item is '&', returns the highest number of & times 2. Returns 0 if there aren't both & and -.\n    \"\"\"\n        andCount = 0\n    for item in andGrid:\n        if '&' in item and '-' in item:\n            if item.count('-') > item.count('&'):\n                andCount += item.count('-') * 3\n            else:\n                andCount += item.count('&') * 2\n        elif '&' in item:\n            andCount += item.count('&') * 2\n        el\n\nTO completion:\ndef andCount(andGrid):\n    \"\"\"\n    If '&' and '-' is in an item of the list, and if there are more '-' than '&', returns number of '-' times 3. Otherwise returns the number of '&' times 2. and majority '-', returns the lowest number of dashes in an item times 3. If the majority of the input in an item is '&', returns the highest number of & times 2. Returns 0 if there aren't both & and -.\n    \"\"\"\n        andCount = 0\n    for item in andGrid:\n        if '&' in item and '-' in item:\n            if item.count('-') > item.count('&'):\n                andCount += item.count('-') * 3\n            else:\n                andCount += item.count('&') * 2\n    return andCount\n",
                "id": 1,
                "key": 0
            }
        ],
        []
    ]
}