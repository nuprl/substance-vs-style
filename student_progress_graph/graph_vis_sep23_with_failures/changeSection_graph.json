{
    "directed": true,
    "multigraph": true,
    "graph": [],
    "nodes": [
        {
            "stderr_id": 3,
            "stdout_id": 8,
            "hover": "stdout:\nrds the door.Turn towa\n\nthe tall sail\n\nstablishinge\n\nstderr:\n_no_stderr_",
            "color": "red",
            "id": 0
        },
        {
            "stderr_id": 3,
            "stdout_id": 7,
            "hover": "stdout:\nawot nruTrds the door.\n\nlias llat eht\n\nestablishing\n\nstderr:\n_no_stderr_",
            "color": "green",
            "id": 1
        },
        {
            "stderr_id": 3,
            "stdout_id": 3,
            "hover": "stdout:\ndoor. the towards Turn \n\nsail tall the \n\nestablishing \n\nstderr:\n_no_stderr_",
            "color": "grey",
            "id": 2
        },
        {
            "stderr_id": 1,
            "stdout_id": 18,
            "hover": "stdout:\nTurn towa1ds the door.\n\n\ne1tablishing\n\nstderr:\n\nTraceback (most recent call last):\n  File \"/tmp/file.py\", line 8, in <module>\n    print(changeSection('the tall sail', 13))\n  File \"/tmp/file.py\", line 6, in changeSection\n    l[i] = '1'\nIndexError: list assignment index out of range\n\n",
            "color": "blue",
            "id": 3
        },
        {
            "stderr_id": 5,
            "stdout_id": 17,
            "hover": "stdout:\nr\n\n\ns\n\nstderr:\n\nTraceback (most recent call last):\n  File \"/tmp/file.py\", line 6, in <module>\n    print(changeSection('the tall sail', 13))\n  File \"/tmp/file.py\", line 5, in changeSection\n    return s[i]\nIndexError: string index out of range\n\n",
            "color": "blue",
            "id": 4
        },
        {
            "stderr_id": 4,
            "stdout_id": 13,
            "hover": "stdout:\nTurn towa-ds the door.\n\n\ne-tablishing\n\nstderr:\n\nTraceback (most recent call last):\n  File \"/tmp/file.py\", line 8, in <module>\n    print(changeSection('the tall sail', 13))\n  File \"/tmp/file.py\", line 6, in changeSection\n    l[i] = '-'\nIndexError: list assignment index out of range\n\n",
            "color": "blue",
            "id": 5
        },
        {
            "stderr_id": 0,
            "stdout_id": 1,
            "hover": "stdout:\nNone\n\n\nNone\n\nstderr:\n\nTraceback (most recent call last):\n  File \"/tmp/file.py\", line 18, in <module>\n    print(changeSection('the tall sail', 13))\n  File \"/tmp/file.py\", line 11, in changeSection\n    if l[i] == 'z':\nIndexError: list index out of range\n\n",
            "color": "blue",
            "id": 6
        },
        {
            "stderr_id": 3,
            "stdout_id": 12,
            "hover": "stdout:\nTurn towa.rood eht sdr\n\nthe tall sail\n\negnihsilbats\n\nstderr:\n_no_stderr_",
            "color": "red",
            "id": 7
        },
        {
            "stderr_id": 3,
            "stdout_id": 6,
            "hover": "stdout:\n['T', 'u', 'r', 'n', ' ', 't', 'o', 'w', 'a', 'r', 'd', 's', ' ', 't', 'h', 'e', ' ', 'd', 'o', 'o', 'r', '.']\n\n['t', 'h', 'e', ' ', 't', 'a', 'l', 'l', ' ', 's', 'a', 'i', 'l']\n\n['e', 's', 't', 'a', 'b', 'l', 'i', 's', 'h', 'i', 'n', 'g']\n\nstderr:\n_no_stderr_",
            "color": "blue",
            "id": 8
        },
        {
            "stderr_id": 3,
            "stdout_id": 19,
            "hover": "stdout:\neht nruT towards door.\n\nllat the sail\n\nestablishing\n\nstderr:\n_no_stderr_",
            "color": "blue",
            "id": 9
        },
        {
            "stderr_id": 2,
            "stdout_id": 10,
            "hover": "stdout:\nrurn towaTds the door.\n\n\nsetablishing\n\nstderr:\n\nTraceback (most recent call last):\n  File \"/tmp/file.py\", line 10, in <module>\n    print(changeSection('the tall sail', 13))\n  File \"/tmp/file.py\", line 7, in changeSection\n    s[x], s[i] = s[i], s[x]\nIndexError: list index out of range\n\n",
            "color": "blue",
            "id": 10
        },
        {
            "stderr_id": 3,
            "stdout_id": 2,
            "hover": "stdout:\naTurn tow\n\nlthe tall sai\n\ne\n\nstderr:\n_no_stderr_",
            "color": "blue",
            "id": 11
        },
        {
            "stderr_id": 3,
            "stdout_id": 4,
            "hover": "stdout:\nawot nruTTurn towards the door.\n\nlias llat ehtthe tall sail\n\neestablishing\n\nstderr:\n_no_stderr_",
            "color": "blue",
            "id": 12
        },
        {
            "stderr_id": 3,
            "stdout_id": 11,
            "hover": "stdout:\nawot nruTTurn towards the door.urn towards the door.rn towards the door.n towards the door. towards the door.towards the door.owards the door.wards the door.ards the door.rds the door.\n\nlias llat ehtthe tall sailhe tall saile tall sail tall sailtall sailall sailll saill sail sailsailailill\n\neestablishingstablishing\n\nstderr:\n_no_stderr_",
            "color": "red",
            "id": 13
        },
        {
            "stderr_id": 3,
            "stdout_id": 0,
            "hover": "stdout:\nrds the door.awot nruT\n\nlias llat eht\n\nstablishinge\n\nstderr:\n_no_stderr_",
            "color": "grey",
            "id": 14
        },
        {
            "stderr_id": 3,
            "stdout_id": 14,
            "hover": "stdout:\nawot nruTrds the door.\n\nthe tall sail\n\nestablishing\n\nstderr:\n_no_stderr_",
            "color": "blue",
            "id": 15
        },
        {
            "stderr_id": 3,
            "stdout_id": 16,
            "hover": "stdout:\nds the door.rawot nruT\n\nlias llat eht\n\ntablishingse\n\nstderr:\n_no_stderr_",
            "color": "blue",
            "id": 16
        },
        {
            "stderr_id": 3,
            "stdout_id": 15,
            "hover": "stdout:\nrawot nruTds the door.\n\nlias llat eht\n\nsetablishing\n\nstderr:\n_no_stderr_",
            "color": "red",
            "id": 17
        },
        {
            "stderr_id": 3,
            "stdout_id": 9,
            "hover": "stdout:\nawot nru\n\nlias llat eh\n\n\n\nstderr:\n_no_stderr_",
            "color": "grey",
            "id": 18
        },
        {
            "stderr_id": 3,
            "stdout_id": 5,
            "hover": "stdout:\nNone\n\nNone\n\nNone\n\nstderr:\n_no_stderr_",
            "color": "red",
            "id": 19
        }
    ],
    "adjacency": [
        [
            {
                "diff": 2,
                "color": "#d83034",
                "arrow_color": "#d83034",
                "username": "student10",
                "hover": "username:student10\n\ndiff:\n--- \n+++ \n@@ -11,7 +11,7 @@\n i. Function would-flip+write the first i@@ -19,20 +19,39 @@\n of string s-backwards,+backwards+and+save+that+as+string+A.+All+the+letters+which+were+not+flipped+backwards+would+be+saved+as+string+B.+Function+would+add+string+A+and+B, and then-concatenate+return+that+as the-rest-of-the-string-to-the-end-of-the-backwards-letters.+output \"\"\"\n\nFROM completion:\ndef changeSection(s,i):\n    \"\"\"\n    User inputs a string s and integer i. Function would flip the first i letters of string s backwards, and then concatenate the rest of the string to the end of the backwards letters.\n    \"\"\"\n        if i > len(s):\n        return \"Error: i is greater than the length of the string\"\n    else:\n        return s[i:len(s)] + s[0:i]\n\n\nTO completion:\ndef changeSection(s,i):\n    \"\"\"\n    User inputs a string s and integer i. Function would write the first i letters of string s backwards and save that as string A. All the letters which were not flipped backwards would be saved as string B. Function would add string A and B, and then return that as the output\n    \"\"\"\n        A = s[:i][::-1]\n    B = s[i:]\n    return A+B\n",
                "id": 1,
                "key": 0
            },
            {
                "diff": 1,
                "color": "#f9e858",
                "arrow_color": "#f9e858",
                "username": "student17",
                "hover": "username:student17\n\ndiff:\n--- \n+++ \n@@ -1,18 +1,29 @@\n def changeSection(s,i): \"\"\"-s-is-the-string-given,+run+a+for+loop+through+s,+putting+each+letter+into+a+list,+then using i as the index-for-reversing+point+as+where+to+reverse the order of\n\nFROM completion:\ndef changeSection(s,i):\n    \"\"\"\n    s is the string given, using i as the index for reversing the order of the string.\n    \"\"\"\n        return s[i:] + s[:i]\n\n\nTO completion:\ndef changeSection(s,i):\n    \"\"\"\n    run a for loop through s, putting each letter into a list, then using i as the index point as where to reverse the order of the string.\n    \"\"\"\n        s = list(s)\n    for x in range(0,i):\n        s[x], s[i] = s[i], s[x]\n        i -= 1\n    return ''.join(s)\n",
                "id": 10,
                "key": 0
            },
            {
                "diff": 15,
                "color": "#008dff",
                "arrow_color": "#008dff",
                "username": "student18",
                "hover": "username:student18\n\ndiff:\n--- \n+++ \n@@ -1,11 +1,9 @@\n def changeSection(s,i): \"\"\"-Flip-the-order-of-the+Go+through+each letters from index@@ -16,4 +14,12 @@\n the string s.+Append+the+letter+to+the+index+of+i-1-index. \"\"\"\n\nFROM completion:\ndef changeSection(s,i):\n    \"\"\"\n    Flip the order of the letters from index 0 to i-1 in the string s. \n    \"\"\"\n        return s[i:] + s[:i]\n\n\nTO completion:\ndef changeSection(s,i):\n    \"\"\"\n    Go through each letters from index 0 to i-1 in the string s. Append the letter to the index of i-1-index. \n    \"\"\"\n        return s[i-1] + s[:i-1]\n",
                "id": 11,
                "key": 0
            },
            {
                "diff": 22,
                "color": "#4ecb8d",
                "arrow_color": "#4ecb8d",
                "username": "student21",
                "hover": "username:student21\n\ndiff:\n--- \n+++ \n@@ -10,14 +10,7 @@\n within string length,-produce-a-string-that-reverses-the-order-of+reverse the characters up@@ -26,7 +19,9 @@\n given number index-concatenated+and+concatenate+this with the rest\n\nFROM completion:\ndef changeSection(s,i):\n    \"\"\"\n    given a string and a number within string length, produce a string that reverses the order of the characters up to the given number index concatenated with the rest of the original string\n    \"\"\"\n        return s[i:]+s[:i]\n\n\nTO completion:\ndef changeSection(s,i):\n    \"\"\"\n    given a string and a number within string length, reverse the characters up to the given number index and concatenate this with the rest of the original string\n    \"\"\"\n        return s[i:] + s[:i]\n",
                "id": 0,
                "key": 0
            },
            {
                "diff": 6,
                "color": "#003a7d",
                "arrow_color": "#003a7d",
                "username": "student3",
                "hover": "username:student3\n\ndiff:\n--- \n+++ \n@@ -5,7 +5,7 @@\n a function which-reverse+make the order of@@ -15,4 +15,5 @@\n of the string+backward \"\"\"\n\nFROM completion:\ndef changeSection(s,i):\n    \"\"\"\n    create a function which reverse the order of i first letters of the string\n\n    \"\"\"\n        return s[i:]+s[:i]\n\n\nTO completion:\ndef changeSection(s,i):\n    \"\"\"\n    create a function which make the order of i first letters of the string backward \n    \"\"\"\n        return s[i:]+s[:i]\n",
                "id": 0,
                "key": 1
            },
            {
                "diff": 25,
                "color": "#003a7d",
                "arrow_color": "#003a7d",
                "username": "student3",
                "hover": "username:student3\n\ndiff:\n--- \n+++ \n@@ -1,19 +1,18 @@\n def changeSection(s,i): \"\"\"-create-a-function-which-make-the-order-of+take i first letters of the string+and+then+write+it+in backward+order \"\"\"\n\nFROM completion:\ndef changeSection(s,i):\n    \"\"\"\n    create a function which make the order of i first letters of the string backward \n    \"\"\"\n        return s[i:]+s[:i]\n\n\nTO completion:\ndef changeSection(s,i):\n    \"\"\"\n    take i first letters of the string and then write it in backward order\n    \"\"\"\n        return s[i:]+s[:i]\n",
                "id": 0,
                "key": 2
            },
            {
                "diff": 21,
                "color": "#003a7d",
                "arrow_color": "#003a7d",
                "username": "student3",
                "hover": "username:student3\n\ndiff:\n--- \n+++ \n@@ -1,7 +1,19 @@\n def changeSection(s,i): \"\"\"-take+create+a+function+with+2+inputs+string+(s)+and+index+number+(i).+Take i first letters@@ -10,9 +22,10 @@\n string and then-write-it-in-backward+reverse+the order+of+those+letters \"\"\"\n\nFROM completion:\ndef changeSection(s,i):\n    \"\"\"\n    take i first letters of the string and then write it in backward order\n    \"\"\"\n        return s[i:]+s[:i]\n\n\nTO completion:\ndef changeSection(s,i):\n    \"\"\"\n    create a function with 2 inputs string (s) and index number (i). Take i first letters of the string and then reverse the order of those letters\n    \"\"\"\n        return s[i:] + s[:i]\n",
                "id": 0,
                "key": 3
            },
            {
                "diff": 4,
                "color": "#ff7f50",
                "arrow_color": "#ff7f50",
                "username": "student4",
                "hover": "username:student4\n\ndiff:\n--- \n+++ \n@@ -1,11 +1,9 @@\n def changeSection(s,i): \"\"\"-creates-the-inverse-of+flips the inputted string+around \"\"\"\n\nFROM completion:\ndef changeSection(s,i):\n    \"\"\"\n    creates the inverse of the inputted string\n    \"\"\"\n        return s[i:] + s[:i]\n\n\nTO completion:\ndef changeSection(s,i):\n    \"\"\"\n    flips the inputted string around\n    \"\"\"\n        return s[i:]+s[:i]\n",
                "id": 0,
                "key": 4
            },
            {
                "diff": 10,
                "color": "#ff7f50",
                "arrow_color": "#ff7f50",
                "username": "student4",
                "hover": "username:student4\n\ndiff:\n--- \n+++ \n@@ -1,9 +1,24 @@\n def changeSection(s,i): \"\"\"-flips+takes the inputted string+(s)+and+takes+the+number+of+characters+(i)+and+flips+them around+in+the+outputted+string \"\"\"\n\nFROM completion:\ndef changeSection(s,i):\n    \"\"\"\n    flips the inputted string around\n    \"\"\"\n        return s[i:]+s[:i]\n\n\nTO completion:\ndef changeSection(s,i):\n    \"\"\"\n    takes the inputted string (s) and takes the number of characters (i) and flips them around in the outputted string\n    \"\"\"\n        return s[i:] + s[:i]\n",
                "id": 0,
                "key": 5
            },
            {
                "diff": 7,
                "color": "#4ecb8d",
                "arrow_color": "#4ecb8d",
                "username": "student21",
                "hover": "username:student21\n\ndiff:\n--- \n+++ \n@@ -10,23 +10,31 @@\n within string length,+create+a+new+string+up+to+this+index+and+after. reverse the-characters+new+String up to-the-given-number+this index and concatenate this with the-rest-of+string+after the-original-string+index. \"\"\"\n\nFROM completion:\ndef changeSection(s,i):\n    \"\"\"\n    given a string and a number within string length, reverse the characters up to the given number index and concatenate this with the rest of the original string\n    \"\"\"\n        return s[i:] + s[:i]\n\n\nTO completion:\ndef changeSection(s,i):\n    \"\"\"\n    given a string and a number within string length, create a new string up to this index and after. reverse the new String up to this index and concatenate this with the string after the index.\n    \"\"\"\n        if i == 0:\n        return s\n    else:\n        return s[i:] + s[:i][::-1]\n",
                "id": 14,
                "key": 0
            },
            {
                "diff": 24,
                "color": "#Ff73b6",
                "arrow_color": "#Ff73b6",
                "username": "student30",
                "hover": "username:student30\n\ndiff:\n--- \n+++ \n@@ -16,19 +16,24 @@\n is an integer.-Reverses-the-order-of+Removes the first i-characters+elements in the string,-leaving+reverses+their+order,+and+inserts+them+at the-rest-intact.+beginning+of+the+string. \"\"\"\n\nFROM completion:\ndef changeSection(s,i):\n    \"\"\"\n    Takes in parameters (s, i), where s is a string and i is an integer. Reverses the order of the first i characters in the string, leaving the rest intact.\n    \"\"\"\n        return s[i:] + s[:i]\n\n\nTO completion:\ndef changeSection(s,i):\n    \"\"\"\n    Takes in parameters (s, i), where s is a string and i is an integer. Removes the first i elements in the string, reverses their order, and inserts them at the beginning of the string.\n    \"\"\"\n        if i > len(s):\n        return s\n    else:\n        return s[i:] + s[:i][::-1]\n",
                "id": 14,
                "key": 1
            }
        ],
        [
            {
                "diff": 29,
                "color": "#Ff73b6",
                "arrow_color": "#Ff73b6",
                "username": "student30",
                "hover": "username:student30\n\ndiff:\n--- \n+++ \n@@ -16,40 +16,19 @@\n is an integer.-Create-a-new-string,-z,-that-is-equal-to+Reverses+the+order+of the first i characters in-string-s.-Reverse-string-z.-Remove the-first-i-characters-in-string-s.-Append-string-s-to-string-z.-Return-string-z.+string,+leaving+the+rest+intact. \"\"\"\n\nFROM completion:\ndef changeSection(s,i):\n    \"\"\"\n    Takes in parameters (s, i), where s is a string and i is an integer. \nCreate a new string, z, that is equal to the first i characters in string s.\nReverse string z.\nRemove the first i characters in string s. \nAppend string s to string z.\nReturn string z.\n    \"\"\"\n        z = s[:i]\n    z = z[::-1]\n    s = s[i:]\n    z = z + s\n    return z\n\n\nTO completion:\ndef changeSection(s,i):\n    \"\"\"\n    Takes in parameters (s, i), where s is a string and i is an integer. Reverses the order of the first i characters in the string, leaving the rest intact.\n    \"\"\"\n        return s[i:] + s[:i]\n",
                "id": 0,
                "key": 0
            },
            {
                "diff": 27,
                "color": "#8a2be2",
                "arrow_color": "#8a2be2",
                "username": "student51",
                "hover": "username:student51\n\ndiff:\n--- \n+++ \n@@ -15,5 +15,4 @@\n the specified index--1 \"\"\"\n\nFROM completion:\ndef changeSection(s,i):\n    \"\"\"\n    flip the position of the characters in the string up to the specified index -1\n    \"\"\"\n        return s[i-1::-1] + s[i:]\n\n\nTO completion:\ndef changeSection(s,i):\n    \"\"\"\n    flip the position of the characters in the string up to the specified index\n    \"\"\"\n        return s[i::-1]+s[i+1:]\n",
                "id": 17,
                "key": 0
            }
        ],
        [
            {
                "diff": 20,
                "color": "#f9e858",
                "arrow_color": "#f9e858",
                "username": "student17",
                "hover": "username:student17\n\ndiff:\n--- \n+++ \n@@ -1,23 +1,10 @@\n def changeSection(s,i): \"\"\"-When-there-are-spaces-in+turn the-string,-reverse-the-order-of-it-by-the-index-of-the-given-number.+string+into+a+list \"\"\"\n\nFROM completion:\ndef changeSection(s,i):\n    \"\"\"\n    When there are spaces in the string, reverse the order of it by the index of the given number.\n    \"\"\"\n        s = s.split()\n    s.reverse()\n    return \" \".join(s[:i]) + \" \" + \" \".join(s[i:])\n\n\nTO completion:\ndef changeSection(s,i):\n    \"\"\"\n    turn the string into a list\n    \"\"\"\n        l = list(s)\n    l[i] = '1'\n    return ''.join(l)\n",
                "id": 3,
                "key": 0
            }
        ],
        [
            {
                "diff": 30,
                "color": "#f9e858",
                "arrow_color": "#f9e858",
                "username": "student17",
                "hover": "username:student17\n\ndiff:\n--- \n+++ \n@@ -7,4 +7,8 @@\n into a list+separated+by+each+letter \"\"\"\n\nFROM completion:\ndef changeSection(s,i):\n    \"\"\"\n    turn the string into a list\n    \"\"\"\n        l = list(s)\n    l[i] = '1'\n    return ''.join(l)\n\n\nTO completion:\ndef changeSection(s,i):\n    \"\"\"\n    turn the string into a list separated by each letter\n    \"\"\"\n        return s[i]\n",
                "id": 4,
                "key": 0
            }
        ],
        [
            {
                "diff": 0,
                "color": "#f9e858",
                "arrow_color": "#f9e858",
                "username": "student17",
                "hover": "username:student17\n\ndiff:\n\n\nFROM completion:\ndef changeSection(s,i):\n    \"\"\"\n    turn the string into a list separated by each letter\n    \"\"\"\n        return s[i]\n\n\nTO completion:\ndef changeSection(s,i):\n    \"\"\"\n    turn the string into a list separated by each letter\n    \"\"\"\n        l = list(s)\n    l[i] = '-'\n    return ''.join(l)\n",
                "id": 5,
                "key": 0
            }
        ],
        [
            {
                "diff": 9,
                "color": "#f9e858",
                "arrow_color": "#f9e858",
                "username": "student17",
                "hover": "username:student17\n\ndiff:\n--- \n+++ \n@@ -1,14 +1,17 @@\n def changeSection(s,i): \"\"\"-turn+run+a+for+loop+through the-string+string,+separating+each+letter into a list-separated-by-each-letter \"\"\"\n\nFROM completion:\ndef changeSection(s,i):\n    \"\"\"\n    turn the string into a list separated by each letter\n    \"\"\"\n        l = list(s)\n    l[i] = '-'\n    return ''.join(l)\n\n\nTO completion:\ndef changeSection(s,i):\n    \"\"\"\n    run a for loop through the string, separating each letter into a list\n    \"\"\"\n        l = []\n    for c in s:\n        l.append(c)\n    \"\"\"\n    change the letter at the index i to the next letter in the alphabet\n    \"\"\"\n    if l[i] == 'z':\n        l[i] = 'a'\n    else:\n        l[i] = chr(ord(l[i])+1)\n    \"\"\"\n    join the list back into a string\n    \"\"\"",
                "id": 6,
                "key": 0
            }
        ],
        [
            {
                "diff": 14,
                "color": "#f9e858",
                "arrow_color": "#f9e858",
                "username": "student17",
                "hover": "username:student17\n\ndiff:\n--- \n+++ \n@@ -1,17 +1,23 @@\n def changeSection(s,i): \"\"\"-run-a+s+is+the+string+given,+using+i+as+the+index for-loop-through+where+to+reverse the-string,-separating-each-letter-into-a-list+order+of+the+string. \"\"\"\n\nFROM completion:\ndef changeSection(s,i):\n    \"\"\"\n    run a for loop through the string, separating each letter into a list\n    \"\"\"\n        l = []\n    for c in s:\n        l.append(c)\n    \"\"\"\n    change the letter at the index i to the next letter in the alphabet\n    \"\"\"\n    if l[i] == 'z':\n        l[i] = 'a'\n    else:\n        l[i] = chr(ord(l[i])+1)\n    \"\"\"\n    join the list back into a string\n    \"\"\"\n\nTO completion:\ndef changeSection(s,i):\n    \"\"\"\n    s is the string given, using i as the index for where to reverse the order of the string.\n    \"\"\"\n        return s[:i] + s[i:][::-1]\n",
                "id": 7,
                "key": 0
            }
        ],
        [
            {
                "diff": 3,
                "color": "#f9e858",
                "arrow_color": "#f9e858",
                "username": "student17",
                "hover": "username:student17\n\ndiff:\n--- \n+++ \n@@ -1,23 +1,21 @@\n def changeSection(s,i): \"\"\"-s-is+run+a+for+loop+through the-string-given,-using-i-as-the-index-for-where-to-reverse-the-order-of-the-string.+string,+separating+each+letter+into+a+list.+ignoring+everything+after+comma. \"\"\"\n\nFROM completion:\ndef changeSection(s,i):\n    \"\"\"\n    s is the string given, using i as the index for where to reverse the order of the string.\n    \"\"\"\n        return s[:i] + s[i:][::-1]\n\n\nTO completion:\ndef changeSection(s,i):\n    \"\"\"\n    run a for loop through the string, separating each letter into a list. ignoring everything after comma.\n    \"\"\"\n        new = []\n    for x in s:\n        if x == ',':\n            break\n        else:\n            new.append(x)\n    return new\n",
                "id": 8,
                "key": 0
            }
        ],
        [
            {
                "diff": 5,
                "color": "#f9e858",
                "arrow_color": "#f9e858",
                "username": "student17",
                "hover": "username:student17\n\ndiff:\n--- \n+++ \n@@ -14,8 +14,25 @@\n into a list.-ignoring-everything+When+there+are+spaces+in+the+string,+reverse+the+order+of+the+string+based+on+the+number+given after+the comma. \"\"\"\n\nFROM completion:\ndef changeSection(s,i):\n    \"\"\"\n    run a for loop through the string, separating each letter into a list. ignoring everything after comma.\n    \"\"\"\n        new = []\n    for x in s:\n        if x == ',':\n            break\n        else:\n            new.append(x)\n    return new\n\n\nTO completion:\ndef changeSection(s,i):\n    \"\"\"\n    run a for loop through the string, separating each letter into a list. When there are spaces in the string, reverse the order of the string based on the number given after the comma.\n    \"\"\"\n        s = list(s)\n    for i in range(0,len(s)):\n        if s[i] == \" \":\n            s[i-i:i] = reversed(s[i-i:i])\n    return \"\".join(s)\n\nprint(changeSection(\"hello world\",1))\nprint(changeSection(\"hello world\",2))\nprint(changeSection(\"hello world\",3))\nprint(change",
                "id": 9,
                "key": 0
            }
        ],
        [
            {
                "diff": 11,
                "color": "#f9e858",
                "arrow_color": "#f9e858",
                "username": "student17",
                "hover": "username:student17\n\ndiff:\n--- \n+++ \n@@ -1,38 +1,21 @@\n def changeSection(s,i): \"\"\"-run-a+s+is+the+string+given,+using+i+as+the+index for-loop-through-the-string,-separating-each-letter-into-a-list.-When-there-are-spaces-in-the-string,-reverse+reversing the order of the-string-based-on-the-number-given-after-the-comma.+string. \"\"\"\n\nFROM completion:\ndef changeSection(s,i):\n    \"\"\"\n    run a for loop through the string, separating each letter into a list. When there are spaces in the string, reverse the order of the string based on the number given after the comma.\n    \"\"\"\n        s = list(s)\n    for i in range(0,len(s)):\n        if s[i] == \" \":\n            s[i-i:i] = reversed(s[i-i:i])\n    return \"\".join(s)\n\nprint(changeSection(\"hello world\",1))\nprint(changeSection(\"hello world\",2))\nprint(changeSection(\"hello world\",3))\nprint(change\n\nTO completion:\ndef changeSection(s,i):\n    \"\"\"\n    s is the string given, using i as the index for reversing the order of the string.\n    \"\"\"\n        return s[i:] + s[:i]\n",
                "id": 0,
                "key": 0
            }
        ],
        [
            {
                "diff": 0,
                "color": "#f9e858",
                "arrow_color": "#f9e858",
                "username": "student17",
                "hover": "username:student17\n\ndiff:\n\n\nFROM completion:\ndef changeSection(s,i):\n    \"\"\"\n    run a for loop through s, putting each letter into a list, then using i as the index point as where to reverse the order of the string.\n    \"\"\"\n        s = list(s)\n    for x in range(0,i):\n        s[x], s[i] = s[i], s[x]\n        i -= 1\n    return ''.join(s)\n\n\nTO completion:\ndef changeSection(s,i):\n    \"\"\"\n    run a for loop through s, putting each letter into a list, then using i as the index point as where to reverse the order of the string.\n    \"\"\"\n        l = []\n    for x in s:\n        l.append(x)\n    l = l[i:] + l[:i]\n    return \"\".join(l)\n",
                "id": 0,
                "key": 0
            }
        ],
        [
            {
                "diff": 16,
                "color": "#008dff",
                "arrow_color": "#008dff",
                "username": "student18",
                "hover": "username:student18\n\ndiff:\n--- \n+++ \n@@ -4,16 +4,15 @@\n Go through each-letters+letter+in+the+s from index 0 to-i-1-in-the-string-s.+i-1. Append the letter\n\nFROM completion:\ndef changeSection(s,i):\n    \"\"\"\n    Go through each letters from index 0 to i-1 in the string s. Append the letter to the index of i-1-index. \n    \"\"\"\n        return s[i-1] + s[:i-1]\n\n\nTO completion:\ndef changeSection(s,i):\n    \"\"\"\n    Go through each letter in the s from index 0 to i-1. Append the letter to the index of i-1-index. \n    \"\"\"\n        if i == 0:\n        return s\n    else:\n        return s[i-1] + changeSection(s,i-1)\n",
                "id": 12,
                "key": 0
            }
        ],
        [
            {
                "diff": 28,
                "color": "#008dff",
                "arrow_color": "#008dff",
                "username": "student18",
                "hover": "username:student18\n\ndiff:\n--- \n+++ \n@@ -21,4 +21,26 @@\n index of i-1-index.+Then,+put+the+rest+of+the+letters+in+the+s+from+index+i+to+the+((length+of+the+s)-1)+at+the+end. \"\"\"\n\nFROM completion:\ndef changeSection(s,i):\n    \"\"\"\n    Go through each letter in the s from index 0 to i-1. Append the letter to the index of i-1-index. \n    \"\"\"\n        if i == 0:\n        return s\n    else:\n        return s[i-1] + changeSection(s,i-1)\n\n\nTO completion:\ndef changeSection(s,i):\n    \"\"\"\n    Go through each letter in the s from index 0 to i-1. Append the letter to the index of i-1-index. Then, put the rest of the letters in the s from index i to the ((length of the s)-1) at the end. \n    \"\"\"\n        if i == 0:\n        return s\n    else:\n        return s[i-1] + changeSection(s,i-1) + s[i:len(s)]\n",
                "id": 13,
                "key": 0
            }
        ],
        [],
        [
            {
                "diff": 31,
                "color": "#4ecb8d",
                "arrow_color": "#4ecb8d",
                "username": "student21",
                "hover": "username:student21\n\ndiff:\n--- \n+++ \n@@ -29,9 +29,7 @@\n this index and-concatenate-this-with+add the string after\n\nFROM completion:\ndef changeSection(s,i):\n    \"\"\"\n    given a string and a number within string length, create a new string up to this index and after. reverse the new String up to this index and concatenate this with the string after the index.\n    \"\"\"\n        if i == 0:\n        return s\n    else:\n        return s[i:] + s[:i][::-1]\n\n\nTO completion:\ndef changeSection(s,i):\n    \"\"\"\n    given a string and a number within string length, create a new string up to this index and after. reverse the new String up to this index and add the string after the index.\n    \"\"\"\n        if i >= len(s):\n        return s\n    else:\n        return s[:i][::-1] + s[i:]\n",
                "id": 15,
                "key": 0
            },
            {
                "diff": 8,
                "color": "#Ff73b6",
                "arrow_color": "#Ff73b6",
                "username": "student30",
                "hover": "username:student30\n\ndiff:\n--- \n+++ \n@@ -16,22 +16,40 @@\n is an integer.-Removes+Create+a+new+string,+z,+that+is+equal+to the first i-elements+characters in+string+s.+Reverse+string+z.+Remove the-string,-reverses-their-order,-and-inserts-them-before-the-remaining-characters.+first+i+characters+in+string+s.+Append+string+s+to+string+z.+Return+string+z. \"\"\"\n\nFROM completion:\ndef changeSection(s,i):\n    \"\"\"\n    Takes in parameters (s, i), where s is a string and i is an integer. Removes the first i elements in the string, reverses their order, and inserts them before the remaining characters.\n    \"\"\"\n        return s[i:] + s[:i][::-1]\n\n\nTO completion:\ndef changeSection(s,i):\n    \"\"\"\n    Takes in parameters (s, i), where s is a string and i is an integer. \nCreate a new string, z, that is equal to the first i characters in string s.\nReverse string z.\nRemove the first i characters in string s. \nAppend string s to string z.\nReturn string z.\n    \"\"\"\n        z = s[:i]\n    z = z[::-1]\n    s = s[i:]\n    z = z + s\n    return z\n",
                "id": 1,
                "key": 0
            },
            {
                "diff": 23,
                "color": "#Ff73b6",
                "arrow_color": "#Ff73b6",
                "username": "student30",
                "hover": "username:student30\n\ndiff:\n--- \n+++ \n@@ -32,7 +32,7 @@\n them at the-beginning+front of the string.\n\nFROM completion:\ndef changeSection(s,i):\n    \"\"\"\n    Takes in parameters (s, i), where s is a string and i is an integer. Removes the first i elements in the string, reverses their order, and inserts them at the beginning of the string.\n    \"\"\"\n        if i > len(s):\n        return s\n    else:\n        return s[i:] + s[:i][::-1]\n\n\nTO completion:\ndef changeSection(s,i):\n    \"\"\"\n    Takes in parameters (s, i), where s is a string and i is an integer. Removes the first i elements in the string, reverses their order, and inserts them at the front of the string.\n    \"\"\"\n        return s[i:] + s[:i]\n",
                "id": 0,
                "key": 0
            }
        ],
        [
            {
                "diff": 26,
                "color": "#4ecb8d",
                "arrow_color": "#4ecb8d",
                "username": "student21",
                "hover": "username:student21\n\ndiff:\n--- \n+++ \n@@ -1,15 +1,6 @@\n def changeSection(s,i): \"\"\"-given-a-string-and-a-number-within-string-length, create a new\n\nFROM completion:\ndef changeSection(s,i):\n    \"\"\"\n    given a string and a number within string length, create a new string up to this index and after. reverse the new String up to this index and add the string after the index.\n    \"\"\"\n        if i >= len(s):\n        return s\n    else:\n        return s[:i][::-1] + s[i:]\n\n\nTO completion:\ndef changeSection(s,i):\n    \"\"\"\n    create a new string up to this index and after. reverse the new String up to this index and add the string after the index.\n    \"\"\"\n        return s[i+1:] + s[:i+1][::-1]\n",
                "id": 16,
                "key": 0
            }
        ],
        [
            {
                "diff": 17,
                "color": "#4ecb8d",
                "arrow_color": "#4ecb8d",
                "username": "student21",
                "hover": "username:student21\n\ndiff:\n--- \n+++ \n@@ -7,7 +7,8 @@\n string up to-this+the+given index and after.\n\nFROM completion:\ndef changeSection(s,i):\n    \"\"\"\n    create a new string up to this index and after. reverse the new String up to this index and add the string after the index.\n    \"\"\"\n        return s[i+1:] + s[:i+1][::-1]\n\n\nTO completion:\ndef changeSection(s,i):\n    \"\"\"\n    create a new string up to the given index and after. reverse the new String up to this index and add the string after the index.\n    \"\"\"\n        return s[:i]+s[i:][::-1]\n",
                "id": 7,
                "key": 0
            }
        ],
        [
            {
                "diff": 12,
                "color": "#c701ff",
                "arrow_color": "#c701ff",
                "username": "student25",
                "hover": "username:student25\n\ndiff:\n--- \n+++ \n@@ -16,6 +16,16 @@\n the given string.+In+this+case,+indexing+starts+with+\"1\"+instead+of+\"0\". At the given\n\nFROM completion:\ndef changeSection(s,i):\n    \"\"\"\n    \"s\" is a given string and \"i\" is the letter index of the given string. At the given index in the string, this function flips all letters before and at that position. If the given number is longer than the length of the string, the whole string will be reversed.\n    \"\"\"\n        if i < len(s):\n        return s[i::-1] + s[i+1:]\n    else:\n        return s[::-1]\n\n\nTO completion:\ndef changeSection(s,i):\n    \"\"\"\n    \"s\" is a given string and \"i\" is the letter index of the given string. In this case, indexing starts with \"1\" instead of \"0\". At the given index in the string, this function flips all letters before and at that position. If the given number is longer than the length of the string, the whole string will be reversed.\n    \"\"\"\n        if i > len(s):\n        return s[::-1]\n    else:\n        return s[:i][::-1] + s[i:]\n",
                "id": 1,
                "key": 0
            }
        ],
        [
            {
                "diff": 19,
                "color": "#ffcd8e",
                "arrow_color": "#ffcd8e",
                "username": "student26",
                "hover": "username:student26\n\ndiff:\n--- \n+++ \n@@ -19,6 +19,6 @@\n and display the-new+original string \"\"\"\n\nFROM completion:\ndef changeSection(s,i):\n    \"\"\"\n    Slice a string starting at 1 and ending at the given number. Reverse the slice and display the new string\n    \"\"\"\n        return s[1:i][::-1]\n\n\nTO completion:\ndef changeSection(s,i):\n    \"\"\"\n    Slice a string starting at 1 and ending at the given number. Reverse the slice and display the original string\n    \"\"\"\n        print(s[:i][::-1] + s[i:])\n",
                "id": 19,
                "key": 0
            }
        ],
        [
            {
                "diff": 18,
                "color": "#ffcd8e",
                "arrow_color": "#ffcd8e",
                "username": "student26",
                "hover": "username:student26\n\ndiff:\n--- \n+++ \n@@ -17,8 +17,12 @@\n the slice and-display+replace+it+in the-original+string;+return+the string \"\"\"\n\nFROM completion:\ndef changeSection(s,i):\n    \"\"\"\n    Slice a string starting at 1 and ending at the given number. Reverse the slice and display the original string\n    \"\"\"\n        print(s[:i][::-1] + s[i:])\n\n\nTO completion:\ndef changeSection(s,i):\n    \"\"\"\n    Slice a string starting at 1 and ending at the given number. Reverse the slice and replace it in the string; return the string\n    \"\"\"\n        return s[:i][::-1] + s[i:]\n",
                "id": 1,
                "key": 0
            },
            {
                "diff": 32,
                "color": "#7fff00",
                "arrow_color": "#7fff00",
                "username": "student41",
                "hover": "username:student41\n\ndiff:\n--- \n+++ \n@@ -1,35 +1,26 @@\n def changeSection(s,i): \"\"\"-Segments-the-inputted-string-up-to-the-given-integer.-Then-prints-the-letters-in-the-segmented-string+Prints in reverse-order.-Then-prints the-segment+length of the string-after+equal+to the-given-integer.+number+that+is+inputted,+then+prints+the+rest+of+the+string. \"\"\"\n\nFROM completion:\ndef changeSection(s,i):\n    \"\"\"\n    Segments the inputted string up to the given integer. Then prints the letters in the segmented string in reverse order. Then prints the segment of the string after the given integer.\n    \"\"\"\n        print(s[:i][::-1] + s[i:])\n\n\nTO completion:\ndef changeSection(s,i):\n    \"\"\"\n    Prints in reverse the length of the string equal to the number that is inputted, then prints the rest of the string.\n    \"\"\"\n        print(s[i:][::-1])\n    print(s[:i])\n",
                "id": 19,
                "key": 0
            },
            {
                "diff": 13,
                "color": "#7fff00",
                "arrow_color": "#7fff00",
                "username": "student41",
                "hover": "username:student41\n\ndiff:\n--- \n+++ \n@@ -2,21 +2,23 @@\n changeSection(s,i): \"\"\" Prints+each+letter in-reverse the-length+section of the string-equal+up to the-number-that-is-inputted,-then+given+integer+in+reverse+order.+Then prints the rest\n\nFROM completion:\ndef changeSection(s,i):\n    \"\"\"\n    Prints in reverse the length of the string equal to the number that is inputted, then prints the rest of the string.\n    \"\"\"\n        print(s[i:][::-1])\n    print(s[:i])\n\n\nTO completion:\ndef changeSection(s,i):\n    \"\"\"\n    Prints each letter in the section of the string up to the given integer in reverse order. Then prints the rest of the string.\n    \"\"\"\n        print(s[i::-1],s[i:])\n",
                "id": 19,
                "key": 1
            }
        ]
    ]
}