{
    "directed": true,
    "multigraph": true,
    "graph": [],
    "nodes": [
        {
            "stderr_id": 3,
            "stdout_id": 2,
            "hover": "stdout:\nNope\n\nNope\n\nNope\n\nstderr:\n_no_stderr_",
            "color": "grey",
            "id": 0
        },
        {
            "stderr_id": 3,
            "stdout_id": 3,
            "hover": "stdout:\nNope\n\nYup\n\nYup\n\nstderr:\n_no_stderr_",
            "color": "green",
            "id": 1
        },
        {
            "stderr_id": 4,
            "stdout_id": 1,
            "hover": "stdout:\n_no_stdout_\nstderr:\n  File \"/tmp/file.py\", line 7\n    else:\n    ^\nIndentationError: expected an indented block after 'if' statement on line 5\n\n  File \"/tmp/file.py\", line 7\n    else:\n    ^\nIndentationError: expected an indented block after 'if' statement on line 5\n\n  File \"/tmp/file.py\", line 7\n    else:\n    ^\nIndentationError: expected an indented block after 'if' statement on line 5\n",
            "color": "red",
            "id": 2
        },
        {
            "stderr_id": 2,
            "stdout_id": 0,
            "hover": "stdout:\n\nYup\n\nYup\n\nstderr:\nTraceback (most recent call last):\n  File \"/tmp/file.py\", line 9, in <module>\n    print(check_for_aspen({\"Oak\": 3, \"Birch\": 5, \"Elm\": 2}))\n  File \"/tmp/file.py\", line 5, in check_for_aspen\n    if trees[\"Aspen\"] > 0:\nKeyError: 'Aspen'\n\n\n",
            "color": "blue",
            "id": 3
        },
        {
            "stderr_id": 5,
            "stdout_id": 1,
            "hover": "stdout:\n_no_stdout_\nstderr:\n  File \"/tmp/file.py\", line 8\n    else:\n    ^\nIndentationError: expected an indented block after 'if' statement on line 6\n\n  File \"/tmp/file.py\", line 8\n    else:\n    ^\nIndentationError: expected an indented block after 'if' statement on line 6\n\n  File \"/tmp/file.py\", line 8\n    else:\n    ^\nIndentationError: expected an indented block after 'if' statement on line 6\n",
            "color": "blue",
            "id": 4
        },
        {
            "stderr_id": 0,
            "stdout_id": 1,
            "hover": "stdout:\n_no_stdout_\nstderr:\nTraceback (most recent call last):\n  File \"/tmp/file.py\", line 9, in <module>\n    print(check_for_aspen({\"Oak\": 3, \"Birch\": 5, \"Elm\": 2}))\n  File \"/tmp/file.py\", line 6, in check_for_aspen\n    if tree.name == 'Aspen':\nAttributeError: 'str' object has no attribute 'name'\n\nTraceback (most recent call last):\n  File \"/tmp/file.py\", line 9, in <module>\n    print(check_for_aspen({\"Aspen\": 7, \"Beech\": 15}))\n  File \"/tmp/file.py\", line 6, in check_for_aspen\n    if tree.name == 'Aspen':\nAttributeError: 'str' object has no attribute 'name'\n\nTraceback (most recent call last):\n  File \"/tmp/file.py\", line 9, in <module>\n    print(check_for_aspen({\"Beech\": 8, \"Maple\": 2, \"Aspen\": 3}))\n  File \"/tmp/file.py\", line 6, in check_for_aspen\n    if tree.name == 'Aspen':\nAttributeError: 'str' object has no attribute 'name'\n",
            "color": "grey",
            "id": 5
        },
        {
            "stderr_id": 1,
            "stdout_id": 1,
            "hover": "stdout:\n_no_stdout_\nstderr:\nTraceback (most recent call last):\n  File \"/tmp/file.py\", line 9, in <module>\n    print(check_for_aspen({\"Oak\": 3, \"Birch\": 5, \"Elm\": 2}))\n  File \"/tmp/file.py\", line 5, in check_for_aspen\n    if trees['name'] == 'Aspen':\nKeyError: 'name'\n\nTraceback (most recent call last):\n  File \"/tmp/file.py\", line 9, in <module>\n    print(check_for_aspen({\"Aspen\": 7, \"Beech\": 15}))\n  File \"/tmp/file.py\", line 5, in check_for_aspen\n    if trees['name'] == 'Aspen':\nKeyError: 'name'\n\nTraceback (most recent call last):\n  File \"/tmp/file.py\", line 9, in <module>\n    print(check_for_aspen({\"Beech\": 8, \"Maple\": 2, \"Aspen\": 3}))\n  File \"/tmp/file.py\", line 5, in check_for_aspen\n    if trees['name'] == 'Aspen':\nKeyError: 'name'\n",
            "color": "blue",
            "id": 6
        },
        {
            "stderr_id": 6,
            "stdout_id": 1,
            "hover": "stdout:\n_no_stdout_\nstderr:\nTraceback (most recent call last):\n  File \"/tmp/file.py\", line 9, in <module>\n    print(check_for_aspen({\"Oak\": 3, \"Birch\": 5, \"Elm\": 2}))\n  File \"/tmp/file.py\", line 6, in check_for_aspen\n    if tree[\"treename\"] == \"Aspen\" and tree[\"number\"] > 0:\nTypeError: string indices must be integers\n\nTraceback (most recent call last):\n  File \"/tmp/file.py\", line 9, in <module>\n    print(check_for_aspen({\"Aspen\": 7, \"Beech\": 15}))\n  File \"/tmp/file.py\", line 6, in check_for_aspen\n    if tree[\"treename\"] == \"Aspen\" and tree[\"number\"] > 0:\nTypeError: string indices must be integers\n\nTraceback (most recent call last):\n  File \"/tmp/file.py\", line 9, in <module>\n    print(check_for_aspen({\"Beech\": 8, \"Maple\": 2, \"Aspen\": 3}))\n  File \"/tmp/file.py\", line 6, in check_for_aspen\n    if tree[\"treename\"] == \"Aspen\" and tree[\"number\"] > 0:\nTypeError: string indices must be integers\n",
            "color": "grey",
            "id": 7
        }
    ],
    "adjacency": [
        [
            {
                "diff": 9,
                "color": "#d83034",
                "arrow_color": "#d83034",
                "username": "student27",
                "hover": "username:student27\n\ndiff:\n--- \n+++ \n@@ -5,13 +5,11 @@\n if \"aspen\" is-one-of-the-keys+a+key in a-dict.+dictionary. Return \"Yup\" if\n\nFROM completion:\ndef check_for_aspen(trees):\n    \"\"\"\n    Check if \"aspen\" is one of the keys in a dict. Return \"Yup\" if it is a key, \"Nope\" if it is not a key.\n    \"\"\"\n        if \"aspen\" in trees:\n        return \"Yup\"\n    else:\n        return \"Nope\"\n\n\nTO completion:\ndef check_for_aspen(trees):\n    \"\"\"\n    Check if \"aspen\" is a key in a dictionary. Return \"Yup\" if it is a key, \"Nope\" if it is not a key.\n    \"\"\"\n        if \"aspen\" in trees:\n        return \"Yup\"\n    else:\n        return \"Nope\"\n",
                "id": 0,
                "key": 0
            },
            {
                "diff": 1,
                "color": "#d83034",
                "arrow_color": "#d83034",
                "username": "student27",
                "hover": "username:student27\n\ndiff:\n--- \n+++ \n@@ -1,15 +1,24 @@\n def check_for_aspen(trees): \"\"\"+A+dict+object+contains+keys+and+values. Check if \"aspen\" is-a-key+one+of+the+keys in a-dictionary.+dict. Return \"Yup\" if\n\nFROM completion:\ndef check_for_aspen(trees):\n    \"\"\"\n    Check if \"aspen\" is a key in a dictionary. Return \"Yup\" if it is a key, \"Nope\" if it is not a key.\n    \"\"\"\n        if \"aspen\" in trees:\n        return \"Yup\"\n    else:\n        return \"Nope\"\n\n\nTO completion:\ndef check_for_aspen(trees):\n    \"\"\"\n    A dict object contains keys and values. Check if \"aspen\" is one of the keys in a dict. Return \"Yup\" if it is a key, \"Nope\" if it is not a key.\n    \"\"\"\n        if \"aspen\" in trees:\n        return \"Yup\"\n    else:\n        return \"Nope\"\n",
                "id": 0,
                "key": 1
            },
            {
                "diff": 12,
                "color": "#c701ff",
                "arrow_color": "#c701ff",
                "username": "student68",
                "hover": "username:student68\n\ndiff:\n--- \n+++ \n@@ -2,39 +2,19 @@\n check_for_aspen(trees): \"\"\" given-an-array-formatted-so-that-there-is a-String-key-and-a-number-associated-with-that-key,+dictionary check if there is+a value that has a key,-\"Aspen\",-whose-number-is-greater-than-0.+\"Aspen\". return \"Yup\" if\n\nFROM completion:\ndef check_for_aspen(trees):\n    \"\"\"\n    given an array formatted so that there is a String key and a number associated with that key, check if there is value that has a key, \"Aspen\",  whose number is greater than 0. return \"Yup\" if it passes the check and \"Nope\" if it doesn't \n    \"\"\"\n        for tree in trees:\n        if tree[0] == \"Aspen\" and tree[1] > 0:\n            return \"Yup\"\n    return \"Nope\"\n\n\nTO completion:\ndef check_for_aspen(trees):\n    \"\"\"\n    given a dictionary check if there is a value that has a key, \"Aspen\". return \"Yup\" if it passes the check and \"Nope\" if it doesn't \n    \"\"\"\n        for key, value in trees.items():\n        if value == \"Aspen\":\n            return \"Yup\"\n    return \"Nope\"\n",
                "id": 0,
                "key": 2
            },
            {
                "diff": 4,
                "color": "#d83034",
                "arrow_color": "#d83034",
                "username": "student27",
                "hover": "username:student27\n\ndiff:\n--- \n+++ \n@@ -10,7 +10,7 @@\n values. Check if-\"aspen\"+\"Aspen\" is one of\n\nFROM completion:\ndef check_for_aspen(trees):\n    \"\"\"\n    A dict object contains keys and values. Check if \"aspen\" is one of the keys in a dict. Return \"Yup\" if it is a key, \"Nope\" if it is not a key.\n    \"\"\"\n        if \"aspen\" in trees:\n        return \"Yup\"\n    else:\n        return \"Nope\"\n\n\nTO completion:\ndef check_for_aspen(trees):\n    \"\"\"\n    A dict object contains keys and values. Check if \"Aspen\" is one of the keys in a dict. Return \"Yup\" if it is a key, \"Nope\" if it is not a key.\n    \"\"\"\n        if \"Aspen\" in trees:\n        return \"Yup\"\n    else:\n        return \"Nope\"\n",
                "id": 1,
                "key": 0
            },
            {
                "diff": 13,
                "color": "#c701ff",
                "arrow_color": "#c701ff",
                "username": "student68",
                "hover": "username:student68\n\ndiff:\n--- \n+++ \n@@ -8,10 +8,6 @@\n if there is-a-value-that-has a key, \"Aspen\".\n\nFROM completion:\ndef check_for_aspen(trees):\n    \"\"\"\n    given a dictionary check if there is a value that has a key, \"Aspen\". return \"Yup\" if it passes the check and \"Nope\" if it doesn't \n    \"\"\"\n        for key, value in trees.items():\n        if value == \"Aspen\":\n            return \"Yup\"\n    return \"Nope\"\n\n\nTO completion:\ndef check_for_aspen(trees):\n    \"\"\"\n    given a dictionary check if there is a key, \"Aspen\". return \"Yup\" if it passes the check and \"Nope\" if it doesn't \n    \"\"\"\n        if \"Aspen\" in trees:\n        return \"Yup\"\n    else:\n        return \"Nope\"\n",
                "id": 1,
                "key": 1
            },
            {
                "diff": 11,
                "color": "#4ecb8d",
                "arrow_color": "#4ecb8d",
                "username": "student67",
                "hover": "username:student67\n\ndiff:\n--- \n+++ \n@@ -4,6 +4,9 @@\n If the name+of+the+dictionary is 'Aspen', returns\n\nFROM completion:\ndef check_for_aspen(trees):\n    \"\"\"\n    If the name is 'Aspen', returns 'Yup'. Otherwise returns 'Nope'.\n    \"\"\"\n        if trees == 'Aspen':\n        return 'Yup'\n    else:\n        return 'Nope'\n\n\nTO completion:\ndef check_for_aspen(trees):\n    \"\"\"\n    If the name of the dictionary is 'Aspen', returns 'Yup'. Otherwise returns 'Nope'.\n    \"\"\"\n        if trees['name'] == 'Aspen':\n        return 'Yup'\n    else:\n        return 'Nope'\n",
                "id": 6,
                "key": 0
            }
        ],
        [],
        [
            {
                "diff": 10,
                "color": "#f9e858",
                "arrow_color": "#f9e858",
                "username": "student34",
                "hover": "username:student34\n\ndiff:\n--- \n+++ \n@@ -5,8 +5,8 @@\n \"Aspen\" appears as-an-item+a+definition in the dictionary,\n\nFROM completion:\ndef check_for_aspen(trees):\n    \"\"\"\n    If \"Aspen\" appears as an item in the dictionary, output the string \"Yup\", and if it does not appear output the string \"Nope\"\n    \"\"\"\n        if \"Aspen\" in trees:\n        print(\"Yup\")\n    else:\n        print(\"Nope\")\n\ncheck_for_aspen(trees)\n\n\nTO completion:\ndef check_for_aspen(trees):\n    \"\"\"\n    If \"Aspen\" appears as a definition in the dictionary, output the string \"Yup\", and if it does not appear output the string \"Nope\"\n    \"\"\"\n        if \"Aspen\" in trees:\n        print(\"Yup\")\n    else:\n        print(\"Nope\")\n\ncheck_for_aspen(trees)\n",
                "id": 2,
                "key": 0
            },
            {
                "diff": 3,
                "color": "#f9e858",
                "arrow_color": "#f9e858",
                "username": "student34",
                "hover": "username:student34\n\ndiff:\n--- \n+++ \n@@ -2,21 +2,22 @@\n check_for_aspen(trees): \"\"\" If+it+is+true+that 'Aspen' appears in the-dictionary+dictionary, output \"Yup\" and if it is-not-in-the-dictionary+false output \"Nope\" \"\"\"\n\nFROM completion:\ndef check_for_aspen(trees):\n    \"\"\"\n    If 'Aspen' appears in the dictionary output \"Yup\" and if it is not in the dictionary output \"Nope\"\n    \"\"\"\n        if 'Aspen' in trees:\n        print(\"Yup!\")\n    else:\n        print(\"Nope!\")\n\ncheck_for_aspen(trees)\n\n\nTO completion:\ndef check_for_aspen(trees):\n    \"\"\"\n    If it is true that 'Aspen' appears in the dictionary, output \"Yup\" and if it is false output \"Nope\"\n    \"\"\"\n        if 'Aspen' in trees:\n        print(\"Yup\")\n    else:\n        print(\"Nope\")\n\n",
                "id": 2,
                "key": 1
            },
            {
                "diff": 7,
                "color": "#f9e858",
                "arrow_color": "#f9e858",
                "username": "student34",
                "hover": "username:student34\n\ndiff:\n--- \n+++ \n@@ -3,13 +3,13 @@\n \"\"\" If \"Aspen\"-appears-as-a-definition-in-the-dictionary,+corresponds+to+an+integer+greater+than+0, output the string\n\nFROM completion:\ndef check_for_aspen(trees):\n    \"\"\"\n    If \"Aspen\" appears as a definition in the dictionary, output the string \"Yup\", and if it does not appear output the string \"Nope\"\n    \"\"\"\n        if \"Aspen\" in trees:\n        print(\"Yup\")\n    else:\n        print(\"Nope\")\n\ncheck_for_aspen(trees)\n\n\nTO completion:\ndef check_for_aspen(trees):\n    \"\"\"\n    If \"Aspen\" corresponds to an integer greater than 0, output the string \"Yup\", and if it does not appear output the string \"Nope\"\n    \"\"\"\n        if trees[\"Aspen\"] > 0:\n        return \"Yup\"\n    else:\n        return \"Nope\"\n",
                "id": 3,
                "key": 0
            }
        ],
        [
            {
                "diff": 8,
                "color": "#f9e858",
                "arrow_color": "#f9e858",
                "username": "student34",
                "hover": "username:student34\n\ndiff:\n--- \n+++ \n@@ -2,7 +2,7 @@\n check_for_aspen(trees): \"\"\" If-\"Aspen\"+'Aspen' corresponds to an@@ -10,17 +10,21 @@\n greater than 0,-output+print the string \"Yup\", and if-it+'Aspen' does not appear-output+in+the+dictionary+put+print the string \"Nope\"\n\nFROM completion:\ndef check_for_aspen(trees):\n    \"\"\"\n    If \"Aspen\" corresponds to an integer greater than 0, output the string \"Yup\", and if it does not appear output the string \"Nope\"\n    \"\"\"\n        if trees[\"Aspen\"] > 0:\n        return \"Yup\"\n    else:\n        return \"Nope\"\n\n\nTO completion:\ndef check_for_aspen(trees):\n    \"\"\"\n    If 'Aspen' corresponds to an integer greater than 0, print the string \"Yup\", and if 'Aspen' does not appear in the dictionary put print the string \"Nope\"\n    \"\"\"\n        if 'Aspen' in trees:\n        if trees['Aspen'] > 0:\n            print('Yup')\n        else:\n            print('Nope')\n    else:\n        print('Nope')\n\ncheck_for_aspen(trees)\n",
                "id": 4,
                "key": 0
            }
        ],
        [
            {
                "diff": 14,
                "color": "#f9e858",
                "arrow_color": "#f9e858",
                "username": "student34",
                "hover": "username:student34\n\ndiff:\n--- \n+++ \n@@ -10,22 +10,17 @@\n greater than 0,-print-the-string+output \"Yup\", and if 'Aspen' does not-appear+exist in the dictionary-put-print-the-string+output \"Nope\" \"\"\"\n\nFROM completion:\ndef check_for_aspen(trees):\n    \"\"\"\n    If 'Aspen' corresponds to an integer greater than 0, print the string \"Yup\", and if 'Aspen' does not appear in the dictionary put print the string \"Nope\"\n    \"\"\"\n        if 'Aspen' in trees:\n        if trees['Aspen'] > 0:\n            print('Yup')\n        else:\n            print('Nope')\n    else:\n        print('Nope')\n\ncheck_for_aspen(trees)\n\n\nTO completion:\ndef check_for_aspen(trees):\n    \"\"\"\n    If 'Aspen' corresponds to an integer greater than 0, output \"Yup\", and if 'Aspen' does not exist in the dictionary output \"Nope\"\n    \"\"\"\n        if 'Aspen' in trees:\n        if trees['Aspen'] > 0:\n            print('Yup')\n        else:\n            print('Nope')\n    else:\n        print('Nope')\n\ncheck_for_aspen(trees)\n",
                "id": 4,
                "key": 0
            },
            {
                "diff": 6,
                "color": "#f9e858",
                "arrow_color": "#f9e858",
                "username": "student34",
                "hover": "username:student34\n\ndiff:\n--- \n+++ \n@@ -3,21 +3,17 @@\n \"\"\" If 'Aspen'-corresponds-to-an-integer-greater-than-0,+appears+in+the+dictionary output-\"Yup\",+\"Yup\" and if-'Aspen'-does+it+is not-exist in the dictionary\n\nFROM completion:\ndef check_for_aspen(trees):\n    \"\"\"\n    If 'Aspen' corresponds to an integer greater than 0, output \"Yup\", and if 'Aspen' does not exist in the dictionary output \"Nope\"\n    \"\"\"\n        if 'Aspen' in trees:\n        if trees['Aspen'] > 0:\n            print('Yup')\n        else:\n            print('Nope')\n    else:\n        print('Nope')\n\ncheck_for_aspen(trees)\n\n\nTO completion:\ndef check_for_aspen(trees):\n    \"\"\"\n    If 'Aspen' appears in the dictionary output \"Yup\" and if it is not in the dictionary output \"Nope\"\n    \"\"\"\n        if 'Aspen' in trees:\n        print(\"Yup!\")\n    else:\n        print(\"Nope!\")\n\ncheck_for_aspen(trees)\n",
                "id": 2,
                "key": 0
            }
        ],
        [
            {
                "diff": 0,
                "color": "#4ecb8d",
                "arrow_color": "#4ecb8d",
                "username": "student67",
                "hover": "username:student67\n\ndiff:\n\n\nFROM completion:\ndef check_for_aspen(trees):\n    \"\"\"\n    If the name is 'Aspen', returns 'Yup'. Otherwise returns 'Nope'.\n    \"\"\"\n        for tree in trees:\n        if tree.name == 'Aspen':\n            return 'Yup'\n    return 'Nope'\n\n\nTO completion:\ndef check_for_aspen(trees):\n    \"\"\"\n    If the name is 'Aspen', returns 'Yup'. Otherwise returns 'Nope'.\n    \"\"\"\n        if trees == 'Aspen':\n        return 'Yup'\n    else:\n        return 'Nope'\n",
                "id": 0,
                "key": 0
            }
        ],
        [
            {
                "diff": 0,
                "color": "#4ecb8d",
                "arrow_color": "#4ecb8d",
                "username": "student67",
                "hover": "username:student67\n\ndiff:\n\n\nFROM completion:\ndef check_for_aspen(trees):\n    \"\"\"\n    If the name of the dictionary is 'Aspen', returns 'Yup'. Otherwise returns 'Nope'.\n    \"\"\"\n        if trees['name'] == 'Aspen':\n        return 'Yup'\n    else:\n        return 'Nope'\n\n\nTO completion:\ndef check_for_aspen(trees):\n    \"\"\"\n    If the name of the dictionary is 'Aspen', returns 'Yup'. Otherwise returns 'Nope'.\n    \"\"\"\n        if trees['name'] == 'Aspen':\n        return 'Yup'\n    else:\n        return 'Nope'\n",
                "id": 6,
                "key": 0
            },
            {
                "diff": 2,
                "color": "#4ecb8d",
                "arrow_color": "#4ecb8d",
                "username": "student67",
                "hover": "username:student67\n\ndiff:\n--- \n+++ \n@@ -2,13 +2,11 @@\n check_for_aspen(trees): \"\"\" If+'Aspen'+is+in the-name-of-the-dictionary-is-'Aspen',+dictionary, returns 'Yup'. Otherwise\n\nFROM completion:\ndef check_for_aspen(trees):\n    \"\"\"\n    If the name of the dictionary is 'Aspen', returns 'Yup'. Otherwise returns 'Nope'.\n    \"\"\"\n        if trees['name'] == 'Aspen':\n        return 'Yup'\n    else:\n        return 'Nope'\n\n\nTO completion:\ndef check_for_aspen(trees):\n    \"\"\"\n    If 'Aspen' is in the dictionary, returns 'Yup'. Otherwise returns 'Nope'.\n    \"\"\"\n        if 'Aspen' in trees:\n        return 'Yup'\n    else:\n        return 'Nope'\n",
                "id": 1,
                "key": 0
            }
        ],
        [
            {
                "diff": 5,
                "color": "#c701ff",
                "arrow_color": "#c701ff",
                "username": "student68",
                "hover": "username:student68\n\ndiff:\n--- \n+++ \n@@ -11,7 +11,6 @@\n is a String-treename key and a@@ -28,8 +27,8 @@\n that has a-treename-\"Aspen\"+key,+\"Aspen\", whose number is\n\nFROM completion:\ndef check_for_aspen(trees):\n    \"\"\"\n    given an array formatted so that there is a String treename key and a number associated with that key, check if there is value that has a treename \"Aspen\" whose number is greater than 0. return \"Yup\" if it passes the check and \"Nope\" if it doesn't \n    \"\"\"\n        for tree in trees:\n        if tree[\"treename\"] == \"Aspen\" and tree[\"number\"] > 0:\n            return \"Yup\"\n    return \"Nope\"\n\n\nTO completion:\ndef check_for_aspen(trees):\n    \"\"\"\n    given an array formatted so that there is a String key and a number associated with that key, check if there is value that has a key, \"Aspen\",  whose number is greater than 0. return \"Yup\" if it passes the check and \"Nope\" if it doesn't \n    \"\"\"\n        for tree in trees:\n        if tree[0] == \"Aspen\" and tree[1] > 0:\n            return \"Yup\"\n    return \"Nope\"\n",
                "id": 0,
                "key": 0
            }
        ]
    ]
}