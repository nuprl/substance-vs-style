"edges":
  !!int "0": |-
    ---
    +++
    @@ -2,21 +2,22 @@
     check_for_aspen(trees): """ If+it+is+true+that 'Aspen' appears in the-dictionary+dictionary, output "Yup" and if it is-not-in-the-dictionary+false output "Nope" """
  !!int "1": |-
    ---
    +++
    @@ -5,8 +5,8 @@
     "Aspen" appears as-an-item+a+definition in the dictionary,
  !!int "2": ""
  !!int "3": |-
    ---
    +++
    @@ -11,7 +11,6 @@
     is a String-treename key and a@@ -28,8 +27,8 @@
     that has a-treename-"Aspen"+key,+"Aspen", whose number is
  !!int "4": |-
    ---
    +++
    @@ -4,6 +4,9 @@
     If the name+of+the+dictionary is 'Aspen', returns
  !!int "5": |-
    ---
    +++
    @@ -2,39 +2,19 @@
     check_for_aspen(trees): """ given-an-array-formatted-so-that-there-is a-String-key-and-a-number-associated-with-that-key,+dictionary check if there is+a value that has a key,-"Aspen",-whose-number-is-greater-than-0.+"Aspen". return "Yup" if
  !!int "6": |-
    ---
    +++
    @@ -8,10 +8,6 @@
     if there is-a-value-that-has a key, "Aspen".
  !!int "7": |-
    ---
    +++
    @@ -10,7 +10,7 @@
     values. Check if-"aspen"+"Aspen" is one of
  !!int "8": |-
    ---
    +++
    @@ -3,21 +3,17 @@
     """ If 'Aspen'-corresponds-to-an-integer-greater-than-0,+appears+in+the+dictionary output-"Yup",+"Yup" and if-'Aspen'-does+it+is not-exist in the dictionary
  !!int "9": |-
    ---
    +++
    @@ -1,15 +1,24 @@
     def check_for_aspen(trees): """+A+dict+object+contains+keys+and+values. Check if "aspen" is-a-key+one+of+the+keys in a-dictionary.+dict. Return "Yup" if
  !!int "10": |-
    ---
    +++
    @@ -5,13 +5,11 @@
     if "aspen" is-one-of-the-keys+a+key in a-dict.+dictionary. Return "Yup" if
  !!int "11": |-
    ---
    +++
    @@ -2,13 +2,11 @@
     check_for_aspen(trees): """ If+'Aspen'+is+in the-name-of-the-dictionary-is-'Aspen',+dictionary, returns 'Yup'. Otherwise
  !!int "12": |-
    ---
    +++
    @@ -3,13 +3,13 @@
     """ If "Aspen"-appears-as-a-definition-in-the-dictionary,+corresponds+to+an+integer+greater+than+0, output the string
  !!int "13": |-
    ---
    +++
    @@ -2,7 +2,7 @@
     check_for_aspen(trees): """ If-"Aspen"+'Aspen' corresponds to an@@ -10,17 +10,21 @@
     greater than 0,-output+print the string "Yup", and if-it+'Aspen' does not appear-output+in+the+dictionary+put+print the string "Nope"
  !!int "14": |-
    ---
    +++
    @@ -10,22 +10,17 @@
     greater than 0,-print-the-string+output "Yup", and if 'Aspen' does not-appear+exist in the dictionary-put-print-the-string+output "Nope" """
"nodes":
  !!int "0":
    "stderr":
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      3
    "stdout":
    - |
      Nope
    - |
      Nope
    - |
      Nope
    "stdout_id": !!int |-
      2
  !!int "1":
    "stderr":
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      3
    "stdout":
    - |
      Nope
    - |
      Yup
    - |
      Yup
    "stdout_id": !!int |-
      3
  !!int "2":
    "stderr":
    - |2
        File "/tmp/file.py", line 7
          else:
          ^
      IndentationError: expected an indented block after 'if' statement on line 5
    - |2
        File "/tmp/file.py", line 7
          else:
          ^
      IndentationError: expected an indented block after 'if' statement on line 5
    - |2
        File "/tmp/file.py", line 7
          else:
          ^
      IndentationError: expected an indented block after 'if' statement on line 5
    "stderr_id": !!int |-
      4
    "stdout":
    - ""
    - ""
    - ""
    "stdout_id": !!int |-
      1
  !!int "3":
    "stderr":
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 9, in <module>
          print(check_for_aspen({"Oak": 3, "Birch": 5, "Elm": 2}))
        File "/tmp/file.py", line 5, in check_for_aspen
          if trees["Aspen"] > 0:
      KeyError: 'Aspen'
    - ""
    - ""
    "stderr_id": !!int |-
      2
    "stdout":
    - ""
    - |
      Yup
    - |
      Yup
    "stdout_id": !!int |-
      0
  !!int "4":
    "stderr":
    - |2
        File "/tmp/file.py", line 8
          else:
          ^
      IndentationError: expected an indented block after 'if' statement on line 6
    - |2
        File "/tmp/file.py", line 8
          else:
          ^
      IndentationError: expected an indented block after 'if' statement on line 6
    - |2
        File "/tmp/file.py", line 8
          else:
          ^
      IndentationError: expected an indented block after 'if' statement on line 6
    "stderr_id": !!int |-
      5
    "stdout":
    - ""
    - ""
    - ""
    "stdout_id": !!int |-
      1
  !!int "5":
    "stderr":
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 9, in <module>
          print(check_for_aspen({"Oak": 3, "Birch": 5, "Elm": 2}))
        File "/tmp/file.py", line 6, in check_for_aspen
          if tree.name == 'Aspen':
      AttributeError: 'str' object has no attribute 'name'
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 9, in <module>
          print(check_for_aspen({"Aspen": 7, "Beech": 15}))
        File "/tmp/file.py", line 6, in check_for_aspen
          if tree.name == 'Aspen':
      AttributeError: 'str' object has no attribute 'name'
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 9, in <module>
          print(check_for_aspen({"Beech": 8, "Maple": 2, "Aspen": 3}))
        File "/tmp/file.py", line 6, in check_for_aspen
          if tree.name == 'Aspen':
      AttributeError: 'str' object has no attribute 'name'
    "stderr_id": !!int |-
      0
    "stdout":
    - ""
    - ""
    - ""
    "stdout_id": !!int |-
      1
  !!int "6":
    "stderr":
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 9, in <module>
          print(check_for_aspen({"Oak": 3, "Birch": 5, "Elm": 2}))
        File "/tmp/file.py", line 5, in check_for_aspen
          if trees['name'] == 'Aspen':
      KeyError: 'name'
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 9, in <module>
          print(check_for_aspen({"Aspen": 7, "Beech": 15}))
        File "/tmp/file.py", line 5, in check_for_aspen
          if trees['name'] == 'Aspen':
      KeyError: 'name'
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 9, in <module>
          print(check_for_aspen({"Beech": 8, "Maple": 2, "Aspen": 3}))
        File "/tmp/file.py", line 5, in check_for_aspen
          if trees['name'] == 'Aspen':
      KeyError: 'name'
    "stderr_id": !!int |-
      1
    "stdout":
    - ""
    - ""
    - ""
    "stdout_id": !!int |-
      1
  !!int "7":
    "stderr":
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 9, in <module>
          print(check_for_aspen({"Oak": 3, "Birch": 5, "Elm": 2}))
        File "/tmp/file.py", line 6, in check_for_aspen
          if tree["treename"] == "Aspen" and tree["number"] > 0:
      TypeError: string indices must be integers
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 9, in <module>
          print(check_for_aspen({"Aspen": 7, "Beech": 15}))
        File "/tmp/file.py", line 6, in check_for_aspen
          if tree["treename"] == "Aspen" and tree["number"] > 0:
      TypeError: string indices must be integers
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 9, in <module>
          print(check_for_aspen({"Beech": 8, "Maple": 2, "Aspen": 3}))
        File "/tmp/file.py", line 6, in check_for_aspen
          if tree["treename"] == "Aspen" and tree["number"] > 0:
      TypeError: string indices must be integers
    "stderr_id": !!int |-
      6
    "stdout":
    - ""
    - ""
    - ""
    "stdout_id": !!int |-
      1
"student_color":
  "student27": |-
    #d83034
  "student34": |-
    #f9e858
  "student49": |-
    #008dff
  "student67": |-
    #4ecb8d
  "student68": |-
    #c701ff
