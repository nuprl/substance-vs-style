"edges":
  !!int "0": ""
  !!int "1": |-
    ---
    +++
    @@ -16,9 +16,18 @@
     0 as A,+grouping+the+answer+as+one+string,+and+then using the -1+as points to separate
  !!int "2": |-
    ---
    +++
    @@ -33,7 +33,7 @@
     will produce a-list+set of strings that@@ -46,11 +46,10 @@
     the input set,-creating-a-new-string only+separating+the+strings when there is
  !!int "3": |-
    ---
    +++
    @@ -16,28 +16,9 @@
     0 as A,-1-as-B.-grouping-the-output-as-a-single-string,-then-turn-the+turning negative numbers-as-commas-and-points-of-separation-between-the-strings.+into+commas. """
  !!int "4": |-
    ---
    +++
    @@ -16,19 +16,10 @@
     0 as A-ignoring-any+turning+all negative numbers-in-the-list.-Removing-all-commas-in-the-list-of-outputs+into+commas. """
  !!int "5": |-
    ---
    +++
    @@ -12,6 +12,7 @@
     list with the+capital letters in the
  !!int "6": |-
    ---
    +++
    @@ -28,7 +28,7 @@
     commas in the-answer+output when the letters
  !!int "7": |-
    ---
    +++
    @@ -48,14 +48,10 @@
     set, creating a-separate+new string+at each-time-it-comes-across-a -1 in the
  !!int "8": |-
    ---
    +++
    @@ -1,21 +1,15 @@
     def convert(lst): """-convert-the+create+a list+with+element of-index-number-into-list-of-letters-of-corresponding-index-numbers-of-alphabetical-table+alphabet+last+element+are+comma """
  !!int "9": |-
    ---
    +++
    @@ -1,36 +1,20 @@
     def convert(lst): """-change-numbers-to-letters-matching-the-order-of-the-alphabet-starting-at-0-as-A,-grouping-the-answer-as-one-string,-and-then-using-the--1-as-points-to-separate-the-string.+input:+[1,+1,+1,+-1,+25,+25,+25,+-1,+0,+1,+2]+output:+['BBB',+'ZZZ',+'ABC'] """
  !!int "10": |-
    ---
    +++
    @@ -29,14 +29,23 @@
     to a string.-If--1,-start-the-next-character-with+When+-1+appears+make a new-string.+string+and+add+the+following+characters+to+it.+return+a+list+of+strings. """
  !!int "11": |-
    ---
    +++
    @@ -60,4 +60,12 @@
     a new string.+Function+should+return+a+list+of+the+letters. """
  !!int "12": |-
    ---
    +++
    @@ -16,4 +16,20 @@
     0 as A.+grouping+the+output+as+a+single+string,+then+use+the+negative+numbers+as+points+of+seperation. """
  !!int "13": |-
    ---
    +++
    @@ -8,11 +8,20 @@
     index number into-list+string of+capital letters of corresponding index numbers+of+alphabetical+table+and+insert+into+a+list """
  !!int "14": |-
    ---
    +++
    @@ -16,11 +16,6 @@
     0 as A,-turning-negative-numbers-into-"", and grouping the@@ -30,5 +25,11 @@
     string in a-list.+list,+using+-1+as+places+to+slice. """
  !!int "15": |-
    ---
    +++
    @@ -24,7 +24,7 @@
     single string, then-use+turn the negative numbers@@ -35,5 +35,6 @@
     of separation between+the strings. """
  !!int "16": |-
    ---
    +++
    @@ -15,11 +15,22 @@
     at 0 as-A+A, turning-all+the negative numbers into-commas.+commas,+and+then+turning+the+output+into+one+string+in+a+list. """
  !!int "17": |-
    ---
    +++
    @@ -48,7 +48,7 @@
     set, creating a-new+separate string each time
  !!int "18": |-
    ---
    +++
    @@ -8,8 +8,6 @@
     index number into-string-of capital letters of@@ -18,13 +16,7 @@
     numbers of alphabetical-table-and-insert-into-a-list-(-1+table(-1 represent comma) """
  !!int "19": |-
    ---
    +++
    @@ -1,24 +1,24 @@
     def convert(lst): """-if-user-inputs-[1,-1,-1,--1,-25,-25,-25,--1,-0,-1,-2],-output-should-be-['BBB',-'ZZZ',-'ABC'].+change+numbers+to+letters+matching+the+order+of+the+alphabet+starting+at+0+as+A,+turning+negative+numbers+into+"" """
  !!int "20": |-
    ---
    +++
    @@ -1,7 +1,9 @@
     def convert(lst): """-input:+if+user+inputs [1, 1, 1,@@ -12,9 +14,11 @@
     -1, 0, 1,-2]-output:+2],+output+should+be ['BBB', 'ZZZ',-'ABC']+'ABC']. """
  !!int "21": |-
    ---
    +++
    @@ -4,15 +4,15 @@
     convert the list+of+index+number into list of-alphabet-with-number-represent+letters+of+corresponding index-of-alphabet-table+numbers """
  !!int "22": |-
    ---
    +++
    @@ -29,7 +29,11 @@
     negative numbers as+commas+and points of-seperation.+separation+between+strings. """
  !!int "23": |-
    ---
    +++
    @@ -21,9 +21,9 @@
     its corresponding number.-Negative-numbers-start+Input+"-1"+starts a new string.
  !!int "24": |-
    ---
    +++
    @@ -1,34 +1,32 @@
     def convert(lst): """-The+Create+a+dictionary+where+the absolute values+of+numbers from-0-to-25-correspond-to-the+0-25+equal+capital letters of the alphabet.-Take+Replace the numbers in a given string-and-replace-them-with+according+to the-letters-of-the-alphabet.+dictionary """
  !!int "25": |-
    ---
    +++
    @@ -5,8 +5,8 @@
     a list of-numbers,-have+numbers.+Have another list with@@ -15,6 +15,7 @@
     in the alphabet,+and create an answer@@ -29,9 +30,10 @@
     a temp string-variable-and-assign+variable,+have+it+add the letter with@@ -50,26 +52,25 @@
     to the temp-variable,-append+variable.+Append the temp variable into the answer-list,-and+list.+If+encounter+a+negative+number, start a new temp-string-when-encounter-a-negative-number.+string. Return the answer
  !!int "26": |-
    ---
    +++
    @@ -41,7 +41,7 @@
     lst, create a-separate+new string from the
  !!int "27": |-
    ---
    +++
    @@ -32,9 +32,7 @@
     string variable. While-the-iterating-number+num is not negative,
  !!int "28": |-
    ---
    +++
    @@ -33,6 +33,7 @@
     variable. While the+iterating number is not
  !!int "29": |-
    ---
    +++
    @@ -21,10 +21,14 @@
     numbers into "",+and grouping the output as one-string.+string+in+a+list. """
  !!int "30": |-
    ---
    +++
    @@ -15,12 +15,19 @@
     at 0 as-A.-ignoring-any+A,+turning+the negative numbers-in+into+commas,+and+then+turning the-list.+output+into+one+string. """
  !!int "31": |-
    ---
    +++
    @@ -31,11 +31,19 @@
     the code will-produce-a+look+at+each+index+of+the+input list of-strings+strings,+build+a+string that correspond to@@ -46,12 +54,23 @@
     the input set,-creating+and+add+that+string+to+the+output+list+and+start a new-string-at-each+one+when+it+comes+across -1 in the
  !!int "32": |-
    ---
    +++
    @@ -23,4 +23,33 @@
     in the list.+Then+take+the+list+of+converted+letters,+removing+any+commas+between+letters+in+the+last+when+the+letters+are+in+alphabetical+order,+or+when+they+are+the+same+letters. """
  !!int "33": |-
    ---
    +++
    @@ -1,15 +1,21 @@
     def convert(lst): """-create-a+convert+the list-with-element of-alphabet-last-element-are-comma+index+number+into+string+of+letters+of+corresponding+index+numbers+of+alphabetical+table """
  !!int "34": |-
    ---
    +++
    @@ -8,6 +8,8 @@
     index number into+string+of capital letters of@@ -16,7 +18,5 @@
     numbers of alphabetical-table(-1-represent-comma)+table """
  !!int "35": |-
    ---
    +++
    @@ -25,13 +25,4 @@
     into a list-(-1-represent-where-to-split-into-a-new-element) """
  !!int "36": |-
    ---
    +++
    @@ -1,28 +1,36 @@
     def convert(lst): """-converts+create a+new list-of-numbers-into-a-list+with+stings of letters,-creating+inputted+numbers+correspond+to+the+index+in+the+alphabet+beginning+at+zero,+begins a new item in+the new list when--1+'-1' is-in-the-inputted-list+passed """
  !!int "37": |-
    ---
    +++
    @@ -1,15 +1,30 @@
     def convert(lst): """+Letters+A-Z+correspond+with+numbers+0-25. This function-converts-integers-to+creates+a+string+by+replacing+the+given+number+with its corresponding-letter-in-the-alphabet.+number.+Negative+numbers+start+a+new+string. """
  !!int "38": |-
    ---
    +++
    @@ -11,16 +11,6 @@
     list of letters,-letter-values-are-assigned-consecutively-beginning-at-the-index-0, creating a new
  !!int "39": |-
    ---
    +++
    @@ -31,63 +31,24 @@
     the code will-look-at-each-index-of-the-input+return+a list of-strings,-build-a-string-that-correspond-to+Strings+parsed+from the given-numbers+numbers,+with+each+-1 in the input-set,-and-add-that-string-to-the-output-list-and-start+signifying a-new-one-when-it-comes-across--1-in-the-input.-we-will-also-add-this-string-when-we-reach-the-end-of-the-input-list.+separate+string. """
  !!int "40": |-
    ---
    +++
    @@ -5,32 +5,57 @@
     a list of-numbers-and-returns-a+numbers,+have+another list with the+letters+in+the+alphabet,+create+an+answer+list,+iterate+through+the+input+list,+append+the+letter+with+the corresponding-indexes+index of the-alphabet,-where-negative-numbers-as-indexes-means-to-take+list+with+the+letters in the-next-index-as+alphabet+to+the+answer+list,+create a new string+when+encounter+a+negative+number,+and+return+the+answer+list """
  !!int "41": |-
    ---
    +++
    @@ -8,6 +8,7 @@
     a list with+capitalized letters from the@@ -24,7 +25,14 @@
     starting from zero.-Corresponding+Until+a+negative+one+is+in+the+list, letters should be
  !!int "42": |-
    ---
    +++
    @@ -2,15 +2,12 @@
     convert(lst): """ call-a-list-with+out element of-alphabet-and-last-element-are-comma+the+following+list+[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,+','] """
  !!int "43": |-
    ---
    +++
    @@ -8,38 +8,23 @@
     a list with+letters+from the-letter-corresponding+alphabet+that+correspond to-each-number+the+index in the inputted-list.-If-there-is-a-negative-one,-the-corresponding-letters-should-be-printed-as-a-separate-item-in-the-list.-Otherwise,-the-corresponding+list,+starting+from+zero.+Corresponding letters should be@@ -47,6 +32,21 @@
     as one string+to+insert+into+the+list.+A+negative+one+indicates+the+start+of+a+new+item in the list.
  !!int "44": |-
    ---
    +++
    @@ -1,21 +1,16 @@
     def convert(lst): """-convert-the+call+a list+with+element of-index-number-into-string-of-letters-of-corresponding-index-numbers-of-alphabetical-table+alphabet+and+last+element+are+comma """
  !!int "45": |-
    ---
    +++
    @@ -24,9 +24,15 @@
     commas, and then-turning+group the-output+letters+in+alphabetical+order+or+the+same into one string
  !!int "46": |-
    ---
    +++
    @@ -17,8 +17,22 @@
     and so on.+Return+strings+of+letters+with+no+spaces.+A -1-=+in+lst+indicates+the+start+of a-space.+new+string. """
  !!int "47": |-
    ---
    +++
    @@ -8,7 +8,6 @@
     a list with-capitalized letters from the@@ -25,6 +24,14 @@
     starting from zero.+Letters+in+the+returned+list+should+be+capitalized. Until a negative@@ -39,9 +46,20 @@
     combined as one-string-to-insert+string.+When+a+negative+one+is+reached+this+combination+of+letters+can+be+inserted into the list.@@ -49,9 +67,6 @@
     negative one indicates-the-start-of a new item
  !!int "48": |-
    ---
    +++
    @@ -33,7 +33,7 @@
     will produce a-set+list of strings that@@ -46,10 +46,10 @@
     the input set,-only-separating-the-strings+creating+a+new+string when there is
  !!int "49": |-
    ---
    +++
    @@ -23,4 +23,12 @@
     in the list.+Removing+all+commas+in+the+list+of+outputs """
  !!int "50": |-
    ---
    +++
    @@ -6,36 +6,40 @@
     list of numbers.-Have-another+Create+a+ABC list with the letters in the-alphabet,+alphabet and create an answer-list.-When-iterating+string.+Iterate through the input list,-create-a-temp-string-variable.-While-num+if+there is-not-negative,+"-1"+then+add+'+'+to+the+answer+string,+or+otherwise, add the letter@@ -45,27 +49,17 @@
     index of the-list-with-the-letters-in-the-alphabet-to-the-temp-variable.-Append-the-temp-variable-into+answer+string.+Split the answer-list.-Return+string+at+'+'.+return the answer-list.+string. """
  !!int "51": |-
    ---
    +++
    @@ -75,4 +75,19 @@
     in the input.+we+will+also+add+the+string+when+we+reach+the+end+of+the+input+list. """
  !!int "52": |-
    ---
    +++
    @@ -15,19 +15,28 @@
     at 0 as-A,-turning-the+A+ignoring+any negative numbers-into-commas,-and-then-turning+in the-output-into-one-string.+list.+Removing+the+commas+in+the+answer+when+the+letters+are+the+same+or+in+alphabetical+order. """
  !!int "53": |-
    ---
    +++
    @@ -21,22 +21,8 @@
     negative numbers into-commas,-and-then-group+commas+separating the-letters-in-alphabetical-order-or-the-same-into-one-string-in-a-list.+letters. """
  !!int "54": |-
    ---
    +++
    @@ -30,9 +30,13 @@
     a temp string-variable,-have-it+variable.+While+the+number+is+not+negative, add the letter@@ -61,16 +65,6 @@
     the answer list.-If-encounter-a-negative-number,-start-a-new-temp-string. Return the answer
  !!int "55": |-
    ---
    +++
    @@ -22,7 +22,6 @@
     the lst, create-a string of capitalized@@ -44,6 +43,10 @@
     a separate string+from+the+next+index and add it
  !!int "56": |-
    ---
    +++
    @@ -35,4 +35,14 @@
     a new string.+Separate+strings+with+commas.+Enclose+the+new+list+with+brackets. """
  !!int "57": |-
    ---
    +++
    @@ -15,5 +15,12 @@
     at 0 as-A+A.+ignoring+any+negative+numbers+in+the+list. """
  !!int "58": |-
    ---
    +++
    @@ -79,7 +79,7 @@
     will also add-the+this string when we
  !!int "59": |-
    ---
    +++
    @@ -23,33 +23,4 @@
     in the list.-Then-take-the-list-of-converted-letters,-removing-any-commas-between-letters-in-the-last-when-the-letters-are-in-alphabetical-order,-or-when-they-are-the-same-letters. """
  !!int "60": |-
    ---
    +++
    @@ -15,14 +15,5 @@
     at 0 as-A,-turning-the-negative-numbers-into-commas-separating-the-letters.+A. """
  !!int "61": |-
    ---
    +++
    @@ -16,9 +16,12 @@
     0 as A,-turning-negative-numbers-into-commas.+using+the+-1+points+to+separate+the+string. """
  !!int "62": |-
    ---
    +++
    @@ -18,13 +18,20 @@
     create an answer-list,-iterate+list.+When+iterating through the input list,-append+create+a+temp+string+variable+and+assign the letter with@@ -42,20 +49,29 @@
     alphabet to the+temp+variable,+append+the+temp+variable+into+the answer list,-create+and+start a new+temp string when encounter a negative-number,-and-return+number.+Return the answer-list+list. """
  !!int "63": |-
    ---
    +++
    @@ -23,20 +23,4 @@
     in the list.-Removing-the-commas-in-the-output-when-the-letters-are-the-same-or-in-alphabetical-order. """
  !!int "64": |-
    ---
    +++
    @@ -20,5 +20,11 @@
     negative numbers into-""+"",+grouping+the+output+as+one+string. """
  !!int "65": |-
    ---
    +++
    @@ -12,20 +12,27 @@
     and create a-list-of-string-of-alphabetical-letters-based+list.+Based on their assigned numbers in the-lst.+lst,+create+a+string+of+capitalized+alphabetical+letters+and+add+to+the+list. When there is@@ -35,7 +42,7 @@
     lst, create a-new+separate string and add
  !!int "66": |-
    ---
    +++
    @@ -19,4 +19,19 @@
     of alphabetical table+and+then+insert+into+a+list+(-1+represent+where+to+split+into+a+new+element) """
  !!int "67": |-
    ---
    +++
    @@ -1,13 +1,18 @@
     def convert(lst): """-call-out-element+convert+the+list+into+list of-the-following-list-[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,-',']+alphabet+with+number+represent+index+of+alphabet+table """
  !!int "68": |-
    ---
    +++
    @@ -50,9 +50,11 @@
     a new string-when-there-is+each+time+it+comes+across a -1 in
  !!int "69": |-
    ---
    +++
    @@ -6,12 +6,30 @@
     a list of+numbers+ranging+from+-1+to+25,+and+function+outputs+a+list+of+the+corresponding+letters+and+line+breaks.+Function+converts+the integers from-0-25.-Function-converts-integers+0-25 into letters by@@ -25,13 +43,6 @@
     of the alphabet.-Function-would-return-a-list-of-letters. When the user
  !!int "70": |-
    ---
    +++
    @@ -26,5 +26,5 @@
     starts a new-string.+output. """
  !!int "71": |-
    ---
    +++
    @@ -15,7 +15,10 @@
     at 0 as-A.+A,+1+as+B. grouping the output
  !!int "72": |-
    ---
    +++
    @@ -24,4 +24,7 @@
     into a list+(-1+represent+comma) """
"nodes":
  !!int "0":
    "stderr":
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 12, in <module>
          print(convert([0, 1, 2, 3]))
        File "/tmp/file.py", line 10, in convert
          new_lst.append(alphabet[i])
      NameError: name 'alphabet' is not defined
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 12, in <module>
          print(convert([0, -1, 1, -1, 2]))
        File "/tmp/file.py", line 10, in convert
          new_lst.append(alphabet[i])
      NameError: name 'alphabet' is not defined
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 12, in <module>
          print(convert([1, 1, 1, -1, 25, 25, 25, -1, 0, 1, 2]))
        File "/tmp/file.py", line 10, in convert
          new_lst.append(alphabet[i])
      NameError: name 'alphabet' is not defined
    "stderr_id": !!int |-
      1
    "stdout":
    - ""
    - ""
    - ""
    "stdout_id": !!int |-
      20
  !!int "1":
    "stderr":
    - |2
        File "/tmp/file.py", line 8
          if i >= 0
                   ^
      SyntaxError: expected ':'
    - |2
        File "/tmp/file.py", line 8
          if i >= 0
                   ^
      SyntaxError: expected ':'
    - |2
        File "/tmp/file.py", line 8
          if i >= 0
                   ^
      SyntaxError: expected ':'
    "stderr_id": !!int |-
      15
    "stdout":
    - ""
    - ""
    - ""
    "stdout_id": !!int |-
      20
  !!int "2":
    "stderr":
    - |2
        File "/tmp/file.py", line 9
          print(convert([0, 1, 2, 3]))
      IndentationError: expected an indented block after 'for' statement on line 8
    - |2
        File "/tmp/file.py", line 9
          print(convert([0, -1, 1, -1, 2]))
      IndentationError: expected an indented block after 'for' statement on line 8
    - |2
        File "/tmp/file.py", line 9
          print(convert([1, 1, 1, -1, 25, 25, 25, -1, 0, 1, 2]))
      IndentationError: expected an indented block after 'for' statement on line 8
    "stderr_id": !!int |-
      9
    "stdout":
    - ""
    - ""
    - ""
    "stdout_id": !!int |-
      20
  !!int "3":
    "stderr":
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      12
    "stdout":
    - |
      None
    - |
      None
    - |
      None
    "stdout_id": !!int |-
      2
  !!int "4":
    "stderr":
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      12
    "stdout":
    - |
      ['abcd']
    - |
      ['a', 'b', 'c']
    - |
      ['bbb', 'zzz', 'abc']
    "stdout_id": !!int |-
      26
  !!int "5":
    "stderr":
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      12
    "stdout":
    - |
      ['ABCD']
    - |
      ['A', 'B', 'C']
    - |
      ['BBB', 'ZZZ', 'ABC']
    "stdout_id": !!int |-
      7
  !!int "6":
    "stderr":
    - |2
        File "/tmp/file.py", line 10
          alphabet = ["a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "
                                                                                                           ^
      SyntaxError: unterminated string literal (detected at line 10)
    - |2
        File "/tmp/file.py", line 10
          alphabet = ["a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "
                                                                                                           ^
      SyntaxError: unterminated string literal (detected at line 10)
    - |2
        File "/tmp/file.py", line 10
          alphabet = ["a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "
                                                                                                           ^
      SyntaxError: unterminated string literal (detected at line 10)
    "stderr_id": !!int |-
      19
    "stdout":
    - ""
    - ""
    - ""
    "stdout_id": !!int |-
      20
  !!int "7":
    "stderr":
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      12
    "stdout":
    - |
      ['A', 'B', 'C', 'D']
    - |
      ['A', '@', 'B', '@', 'C']
    - |
      ['B', 'B', 'B', '@', 'Z', 'Z', 'Z', '@', 'A', 'B', 'C']
    "stdout_id": !!int |-
      1
  !!int "8":
    "stderr":
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      12
    "stdout":
    - |
      ['A', 'B', 'C', 'D']
    - |
      ['A', 'B', 'C']
    - |
      ['B', 'B', 'B', 'Z', 'Z', 'Z', 'A', 'B', 'C']
    "stdout_id": !!int |-
      4
  !!int "9":
    "stderr":
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      12
    "stdout":
    - |
      ABCD
    - |
      A,B,C
    - |
      BBB,ZZZ,ABC
    "stdout_id": !!int |-
      31
  !!int "10":
    "stderr":
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      12
    "stdout":
    - |
      ABCD
    - |
      ABC
    - |
      BZABC
    "stdout_id": !!int |-
      5
  !!int "11":
    "stderr":
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      12
    "stdout":
    - |
      ABCD
    - |
      ABC
    - |
      BBBZZZABC
    "stdout_id": !!int |-
      11
  !!int "12":
    "stderr":
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      12
    "stdout":
    - |
      ABCD
    - |
      ABC
    - |
      B,B,B,Z,Z,Z,A,B,C
    "stdout_id": !!int |-
      10
  !!int "13":
    "stderr":
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      12
    "stdout":
    - |
      A,B,C,D
    - |
      A,,,B,,,C
    - |
      B,B,B,,,Z,Z,Z,,,A,B,C
    "stdout_id": !!int |-
      13
  !!int "14":
    "stderr":
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      12
    "stdout":
    - |
      ['ABCD']
    - |
      ['A,B,C']
    - |
      ['BBB,ZZZ,ABC']
    "stdout_id": !!int |-
      30
  !!int "15":
    "stderr":
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 8, in <module>
          print(convert([0, 1, 2, 3]))
        File "/tmp/file.py", line 6, in convert
          lst = [''.join(g) for k, g in groupby(lst)]
      NameError: name 'groupby' is not defined
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 8, in <module>
          print(convert([0, -1, 1, -1, 2]))
        File "/tmp/file.py", line 6, in convert
          lst = [''.join(g) for k, g in groupby(lst)]
      NameError: name 'groupby' is not defined
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 8, in <module>
          print(convert([1, 1, 1, -1, 25, 25, 25, -1, 0, 1, 2]))
        File "/tmp/file.py", line 6, in convert
          lst = [''.join(g) for k, g in groupby(lst)]
      NameError: name 'groupby' is not defined
    "stderr_id": !!int |-
      6
    "stdout":
    - ""
    - ""
    - ""
    "stdout_id": !!int |-
      20
  !!int "16":
    "stderr":
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      12
    "stdout":
    - |
      ['A', 'B', 'C']
    - |
      [',', 'A', ',', 'B']
    - |
      ['A', 'A', 'A', ',', 'Y', 'Y', 'Y', ',', 'A', 'B']
    "stdout_id": !!int |-
      29
  !!int "17":
    "stderr":
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      12
    "stdout":
    - |
      ABC
    - |
      AAAB
    - |
      AAAAYYYAAB
    "stdout_id": !!int |-
      25
  !!int "18":
    "stderr":
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      12
    "stdout":
    - |
      ['BCD']
    - |
      ['@B@C']
    - |
      ['BBB@ZZZ@BC']
    "stdout_id": !!int |-
      3
  !!int "19":
    "stderr":
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      12
    "stdout":
    - |
      ABCD
    - |
      A@B@C
    - |
      BBB@ZZZ@ABC
    "stdout_id": !!int |-
      18
  !!int "20":
    "stderr":
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      12
    "stdout":
    - |
      AABC
    - |
      A,A,B
    - |
      AAA,YYY,AAB
    "stdout_id": !!int |-
      22
  !!int "21":
    "stderr":
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      12
    "stdout":
    - |
      ['A', 'B', 'C', 'D']
    - |
      ['A', '-', 'B', '-', 'C']
    - |
      ['B', 'B', 'B', '-', 'Z', 'Z', 'Z', '-', 'A', 'B', 'C']
    "stdout_id": !!int |-
      16
  !!int "22":
    "stderr":
    - |2
        File "/tmp/file.py", line 17
          if result[i] ==
                         ^
      SyntaxError: invalid syntax
    - |2
        File "/tmp/file.py", line 17
          if result[i] ==
                         ^
      SyntaxError: invalid syntax
    - |2
        File "/tmp/file.py", line 17
          if result[i] ==
                         ^
      SyntaxError: invalid syntax
    "stderr_id": !!int |-
      7
    "stdout":
    - ""
    - ""
    - ""
    "stdout_id": !!int |-
      20
  !!int "23":
    "stderr":
    - |2
        File "/tmp/file.py", line 18
          result.
                 ^
      SyntaxError: invalid syntax
    - |2
        File "/tmp/file.py", line 18
          result.
                 ^
      SyntaxError: invalid syntax
    - |2
        File "/tmp/file.py", line 18
          result.
                 ^
      SyntaxError: invalid syntax
    "stderr_id": !!int |-
      10
    "stdout":
    - ""
    - ""
    - ""
    "stdout_id": !!int |-
      20
  !!int "24":
    "stderr":
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      12
    "stdout":
    - |
      ['A', 'B', 'C', 'D']
    - |
      ['A', '', 'B', '', 'C']
    - |
      ['B', 'B', 'B', '', 'Z', 'Z', 'Z', '', 'A', 'B', 'C']
    "stdout_id": !!int |-
      14
  !!int "25":
    "stderr":
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      12
    "stdout":
    - |
      []
    - |
      ['a', 'b']
    - |
      ['bbb', 'zzz']
    "stdout_id": !!int |-
      24
  !!int "26":
    "stderr":
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      12
    "stdout":
    - |
      ['A', 'B', 'C', 'D']
    - |
      ['A', 'B', 'B', 'C', 'C']
    - |
      ['B', 'B', 'B', 'Z', 'Z', 'Z', 'Z', 'A', 'A', 'B', 'C']
    "stdout_id": !!int |-
      23
  !!int "27":
    "stderr":
    - |2
        File "/tmp/file.py", line 14
          lst_str.append(chr(
                            ^
      SyntaxError: '(' was never closed
    - |2
        File "/tmp/file.py", line 14
          lst_str.append(chr(
                            ^
      SyntaxError: '(' was never closed
    - |2
        File "/tmp/file.py", line 14
          lst_str.append(chr(
                            ^
      SyntaxError: '(' was never closed
    "stderr_id": !!int |-
      4
    "stdout":
    - ""
    - ""
    - ""
    "stdout_id": !!int |-
      20
  !!int "28":
    "stderr":
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      12
    "stdout":
    - |
      []
    - |
      ['A', 'B']
    - |
      ['BBB', 'ZZZ']
    "stdout_id": !!int |-
      19
  !!int "29":
    "stderr":
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      12
    "stdout":
    - |
      ABCD
    - |
      A B C
    - |
      BBB ZZZ ABC
    "stdout_id": !!int |-
      21
  !!int "30":
    "stderr":
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 12, in <module>
          print(convert([0, 1, 2, 3]))
        File "/tmp/file.py", line 10, in convert
          result[-1] += chr(lst[i] + 65)
      IndexError: list index out of range
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 12, in <module>
          print(convert([0, -1, 1, -1, 2]))
        File "/tmp/file.py", line 10, in convert
          result[-1] += chr(lst[i] + 65)
      IndexError: list index out of range
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 12, in <module>
          print(convert([1, 1, 1, -1, 25, 25, 25, -1, 0, 1, 2]))
        File "/tmp/file.py", line 10, in convert
          result[-1] += chr(lst[i] + 65)
      IndexError: list index out of range
    "stderr_id": !!int |-
      2
    "stdout":
    - ""
    - ""
    - ""
    "stdout_id": !!int |-
      20
  !!int "31":
    "stderr":
    - |2
        File "/tmp/file.py", line 16
          print(convert([0, 1, 2, 3]))
      IndentationError: expected an indented block after 'if' statement on line 14
    - |2
        File "/tmp/file.py", line 16
          print(convert([0, -1, 1, -1, 2]))
      IndentationError: expected an indented block after 'if' statement on line 14
    - |2
        File "/tmp/file.py", line 16
          print(convert([1, 1, 1, -1, 25, 25, 25, -1, 0, 1, 2]))
      IndentationError: expected an indented block after 'if' statement on line 14
    "stderr_id": !!int |-
      18
    "stdout":
    - ""
    - ""
    - ""
    "stdout_id": !!int |-
      20
  !!int "32":
    "stderr":
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      12
    "stdout":
    - |
      ['@', 'A', 'B', 'C']
    - |
      ['@', '?', 'A', '?', 'B']
    - |
      ['A', 'A', 'A', '?', 'Y', 'Y', 'Y', '?', '@', 'A', 'B']
    "stdout_id": !!int |-
      28
  !!int "33":
    "stderr":
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 7, in <module>
          print(convert([0, 1, 2, 3]))
        File "/tmp/file.py", line 6, in convert
          return ''.join([alphabet[abs(int(i))] for i in lst.split()])
      AttributeError: 'list' object has no attribute 'split'
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 7, in <module>
          print(convert([0, -1, 1, -1, 2]))
        File "/tmp/file.py", line 6, in convert
          return ''.join([alphabet[abs(int(i))] for i in lst.split()])
      AttributeError: 'list' object has no attribute 'split'
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 7, in <module>
          print(convert([1, 1, 1, -1, 25, 25, 25, -1, 0, 1, 2]))
        File "/tmp/file.py", line 6, in convert
          return ''.join([alphabet[abs(int(i))] for i in lst.split()])
      AttributeError: 'list' object has no attribute 'split'
    "stderr_id": !!int |-
      11
    "stdout":
    - ""
    - ""
    - ""
    "stdout_id": !!int |-
      20
  !!int "34":
    "stderr":
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 7, in <module>
          print(convert([0, 1, 2, 3]))
        File "/tmp/file.py", line 6, in convert
          return ''.join([d[int(num)] for num in lst.split()])
      AttributeError: 'list' object has no attribute 'split'
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 7, in <module>
          print(convert([0, -1, 1, -1, 2]))
        File "/tmp/file.py", line 6, in convert
          return ''.join([d[int(num)] for num in lst.split()])
      AttributeError: 'list' object has no attribute 'split'
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 7, in <module>
          print(convert([1, 1, 1, -1, 25, 25, 25, -1, 0, 1, 2]))
        File "/tmp/file.py", line 6, in convert
          return ''.join([d[int(num)] for num in lst.split()])
      AttributeError: 'list' object has no attribute 'split'
    "stderr_id": !!int |-
      8
    "stdout":
    - ""
    - ""
    - ""
    "stdout_id": !!int |-
      20
  !!int "35":
    "stderr":
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      12
    "stdout":
    - |
      [0, 1, 2, 3, ',']
    - |
      [0, -1, 1, -1, 2, ',']
    - |
      [1, 1, 1, -1, 25, 25, 25, -1, 0, 1, 2, ',']
    "stdout_id": !!int |-
      0
  !!int "36":
    "stderr":
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      12
    "stdout":
    - |
      abcd
    - |
      a`b`c
    - |
      bbb`zzz`abc
    "stdout_id": !!int |-
      6
  !!int "37":
    "stderr":
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 9, in <module>
          print(convert([0, 1, 2, 3]))
        File "/tmp/file.py", line 7, in convert
          lst = [ord(i) for i in lst]
        File "/tmp/file.py", line 7, in <listcomp>
          lst = [ord(i) for i in lst]
      TypeError: ord() expected string of length 1, but int found
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 9, in <module>
          print(convert([0, -1, 1, -1, 2]))
        File "/tmp/file.py", line 7, in convert
          lst = [ord(i) for i in lst]
        File "/tmp/file.py", line 7, in <listcomp>
          lst = [ord(i) for i in lst]
      TypeError: ord() expected string of length 1, but int found
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 9, in <module>
          print(convert([1, 1, 1, -1, 25, 25, 25, -1, 0, 1, 2]))
        File "/tmp/file.py", line 7, in convert
          lst = [ord(i) for i in lst]
        File "/tmp/file.py", line 7, in <listcomp>
          lst = [ord(i) for i in lst]
      TypeError: ord() expected string of length 1, but int found
    "stderr_id": !!int |-
      17
    "stdout":
    - ""
    - ""
    - ""
    "stdout_id": !!int |-
      20
  !!int "38":
    "stderr":
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      12
    "stdout":
    - |
      0
    - |
      0
    - |
      1
    "stdout_id": !!int |-
      12
  !!int "39":
    "stderr":
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 7, in <module>
          print(convert([0, 1, 2, 3]))
        File "/tmp/file.py", line 6, in convert
          return [ord(i) - 97 for i in lst]
        File "/tmp/file.py", line 6, in <listcomp>
          return [ord(i) - 97 for i in lst]
      TypeError: ord() expected string of length 1, but int found
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 7, in <module>
          print(convert([0, -1, 1, -1, 2]))
        File "/tmp/file.py", line 6, in convert
          return [ord(i) - 97 for i in lst]
        File "/tmp/file.py", line 6, in <listcomp>
          return [ord(i) - 97 for i in lst]
      TypeError: ord() expected string of length 1, but int found
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 7, in <module>
          print(convert([1, 1, 1, -1, 25, 25, 25, -1, 0, 1, 2]))
        File "/tmp/file.py", line 6, in convert
          return [ord(i) - 97 for i in lst]
        File "/tmp/file.py", line 6, in <listcomp>
          return [ord(i) - 97 for i in lst]
      TypeError: ord() expected string of length 1, but int found
    "stderr_id": !!int |-
      14
    "stdout":
    - ""
    - ""
    - ""
    "stdout_id": !!int |-
      20
  !!int "40":
    "stderr":
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 7, in <module>
          print(convert([0, 1, 2, 3]))
        File "/tmp/file.py", line 6, in convert
          return [letters[i] for i in lst]
        File "/tmp/file.py", line 6, in <listcomp>
          return [letters[i] for i in lst]
      NameError: name 'letters' is not defined
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 7, in <module>
          print(convert([0, -1, 1, -1, 2]))
        File "/tmp/file.py", line 6, in convert
          return [letters[i] for i in lst]
        File "/tmp/file.py", line 6, in <listcomp>
          return [letters[i] for i in lst]
      NameError: name 'letters' is not defined
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 7, in <module>
          print(convert([1, 1, 1, -1, 25, 25, 25, -1, 0, 1, 2]))
        File "/tmp/file.py", line 6, in convert
          return [letters[i] for i in lst]
        File "/tmp/file.py", line 6, in <listcomp>
          return [letters[i] for i in lst]
      NameError: name 'letters' is not defined
    "stderr_id": !!int |-
      13
    "stdout":
    - ""
    - ""
    - ""
    "stdout_id": !!int |-
      20
  !!int "41":
    "stderr":
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      12
    "stdout":
    - |
      ['A', 'B', 'C', 'D']
    - |
      ['A', ',', 'B', ',', 'C']
    - |
      ['B', 'B', 'B', ',', 'Z', 'Z', 'Z', ',', 'A', 'B', 'C']
    "stdout_id": !!int |-
      8
  !!int "42":
    "stderr":
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 12, in <module>
          print(convert([0, 1, 2, 3]))
        File "/tmp/file.py", line 10, in convert
          lst_str[-1] += chr(lst[i]+65)
      IndexError: list index out of range
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 12, in <module>
          print(convert([0, -1, 1, -1, 2]))
        File "/tmp/file.py", line 10, in convert
          lst_str[-1] += chr(lst[i]+65)
      IndexError: list index out of range
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 12, in <module>
          print(convert([1, 1, 1, -1, 25, 25, 25, -1, 0, 1, 2]))
        File "/tmp/file.py", line 10, in convert
          lst_str[-1] += chr(lst[i]+65)
      IndexError: list index out of range
    "stderr_id": !!int |-
      16
    "stdout":
    - ""
    - ""
    - ""
    "stdout_id": !!int |-
      20
  !!int "43":
    "stderr":
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      12
    "stdout":
    - |
      ['A', 'B', 'C', 'D']
    - |
      ['A', ' ', 'B', ' ', 'C']
    - |
      ['B', 'B', 'B', ' ', 'Z', 'Z', 'Z', ' ', 'A', 'B', 'C']
    "stdout_id": !!int |-
      27
  !!int "44":
    "stderr":
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      12
    "stdout":
    - |
      ABCD
    - |
      A][B][C
    - |
      BBB][ZZZ][ABC
    "stdout_id": !!int |-
      15
  !!int "45":
    "stderr":
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 12, in <module>
          print(convert([0, 1, 2, 3]))
        File "/tmp/file.py", line 10, in convert
          new_lst[-1].append(chr(lst[i] + 97))
      IndexError: list index out of range
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 12, in <module>
          print(convert([0, -1, 1, -1, 2]))
        File "/tmp/file.py", line 10, in convert
          new_lst[-1].append(chr(lst[i] + 97))
      IndexError: list index out of range
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 12, in <module>
          print(convert([1, 1, 1, -1, 25, 25, 25, -1, 0, 1, 2]))
        File "/tmp/file.py", line 10, in convert
          new_lst[-1].append(chr(lst[i] + 97))
      IndexError: list index out of range
    "stderr_id": !!int |-
      0
    "stdout":
    - ""
    - ""
    - ""
    "stdout_id": !!int |-
      20
  !!int "46":
    "stderr":
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 12, in <module>
          print(convert([0, 1, 2, 3]))
        File "/tmp/file.py", line 10, in convert
          new_lst[-1].append(i)
      IndexError: list index out of range
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 12, in <module>
          print(convert([0, -1, 1, -1, 2]))
        File "/tmp/file.py", line 10, in convert
          new_lst[-1].append(i)
      IndexError: list index out of range
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 12, in <module>
          print(convert([1, 1, 1, -1, 25, 25, 25, -1, 0, 1, 2]))
        File "/tmp/file.py", line 10, in convert
          new_lst[-1].append(i)
      IndexError: list index out of range
    "stderr_id": !!int |-
      5
    "stdout":
    - ""
    - ""
    - ""
    "stdout_id": !!int |-
      20
  !!int "47":
    "stderr":
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      12
    "stdout":
    - |
      []
    - |
      [['a'], ['b']]
    - |
      [['b', 'b', 'b'], ['z', 'z', 'z']]
    "stdout_id": !!int |-
      17
  !!int "48":
    "stderr":
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      12
    "stdout":
    - |
      ['`', 'a', 'b', 'c']
    - |
      ['`', -1, 'a', -1, 'b']
    - |
      ['a', 'a', 'a', -1, 'y', 'y', 'y', -1, '`', 'a', 'b']
    "stdout_id": !!int |-
      9
  !!int "49":
    "stderr":
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 12, in <module>
          print(convert([0, 1, 2, 3]))
        File "/tmp/file.py", line 10, in convert
          result[-1] += chr(i + 65)
      IndexError: list index out of range
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 12, in <module>
          print(convert([0, -1, 1, -1, 2]))
        File "/tmp/file.py", line 10, in convert
          result[-1] += chr(i + 65)
      IndexError: list index out of range
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 12, in <module>
          print(convert([1, 1, 1, -1, 25, 25, 25, -1, 0, 1, 2]))
        File "/tmp/file.py", line 10, in convert
          result[-1] += chr(i + 65)
      IndexError: list index out of range
    "stderr_id": !!int |-
      3
    "stdout":
    - ""
    - ""
    - ""
    "stdout_id": !!int |-
      20
"student_color":
  "student0": |-
    #d83034
  "student10": |-
    #f9e858
  "student17": |-
    #008dff
  "student18": |-
    #4ecb8d
  "student21": |-
    #c701ff
  "student25": |-
    #ffcd8e
  "student26": |-
    #003a7d
  "student3": |-
    #Ff73b6
  "student30": |-
    #ff7f50
  "student4": |-
    #7fff00
  "student41": |-
    #8a2be2
  "student51": |-
    #ffd700
