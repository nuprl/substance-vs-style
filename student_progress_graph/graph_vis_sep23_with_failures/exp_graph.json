{
    "directed": true,
    "multigraph": true,
    "graph": [],
    "nodes": [
        {
            "stderr_id": 0,
            "stdout_id": 0,
            "hover": "stdout:\n[1, 2, 3]\n\n[8, 8, 8]\n\n2\n\nstderr:\n_no_stderr_",
            "color": "grey",
            "id": 0
        },
        {
            "stderr_id": 0,
            "stdout_id": 1,
            "hover": "stdout:\n[1, 2, 3]\n\n[2, 2, 2]\n\n[2]\n\nstderr:\n_no_stderr_",
            "color": "red",
            "id": 1
        },
        {
            "stderr_id": 0,
            "stdout_id": 2,
            "hover": "stdout:\n[1, 2, 3]\n\n[8, 8, 8]\n\n[4]\n\nstderr:\n_no_stderr_",
            "color": "grey",
            "id": 2
        },
        {
            "stderr_id": 0,
            "stdout_id": 3,
            "hover": "stdout:\n[1, 2, 3]\n\n[6, 6, 6]\n\n[4]\n\nstderr:\n_no_stderr_",
            "color": "red",
            "id": 3
        }
    ],
    "adjacency": [
        [
            {
                "diff": 2,
                "color": "#d83034",
                "arrow_color": "#d83034",
                "username": "student14",
                "hover": "username:student14\n\ndiff:\n--- \n+++ \n@@ -2,30 +2,14 @@\n exp(lst, val): \"\"\"-check-what-number-is-outside-each-set-of-brackets.-then-raise+multiply numbers in brackets-to-the-power-of-each+by number outside of-the-corresponding brackets. Return finished\n\nFROM completion:\ndef exp(lst, val):\n    \"\"\"\n    check what number is outside each set of brackets. then raise numbers in brackets to the power of each number outside of the corresponding brackets. Return finished equation\n    \"\"\"\n        if len(lst) == 1:\n        return lst[0]\n    else:\n        for i in range(len(lst)):\n            if type(lst[i]) == list:\n                lst[i] = exp(lst[i], val)\n            else:\n                lst[i] = lst[i] ** val\n        return lst\n\n\n\nTO completion:\ndef exp(lst, val):\n    \"\"\"\n    multiply numbers in brackets by number outside of brackets. Return finished equation\n    \"\"\"\n        for i in range(len(lst)):\n        if lst[i] == '^':\n            lst[i-1] = lst[i-1] ** lst[i+1]\n            lst.pop(i)\n            lst.pop(i)\n            return exp(lst, val)\n    return lst\n\n",
                "id": 1,
                "key": 0
            }
        ],
        [
            {
                "diff": 0,
                "color": "#d83034",
                "arrow_color": "#d83034",
                "username": "student14",
                "hover": "username:student14\n\ndiff:\n--- \n+++ \n@@ -2,11 +2,15 @@\n exp(lst, val): \"\"\"-multiply+raise numbers in brackets-by+to+the+power+of+the number outside of\n\nFROM completion:\ndef exp(lst, val):\n    \"\"\"\n    multiply numbers in brackets by number outside of brackets. Return finished equation\n    \"\"\"\n        for i in range(len(lst)):\n        if lst[i] == '^':\n            lst[i-1] = lst[i-1] ** lst[i+1]\n            lst.pop(i)\n            lst.pop(i)\n            return exp(lst, val)\n    return lst\n\n\n\nTO completion:\ndef exp(lst, val):\n    \"\"\"\n    raise numbers in brackets to the power of the number outside of brackets. Return finished equation\n    \"\"\"\n        for i in range(len(lst)):\n        if lst[i] == '^':\n            lst[i - 1] = lst[i - 1] ** lst[i + 1]\n            lst[i] = ''\n            lst[i + 1] = ''\n    return lst\n\n",
                "id": 1,
                "key": 0
            }
        ],
        [
            {
                "diff": 1,
                "color": "#f9e858",
                "arrow_color": "#f9e858",
                "username": "student15",
                "hover": "username:student15\n\ndiff:\n--- \n+++ \n@@ -2,16 +2,12 @@\n exp(lst, val): \"\"\"-raises+multiplies each number in lst-to-the-power-of-the+by val, returns a\n\nFROM completion:\ndef exp(lst, val):\n    \"\"\"\n    raises each number in lst to the power of the val, returns a list of the new values\n    \"\"\"\n        return [x**val for x in lst]\n\n\nTO completion:\ndef exp(lst, val):\n    \"\"\"\n    multiplies each number in lst by val, returns a list of the new values\n    \"\"\"\n        return [x * val for x in lst]\n",
                "id": 3,
                "key": 0
            }
        ],
        []
    ]
}