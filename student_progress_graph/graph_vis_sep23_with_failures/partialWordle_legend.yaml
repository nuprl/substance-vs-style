"edges":
  !!int "0": ""
  !!int "1": |-
    ---
    +++
    @@ -6,7 +6,7 @@
     prints how many-letters+characters each string in
  !!int "2": |-
    ---
    +++
    @@ -8,7 +8,7 @@
     many characters, including-"'",+''', each string within
  !!int "3": |-
    ---
    +++
    @@ -37,20 +37,71 @@
     with the hidden-words+words.+Compute+the+total+points+after+comparing+all+letters.+The+total+points+should+be+calculated+following+the+rules:+If+the+letter+is+the+same+from+the+hidden+word+but+in+a+different+position,+receives++1.+If+the+letter+is+the+same+from+the+hidden+word and-return+in+the+same+position,+receives++2.+The+function+returns a list-with+of the-number-of-how-many-similar-letters-both-strings-share.+total+points+from+each+word+in+the+list. """
  !!int "4": |-
    ---
    +++
    @@ -6,7 +6,9 @@
     shows how many-characters+characters,+including+"'", each string within
  !!int "5": |-
    ---
    +++
    @@ -12,7 +12,9 @@
     in the list-shares+has+in+common with the string
  !!int "6": |-
    ---
    +++
    @@ -3,13 +3,13 @@
     """ The function-prints+shows how many characters each string-in+within the list has@@ -17,6 +17,9 @@
     common with the+characters+in+the string outside the
"nodes":
  !!int "0":
    "stderr":
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      0
    "stdout":
    - |
      [0, 0, 2, 3, 0]
    - |
      [0, 1, 2, 0, 1]
    - |
      [2, 2, 1, 1, 1]
    "stdout_id": !!int |-
      0
  !!int "1":
    "stderr":
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      0
    "stdout":
    - |
      [0, 0, 2, 3, 3]
    - |
      [0, 1, 2, 1, 2]
    - |
      [2, 1, 1, 1, 2]
    "stdout_id": !!int |-
      2
  !!int "2":
    "stderr":
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 7, in <module>
          print(partialWordle(["zzzz","bbbb","lyre","part","apes"],
        File "/tmp/file.py", line 6, in partialWordle
          raise NotImplementedError()
      NotImplementedError
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 7, in <module>
          print(partialWordle(["aaaa","wall","woah","deal","howl"],
        File "/tmp/file.py", line 6, in partialWordle
          raise NotImplementedError()
      NotImplementedError
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 7, in <module>
          print(partialWordle(["real","hill","ream","meal","curl"],
        File "/tmp/file.py", line 6, in partialWordle
          raise NotImplementedError()
      NotImplementedError
    "stderr_id": !!int |-
      1
    "stdout":
    - ""
    - ""
    - ""
    "stdout_id": !!int |-
      3
  !!int "3":
    "stderr":
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      0
    "stdout":
    - |
      [0, 0, 4, 6, 3]
    - |
      [0, 2, 4, 1, 3]
    - |
      [4, 4, 2, 2, 3]
    "stdout_id": !!int |-
      5
  !!int "4":
    "stderr":
    - |2
        File "/tmp/file.py", line 6
          print(partialWordle(["zzzz","bbbb","lyre","part","apes"],
      IndentationError: expected an indented block after 'for' statement on line 5
    - |2
        File "/tmp/file.py", line 6
          print(partialWordle(["aaaa","wall","woah","deal","howl"],
      IndentationError: expected an indented block after 'for' statement on line 5
    - |2
        File "/tmp/file.py", line 6
          print(partialWordle(["real","hill","ream","meal","curl"],
      IndentationError: expected an indented block after 'for' statement on line 5
    "stderr_id": !!int |-
      2
    "stdout":
    - ""
    - ""
    - ""
    "stdout_id": !!int |-
      3
"student_color":
  "student14": |-
    #d83034
  "student55": |-
    #f9e858
  "student58": |-
    #008dff
  "student9": |-
    #4ecb8d
