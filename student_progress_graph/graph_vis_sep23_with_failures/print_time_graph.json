{
    "directed": true,
    "multigraph": true,
    "graph": [],
    "nodes": [
        {
            "stderr_id": 3,
            "stdout_id": 1,
            "hover": "stdout:\nInvalid day\n\nInvalid day\n\nInvalid day\n\nInvalid day\n\nInvalid day\n\nInvalid day\n\nstderr:\n_no_stderr_",
            "color": "grey",
            "id": 0
        },
        {
            "stderr_id": 3,
            "stdout_id": 6,
            "hover": "stdout:\nweekday\n\nweekday\n\nweekday\n\nweekday\n\nsleeping\n\nweekday\n\nstderr:\n_no_stderr_",
            "color": "blue",
            "id": 1
        },
        {
            "stderr_id": 3,
            "stdout_id": 7,
            "hover": "stdout:\nweekday\n\nweekday\n\nweekday\n\nweekday\n\nsleeping\n\nsleeping\n\nstderr:\n_no_stderr_",
            "color": "blue",
            "id": 2
        },
        {
            "stderr_id": 3,
            "stdout_id": 2,
            "hover": "stdout:\nweekend\n\nweekend\n\nweekday\n\nweekday\n\nsleeping\n\nsleeping\n\nstderr:\n_no_stderr_",
            "color": "green",
            "id": 3
        },
        {
            "stderr_id": 3,
            "stdout_id": 5,
            "hover": "stdout:\nWeekday\n\nWeekday\n\nWeekday\n\nWeekday\n\nSleeping\n\nSleeping\n\nstderr:\n_no_stderr_",
            "color": "grey",
            "id": 4
        },
        {
            "stderr_id": 3,
            "stdout_id": 4,
            "hover": "stdout:\nweekend\n\nweekend\n\nweekday\n\nweekday\n\nsleeping\n\nweekday\n\nstderr:\n_no_stderr_",
            "color": "blue",
            "id": 5
        },
        {
            "stderr_id": 3,
            "stdout_id": 0,
            "hover": "stdout:\nweekend\n\nweekend\n\nweekday\n\nweekday\n\nweekday\n\nweekday\n\nstderr:\n_no_stderr_",
            "color": "grey",
            "id": 6
        },
        {
            "stderr_id": 7,
            "stdout_id": 3,
            "hover": "stdout:\n_no_stdout_\nstderr:\n  File \"/tmp/file.py\", line 7\n    elif day == \"Sat\" or day == \"Sun\":\n    ^\nIndentationError: expected an indented block after 'if' statement on line 5\n\n  File \"/tmp/file.py\", line 7\n    elif day == \"Sat\" or day == \"Sun\":\n    ^\nIndentationError: expected an indented block after 'if' statement on line 5\n\n  File \"/tmp/file.py\", line 7\n    elif day == \"Sat\" or day == \"Sun\":\n    ^\nIndentationError: expected an indented block after 'if' statement on line 5\n\n  File \"/tmp/file.py\", line 7\n    elif day == \"Sat\" or day == \"Sun\":\n    ^\nIndentationError: expected an indented block after 'if' statement on line 5\n\n  File \"/tmp/file.py\", line 7\n    elif day == \"Sat\" or day == \"Sun\":\n    ^\nIndentationError: expected an indented block after 'if' statement on line 5\n\n  File \"/tmp/file.py\", line 7\n    elif day == \"Sat\" or day == \"Sun\":\n    ^\nIndentationError: expected an indented block after 'if' statement on line 5\n",
            "color": "grey",
            "id": 7
        },
        {
            "stderr_id": 1,
            "stdout_id": 3,
            "hover": "stdout:\n_no_stdout_\nstderr:\n  File \"/tmp/file.py\", line 20\n    print_time('Sun',5\n              ^\nSyntaxError: '(' was never closed\n\n  File \"/tmp/file.py\", line 20\n    print_time('Sun',5\n              ^\nSyntaxError: '(' was never closed\n\n  File \"/tmp/file.py\", line 20\n    print_time('Sun',5\n              ^\nSyntaxError: '(' was never closed\n\n  File \"/tmp/file.py\", line 20\n    print_time('Sun',5\n              ^\nSyntaxError: '(' was never closed\n\n  File \"/tmp/file.py\", line 20\n    print_time('Sun',5\n              ^\nSyntaxError: '(' was never closed\n\n  File \"/tmp/file.py\", line 20\n    print_time('Sun',5\n              ^\nSyntaxError: '(' was never closed\n",
            "color": "grey",
            "id": 8
        },
        {
            "stderr_id": 2,
            "stdout_id": 3,
            "hover": "stdout:\n_no_stdout_\nstderr:\n  File \"/tmp/file.py\", line 7\n    elif day >= 1 and day <= 5:\n    ^\nIndentationError: expected an indented block after 'if' statement on line 5\n\n  File \"/tmp/file.py\", line 7\n    elif day >= 1 and day <= 5:\n    ^\nIndentationError: expected an indented block after 'if' statement on line 5\n\n  File \"/tmp/file.py\", line 7\n    elif day >= 1 and day <= 5:\n    ^\nIndentationError: expected an indented block after 'if' statement on line 5\n\n  File \"/tmp/file.py\", line 7\n    elif day >= 1 and day <= 5:\n    ^\nIndentationError: expected an indented block after 'if' statement on line 5\n\n  File \"/tmp/file.py\", line 7\n    elif day >= 1 and day <= 5:\n    ^\nIndentationError: expected an indented block after 'if' statement on line 5\n\n  File \"/tmp/file.py\", line 7\n    elif day >= 1 and day <= 5:\n    ^\nIndentationError: expected an indented block after 'if' statement on line 5\n",
            "color": "grey",
            "id": 9
        },
        {
            "stderr_id": 5,
            "stdout_id": 3,
            "hover": "stdout:\n_no_stdout_\nstderr:\n  File \"/tmp/file.py\", line 7\n    else:\n    ^\nIndentationError: expected an indented block after 'if' statement on line 5\n\n  File \"/tmp/file.py\", line 7\n    else:\n    ^\nIndentationError: expected an indented block after 'if' statement on line 5\n\n  File \"/tmp/file.py\", line 7\n    else:\n    ^\nIndentationError: expected an indented block after 'if' statement on line 5\n\n  File \"/tmp/file.py\", line 7\n    else:\n    ^\nIndentationError: expected an indented block after 'if' statement on line 5\n\n  File \"/tmp/file.py\", line 7\n    else:\n    ^\nIndentationError: expected an indented block after 'if' statement on line 5\n\n  File \"/tmp/file.py\", line 7\n    else:\n    ^\nIndentationError: expected an indented block after 'if' statement on line 5\n",
            "color": "blue",
            "id": 10
        },
        {
            "stderr_id": 0,
            "stdout_id": 3,
            "hover": "stdout:\n_no_stdout_\nstderr:\nTraceback (most recent call last):\n  File \"/tmp/file.py\", line 22, in <module>\n    print_\nNameError: name 'print_' is not defined. Did you mean: 'print'?\n\nTraceback (most recent call last):\n  File \"/tmp/file.py\", line 22, in <module>\n    print_\nNameError: name 'print_' is not defined. Did you mean: 'print'?\n\nTraceback (most recent call last):\n  File \"/tmp/file.py\", line 22, in <module>\n    print_\nNameError: name 'print_' is not defined. Did you mean: 'print'?\n\nTraceback (most recent call last):\n  File \"/tmp/file.py\", line 22, in <module>\n    print_\nNameError: name 'print_' is not defined. Did you mean: 'print'?\n\nTraceback (most recent call last):\n  File \"/tmp/file.py\", line 22, in <module>\n    print_\nNameError: name 'print_' is not defined. Did you mean: 'print'?\n\nTraceback (most recent call last):\n  File \"/tmp/file.py\", line 22, in <module>\n    print_\nNameError: name 'print_' is not defined. Did you mean: 'print'?\n",
            "color": "blue",
            "id": 11
        },
        {
            "stderr_id": 4,
            "stdout_id": 3,
            "hover": "stdout:\n_no_stdout_\nstderr:\n  File \"/tmp/file.py\", line 15\n    print(print_time('Sat', 12))\nIndentationError: expected an indented block after 'else' statement on line 14\n\n  File \"/tmp/file.py\", line 15\n    print(print_time('Sun', 12))\nIndentationError: expected an indented block after 'else' statement on line 14\n\n  File \"/tmp/file.py\", line 15\n    print(print_time('Mon', 9))\nIndentationError: expected an indented block after 'else' statement on line 14\n\n  File \"/tmp/file.py\", line 15\n    print(print_time('Tue', 23))\nIndentationError: expected an indented block after 'else' statement on line 14\n\n  File \"/tmp/file.py\", line 15\n    print(print_time('Wed', 0))\nIndentationError: expected an indented block after 'else' statement on line 14\n\n  File \"/tmp/file.py\", line 15\n    print(print_time('Thu', 8))\nIndentationError: expected an indented block after 'else' statement on line 14\n",
            "color": "grey",
            "id": 12
        },
        {
            "stderr_id": 6,
            "stdout_id": 3,
            "hover": "stdout:\n_no_stdout_\nstderr:\n  File \"/tmp/file.py\", line 13\n    return \"There are\n           ^\nSyntaxError: unterminated string literal (detected at line 13)\n\n  File \"/tmp/file.py\", line 13\n    return \"There are\n           ^\nSyntaxError: unterminated string literal (detected at line 13)\n\n  File \"/tmp/file.py\", line 13\n    return \"There are\n           ^\nSyntaxError: unterminated string literal (detected at line 13)\n\n  File \"/tmp/file.py\", line 13\n    return \"There are\n           ^\nSyntaxError: unterminated string literal (detected at line 13)\n\n  File \"/tmp/file.py\", line 13\n    return \"There are\n           ^\nSyntaxError: unterminated string literal (detected at line 13)\n\n  File \"/tmp/file.py\", line 13\n    return \"There are\n           ^\nSyntaxError: unterminated string literal (detected at line 13)\n",
            "color": "red",
            "id": 13
        }
    ],
    "adjacency": [
        [
            {
                "diff": 10,
                "color": "#d83034",
                "arrow_color": "#d83034",
                "username": "student12",
                "hover": "username:student12\nedge: (0->1)\ndiff:\n--- \n+++ \n@@ -1,28 +1,35 @@\n def print_time(day,hour): \"\"\"+If+the+hour+is+between+0+and+8,+return+sleeping. Return+weekend if the day-of-the-week is-a+Saturday+or+Sunday.+Return weekday-or-weekend if the-hour+day is-not+any+day between-0+Monday and-8.-Else,-return-sleeping.+Friday. \"\"\"\n\nFROM completion:\ndef print_time(day,hour):\n    \"\"\"\n    Return if the day of the week is a weekday or weekend if the hour is not between 0 and 8. Else, return sleeping.\n    \"\"\"\n        if day in ['Monday','Tuesday','Wednesday','Thursday','Friday']:\n        if hour >= 0 and hour <= 8:\n            return 'Sleeping'\n        else:\n            return 'Weekday'\n    elif day in ['Saturday','Sunday']:\n        if hour >= 0 and hour <= 8:\n            return 'Sleeping'\n        else:\n            return 'Weekend'\n    else:\n        return 'Invalid day'\n\n\nTO completion:\ndef print_time(day,hour):\n    \"\"\"\n    If the hour is between 0 and 8, return sleeping. Return weekend if the day is Saturday or Sunday. Return weekday if the day is any day between Monday and Friday.\n    \"\"\"\n        if hour < 8:\n        return \"sleeping\"\n    elif day == \"Saturday\" or day == \"Sunday\":\n        return \"weekend\"\n    else:\n        return \"weekday\"\n\nprint(print_time(\"Monday\",5))\nprint(print_time(\"Saturday\",5))\nprint(print_time(\"Monday\",12))\n",
                "id": 1,
                "key": 0
            }
        ],
        [
            {
                "diff": 8,
                "color": "#d83034",
                "arrow_color": "#d83034",
                "username": "student12",
                "hover": "username:student12\nedge: (1->2)\ndiff:\n--- \n+++ \n@@ -11,7 +11,8 @@\n 8, return sleeping.-Return+Else,+return weekend if the@@ -20,7 +21,8 @@\n Saturday or Sunday.-Return+Else,+return weekday if the\n\nFROM completion:\ndef print_time(day,hour):\n    \"\"\"\n    If the hour is between 0 and 8, return sleeping. Return weekend if the day is Saturday or Sunday. Return weekday if the day is any day between Monday and Friday.\n    \"\"\"\n        if hour < 8:\n        return \"sleeping\"\n    elif day == \"Saturday\" or day == \"Sunday\":\n        return \"weekend\"\n    else:\n        return \"weekday\"\n\nprint(print_time(\"Monday\",5))\nprint(print_time(\"Saturday\",5))\nprint(print_time(\"Monday\",12))\n\n\nTO completion:\ndef print_time(day,hour):\n    \"\"\"\n    If the hour is between 0 and 8, return sleeping. Else, return weekend if the day is Saturday or Sunday. Else, return weekday if the day is any day between Monday and Friday.\n    \"\"\"\n        if hour >= 0 and hour <= 8:\n        return \"sleeping\"\n    elif day == \"Saturday\" or day == \"Sunday\":\n        return \"weekend\"\n    else:\n        return \"weekday\"\n\nprint(print_time(\"Monday\",5))\nprint(print_time(\"Saturday\",10))\nprint(print_time(\"Monday\",22))\n",
                "id": 2,
                "key": 0
            }
        ],
        [
            {
                "diff": 4,
                "color": "#d83034",
                "arrow_color": "#d83034",
                "username": "student12",
                "hover": "username:student12\nedge: (2->3)\ndiff:\n--- \n+++ \n@@ -18,9 +18,9 @@\n the day is-Saturday+Sat or-Sunday.+Sun. Else, return weekday\n\nFROM completion:\ndef print_time(day,hour):\n    \"\"\"\n    If the hour is between 0 and 8, return sleeping. Else, return weekend if the day is Saturday or Sunday. Else, return weekday if the day is any day between Monday and Friday.\n    \"\"\"\n        if hour >= 0 and hour <= 8:\n        return \"sleeping\"\n    elif day == \"Saturday\" or day == \"Sunday\":\n        return \"weekend\"\n    else:\n        return \"weekday\"\n\nprint(print_time(\"Monday\",5))\nprint(print_time(\"Saturday\",10))\nprint(print_time(\"Monday\",22))\n\n\nTO completion:\ndef print_time(day,hour):\n    \"\"\"\n    If the hour is between 0 and 8, return sleeping. Else, return weekend if the day is Sat or Sun. Else, return weekday if the day is any day between Monday and Friday.\n    \"\"\"\n        if hour >= 0 and hour <= 8:\n        return \"sleeping\"\n    elif day == \"Sat\" or day == \"Sun\":\n        return \"weekend\"\n    else:\n        return \"weekday\"\n\nprint(print_time(\"Mon\",8))\n",
                "id": 3,
                "key": 0
            }
        ],
        [
            {
                "diff": 0,
                "color": "#Ff73b6",
                "arrow_color": "#Ff73b6",
                "username": "student77",
                "hover": "username:student77\nedge: (3->6)\ndiff:\n\n\nFROM completion:\ndef print_time(day,hour):\n    \"\"\"\n    Given two parameters,  the first being the day and the second being a measurement of time, return \"weekend\" if the day is 'Sat' or 'Sun', and return weekday if the day is neither. Return \"sleeping\" if the measurement of time is between '0' and '8', inclusive.\n    \"\"\"\n        if day == 'Sat' or day == 'Sun':\n        return 'weekend'\n    elif day == 'Mon' or day == 'Tue' or day == 'Wed' or day == 'Thu' or day == 'Fri':\n        if hour >= 0 and hour <= 8:\n            return 'sleeping'\n        else:\n            return 'weekday'\n    else:\n        return 'error'\n\nprint(print_time('\n\nTO completion:\ndef print_time(day,hour):\n    \"\"\"\n    Given two parameters,  the first being the day and the second being a measurement of time, return \"weekend\" if the day is 'Sat' or 'Sun', and return weekday if the day is neither. Return \"sleeping\" if the measurement of time is between '0' and '8', inclusive.\n    \"\"\"\n        if day == 'Sat' or day == 'Sun':\n        return 'weekend'\n    elif day != 'Sat' or day != 'Sun':\n        return 'weekday'\n    if hour >= 0 and hour <= 8:\n        return 'sleeping'\n    else:\n        return 'awake'\n\nprint(print_time('Sat',5))\nprint(print_time('Sat',10))\nprint(print_time",
                "id": 6,
                "key": 0
            }
        ],
        [
            {
                "diff": 2,
                "color": "#f9e858",
                "arrow_color": "#f9e858",
                "username": "student36",
                "hover": "username:student36\nedge: (4->5)\ndiff:\n--- \n+++ \n@@ -1,31 +1,13 @@\n def print_time(day,hour): \"\"\"-Accept-the-day-of-the-week,-and-the-time-of-day-and-if-the-time-is-between-9-23-return+Return weekend for Sat and Sun-and+or weekday for any\n\nFROM completion:\ndef print_time(day,hour):\n    \"\"\"\n    Accept the day of the week, and the time of day and if the time is between 9-23 return weekend for Sat and Sun and weekday for any other. If the time is between 0-8 return sleeping\n    \"\"\"\n        if day == \"Saturday\" or day == \"Sunday\":\n        return \"Weekend\"\n    elif hour >= 9 and hour <= 23:\n        return \"Weekday\"\n    else:\n        return \"Sleeping\"\n\nprint(print_time(\"Monday\",10))\nprint(print_time(\"Saturday\",10))\nprint(print_time(\"Sunday\",10))\nprint(print_time(\"Monday\",2))\n\n\nTO completion:\ndef print_time(day,hour):\n    \"\"\"\n    Return weekend for Sat and Sun or weekday for any other.  If the time is between 0-8 return sleeping\n    \"\"\"\n        if day == 'Sat' or day == 'Sun':\n        return 'weekend'\n    elif hour >= 0 and hour < 8:\n        return 'sleeping'\n    else:\n        return 'weekday'\n\nprint(print_time('Sat',5))\nprint(print_time('Mon',5))\nprint(print_time('Mon',8))\n",
                "id": 5,
                "key": 0
            }
        ],
        [
            {
                "diff": 5,
                "color": "#f9e858",
                "arrow_color": "#f9e858",
                "username": "student36",
                "hover": "username:student36\nedge: (5->3)\ndiff:\n--- \n+++ \n@@ -17,7 +17,7 @@\n time is between-0-8+0-9 return sleeping \"\"\"\n\nFROM completion:\ndef print_time(day,hour):\n    \"\"\"\n    Return weekend for Sat and Sun or weekday for any other.  If the time is between 0-8 return sleeping\n    \"\"\"\n        if day == 'Sat' or day == 'Sun':\n        return 'weekend'\n    elif hour >= 0 and hour < 8:\n        return 'sleeping'\n    else:\n        return 'weekday'\n\nprint(print_time('Sat',5))\nprint(print_time('Mon',5))\nprint(print_time('Mon',8))\n\n\nTO completion:\ndef print_time(day,hour):\n    \"\"\"\n    Return weekend for Sat and Sun or weekday for any other.  If the time is between 0-9 return sleeping\n    \"\"\"\n        if day == \"Sat\" or day == \"Sun\":\n        return \"weekend\"\n    elif hour < 9:\n        return \"sleeping\"\n    else:\n        return \"weekday\"\n\nprint(print_time(\"Sat\",5))\nprint(print_time(\"Mon\",8))\nprint(print_time(\"Mon\",11))\n",
                "id": 3,
                "key": 0
            },
            {
                "diff": 1,
                "color": "#4ecb8d",
                "arrow_color": "#4ecb8d",
                "username": "student42",
                "hover": "username:student42\nedge: (5->3)\ndiff:\n--- \n+++ \n@@ -12,9 +12,11 @@\n the hour is-between-0-and+less+than+or+equal+to 8, return the\n\nFROM completion:\ndef print_time(day,hour):\n    \"\"\"\n    take in a day and an hour. if the hour is between 0 and 8, return the string \"sleeping\". if not, check if the day is either \"Sat\" or \"Sun\", and if so, return the string \"weekend\". else, return the string \"weekday\". \n    \"\"\"\n        if hour < 8:\n        return \"sleeping\"\n    elif day == \"Sat\" or day == \"Sun\":\n        return \"weekend\"\n    else:\n        return \"weekday\"\n\n\nTO completion:\ndef print_time(day,hour):\n    \"\"\"\n    take in a day and an hour. if the hour is less than or equal to 8, return the string \"sleeping\". if not, check if the day is either \"Sat\" or \"Sun\", and if so, return the string \"weekend\". else, return the string \"weekday\". \n    \"\"\"\n        if hour <= 8:\n        return \"sleeping\"\n    elif day == \"Sat\" or day == \"Sun\":\n        return \"weekend\"\n    else:\n        return \"weekday\"\n",
                "id": 3,
                "key": 1
            }
        ],
        [
            {
                "diff": 11,
                "color": "#008dff",
                "arrow_color": "#008dff",
                "username": "student38",
                "hover": "username:student38\nedge: (6->3)\ndiff:\n--- \n+++ \n@@ -1,6 +1,15 @@\n def print_time(day,hour): \"\"\"+If+hour+is+from+0+to+8,+return+'sleeping'. Return 'weekend' if@@ -13,13 +22,4 @@\n 'weekday' if not.-If-hour-is-from-0-to-8,-return-'sleeping'. \"\"\"\n\nFROM completion:\ndef print_time(day,hour):\n    \"\"\"\n    Return 'weekend' if day is 'Sat' or 'Sun' and 'weekday' if not. If hour is from 0 to 8, return 'sleeping'. \n    \"\"\"\n        if day in ['Sat','Sun']:\n        return 'weekend'\n    else:\n        return 'weekday'\n    \n    if hour in range(0,9):\n        return 'sleeping'\n    else:\n        return 'not sleeping'\n\nprint_time('Sat',5)\n\n\nTO completion:\ndef print_time(day,hour):\n    \"\"\"\n    If hour is from 0 to 8, return 'sleeping'. Return 'weekend' if day is 'Sat' or 'Sun' and 'weekday' if not. \n    \"\"\"\n        if hour < 9:\n        return 'sleeping'\n    elif day == 'Sat' or day == 'Sun':\n        return 'weekend'\n    else:\n        return 'weekday'\nprint_time('Sat',5)\n",
                "id": 3,
                "key": 0
            },
            {
                "diff": 9,
                "color": "#Ff73b6",
                "arrow_color": "#Ff73b6",
                "username": "student77",
                "hover": "username:student77\nedge: (6->3)\ndiff:\n--- \n+++ \n@@ -23,9 +23,9 @@\n the day is-'Sat'+Sat or-'Sun',+Sun, and return weekday@@ -43,8 +43,19 @@\n time is between-'0'+0 and-'8',+8, inclusive.+If+the+time+is+any+other,+return+either+\"weekend\"+or+\"weekday\". \"\"\"\n\nFROM completion:\ndef print_time(day,hour):\n    \"\"\"\n    Given two parameters,  the first being the day and the second being a measurement of time, return \"weekend\" if the day is 'Sat' or 'Sun', and return weekday if the day is neither. Return \"sleeping\" if the measurement of time is between '0' and '8', inclusive.\n    \"\"\"\n        if day == 'Sat' or day == 'Sun':\n        return 'weekend'\n    elif day != 'Sat' or day != 'Sun':\n        return 'weekday'\n    if hour >= 0 and hour <= 8:\n        return 'sleeping'\n    else:\n        return 'awake'\n\nprint(print_time('Sat',5))\nprint(print_time('Sat',10))\nprint(print_time\n\nTO completion:\ndef print_time(day,hour):\n    \"\"\"\n    Given two parameters,  the first being the day and the second being a measurement of time, return \"weekend\" if the day is Sat or Sun, and return weekday if the day is neither. Return \"sleeping\" if the measurement of time is between 0 and 8, inclusive. If the time is any other, return either \"weekend\" or \"weekday\".\n    \"\"\"\n        if day == \"Sat\" or day == \"Sun\":\n        return \"weekend\"\n    elif hour >= 0 and hour <= 8:\n        return \"sleeping\"\n    else:\n        return \"weekday\"\n",
                "id": 3,
                "key": 1
            },
            {
                "diff": 3,
                "color": "#ffcd8e",
                "arrow_color": "#ffcd8e",
                "username": "student54",
                "hover": "username:student54\nedge: (6->11)\ndiff:\n--- \n+++ \n@@ -1,6 +1,11 @@\n def print_time(day,hour): \"\"\"+If+hours+0-8,+return+sleeping. If Sat or@@ -11,9 +16,4 @@\n Mon-Fri, return weekday.-If-hours-0-8,-return-sleeping. \"\"\"\n\nFROM completion:\ndef print_time(day,hour):\n    \"\"\"\n    If Sat or Sun, return weekend. If Mon-Fri, return weekday. If hours 0-8, return sleeping.\n    \"\"\"\n        if day == 'Sat' or day == 'Sun':\n        return 'weekend'\n    elif day == 'Mon' or day == 'Tue' or day == 'Wed' or day == 'Thu' or day == 'Fri':\n        return 'weekday'\n    elif hour >= 0 and hour < 8:\n        return 'sleeping'\n    else:\n        return 'weekday'\n\n\nTO completion:\ndef print_time(day,hour):\n    \"\"\"\n    If hours 0-8, return sleeping. If Sat or Sun, return weekend. If Mon-Fri, return weekday. \n    \"\"\"\n        if hour < 8:\n        return \"sleeping\"\n    elif day == \"Sat\" or day == \"Sun\":\n        return \"weekend\"\n    else:\n        return \"weekday\"\n\nprint_time(\"Mon\",9)\n\nprint_time(\"Sat\",7)\n\nprint_time(\"Sun\",8)\n\nprint_time(\"Mon\",8)\n\nprint_time(\"Sat\",8)\n\nprint_",
                "id": 11,
                "key": 0
            }
        ],
        [
            {
                "diff": 7,
                "color": "#4ecb8d",
                "arrow_color": "#4ecb8d",
                "username": "student42",
                "hover": "username:student42\nedge: (7->5)\ndiff:\n--- \n+++ \n@@ -16,7 +16,7 @@\n 0 and 8,-output+return the string \"sleeping\".@@ -34,11 +34,13 @@\n and if so,-output+return the string \"weekend\". else,-output+return+the+string \"weekday\". \"\"\"\n\nFROM completion:\ndef print_time(day,hour):\n    \"\"\"\n    take in a day and an hour. if the hour is between 0 and 8, output the string \"sleeping\". if not, check if the day is either \"Sat\" or \"Sun\", and if so, output the string \"weekend\". else, output \"weekday\". \n    \"\"\"\n        if hour < 8:\n        print(\"sleeping\")\n    elif day == \"Sat\" or day == \"Sun\":\n        print(\"weekend\")\n    else:\n        print(\"weekday\")\n\nprint_time(\"Sat\",8)\nprint_time(\"Sat\",7)\nprint_time(\"Mon\",8)\n\n\nTO completion:\ndef print_time(day,hour):\n    \"\"\"\n    take in a day and an hour. if the hour is between 0 and 8, return the string \"sleeping\". if not, check if the day is either \"Sat\" or \"Sun\", and if so, return the string \"weekend\". else, return the string \"weekday\". \n    \"\"\"\n        if hour < 8:\n        return \"sleeping\"\n    elif day == \"Sat\" or day == \"Sun\":\n        return \"weekend\"\n    else:\n        return \"weekday\"\n",
                "id": 5,
                "key": 0
            }
        ],
        [
            {
                "diff": 0,
                "color": "#c701ff",
                "arrow_color": "#c701ff",
                "username": "student43",
                "hover": "username:student43\nedge: (8->3)\ndiff:\n\n\nFROM completion:\ndef print_time(day,hour):\n    \"\"\"\n    First check the first component of the input, if it is Sat or if it is Sun, then return weekend. If not true, then check the second component of the input, if the it is in the range from 0 to 8, including 0 and 8, then return sleeping. If not true, then return weekday. \n    \"\"\"\n        if day == 'Sat' or day == 'Sun':\n        return 'weekend'\n    elif hour >= 0 and hour <= 8:\n        return 'sleeping'\n    else:\n        return 'weekday'\n    \nprint_time('Sat',5)\n\nprint_time('Sat',9)\n\nprint_time('Mon',5)\n\nprint_time('Mon',9)\n\nprint_time('Sun',5\n\nTO completion:\ndef print_time(day,hour):\n    \"\"\"\n    First check the first component of the input, if it is Sat or if it is Sun, then return weekend. If not true, then check the second component of the input, if the it is in the range from 0 to 8, including 0 and 8, then return sleeping. If not true, then return weekday. \n    \"\"\"\n        if day == 'Sat' or day == 'Sun':\n        return 'weekend'\n    elif hour in range(0,9):\n        return 'sleeping'\n    else:\n        return 'weekday'\n",
                "id": 3,
                "key": 0
            }
        ],
        [
            {
                "diff": 14,
                "color": "#ffcd8e",
                "arrow_color": "#ffcd8e",
                "username": "student54",
                "hover": "username:student54\nedge: (9->10)\ndiff:\n--- \n+++ \n@@ -2,9 +2,9 @@\n print_time(day,hour): \"\"\" If-sat+Sat or-sun,+Sun, print weekend. If\n\nFROM completion:\ndef print_time(day,hour):\n    \"\"\"\n    If sat or sun, print weekend. If Mon-Fri, print weekday. If hours 0-8, print sleeping.\n    \"\"\"\n        if day == 0 or day == 6:\n        print(\"It's the weekend!\")\n    elif day >= 1 and day <= 5:\n        print(\"It's a weekday.\")\n    if hour >= 0 and hour < 8:\n        print(\"It's sleeping time.\")\n    elif hour >= 8 and hour < 18:\n        print(\"It's working time.\")\n    elif hour >= 18 and hour < 24:\n        print(\"It's\n\nTO completion:\ndef print_time(day,hour):\n    \"\"\"\n    If Sat or Sun, print weekend. If Mon-Fri, print weekday. If hours 0-8, print sleeping.\n    \"\"\"\n        if day == 'Sat' or day == 'Sun':\n        print('It\\'s the weekend!')\n    else:\n        print('It\\'s a weekday.')\n    if hour >= 0 and hour < 8:\n        print('Sleeping...')\n    elif hour >= 8 and hour < 12:\n        print('Working...')\n    elif hour >= 12 and hour < 18:\n        print('Eating...')\n   ",
                "id": 10,
                "key": 0
            }
        ],
        [
            {
                "diff": 12,
                "color": "#ffcd8e",
                "arrow_color": "#ffcd8e",
                "username": "student54",
                "hover": "username:student54\nedge: (10->6)\ndiff:\n--- \n+++ \n@@ -5,15 +5,15 @@\n Sat or Sun,-print+return weekend. If Mon-Fri,-print+return weekday. If hours 0-8,-print+return sleeping. \"\"\"\n\nFROM completion:\ndef print_time(day,hour):\n    \"\"\"\n    If Sat or Sun, print weekend. If Mon-Fri, print weekday. If hours 0-8, print sleeping.\n    \"\"\"\n        if day == 'Sat' or day == 'Sun':\n        print('It\\'s the weekend!')\n    else:\n        print('It\\'s a weekday.')\n    if hour >= 0 and hour < 8:\n        print('Sleeping...')\n    elif hour >= 8 and hour < 12:\n        print('Working...')\n    elif hour >= 12 and hour < 18:\n        print('Eating...')\n   \n\nTO completion:\ndef print_time(day,hour):\n    \"\"\"\n    If Sat or Sun, return weekend. If Mon-Fri, return weekday. If hours 0-8, return sleeping.\n    \"\"\"\n        if day == 'Sat' or day == 'Sun':\n        return 'weekend'\n    elif day == 'Mon' or day == 'Tue' or day == 'Wed' or day == 'Thu' or day == 'Fri':\n        return 'weekday'\n    elif hour >= 0 and hour < 8:\n        return 'sleeping'\n    else:\n        return 'weekday'\n",
                "id": 6,
                "key": 0
            }
        ],
        [
            {
                "diff": 13,
                "color": "#ffcd8e",
                "arrow_color": "#ffcd8e",
                "username": "student54",
                "hover": "username:student54\nedge: (11->3)\ndiff:\n--- \n+++ \n@@ -4,6 +4,10 @@\n If hours 0-8,+or+equal+to+8, return sleeping. If\n\nFROM completion:\ndef print_time(day,hour):\n    \"\"\"\n    If hours 0-8, return sleeping. If Sat or Sun, return weekend. If Mon-Fri, return weekday. \n    \"\"\"\n        if hour < 8:\n        return \"sleeping\"\n    elif day == \"Sat\" or day == \"Sun\":\n        return \"weekend\"\n    else:\n        return \"weekday\"\n\nprint_time(\"Mon\",9)\n\nprint_time(\"Sat\",7)\n\nprint_time(\"Sun\",8)\n\nprint_time(\"Mon\",8)\n\nprint_time(\"Sat\",8)\n\nprint_\n\nTO completion:\ndef print_time(day,hour):\n    \"\"\"\n    If hours 0-8, or equal to 8, return sleeping. If Sat or Sun, return weekend. If Mon-Fri, return weekday. \n    \"\"\"\n        if hour < 8 or hour == 8:\n        return \"sleeping\"\n    elif day == \"Sat\" or day == \"Sun\":\n        return \"weekend\"\n    else:\n        return \"weekday\"\n\nprint_time(\"Mon\",8)\n",
                "id": 3,
                "key": 0
            }
        ],
        [
            {
                "diff": 6,
                "color": "#003a7d",
                "arrow_color": "#003a7d",
                "username": "student57",
                "hover": "username:student57\nedge: (12->13)\ndiff:\n--- \n+++ \n@@ -20,12 +20,12 @@\n if string is-a-weekday-(i.e.-\"Mon\"+\"Mon\",+\"Tue\",+\"Wed\",+\"Thu\" or-\"Tue\"),+\"Fri\", take into account\n\nFROM completion:\ndef print_time(day,hour):\n    \"\"\"\n    given a string and an integer, if given string is either \"Sat\" or \"Sun\", return \"weekend\". if string is a weekday (i.e. \"Mon\" or \"Tue\"), take into account the integer. if integer is from 9-23, return \"weekday\". if integer is from 0-8, return \"sleeping\". if integer is more than 24, return an error statement stating there are only 24 hours in a day where midnight starts at 0.\n    \"\"\"\n        if day == \"Sat\" or day == \"Sun\":\n        return \"weekend\"\n    elif day == \"Mon\" or day == \"Tue\":\n        if hour >= 9 and hour <= 23:\n            return \"weekday\"\n        elif hour >= 0 and hour <= 8:\n            return \"sleeping\"\n        else:\n            return \"There are only 24 hours in a day where midnight starts at 0.\"\n    else:\n       \n\nTO completion:\ndef print_time(day,hour):\n    \"\"\"\n    given a string and an integer, if given string is either \"Sat\" or \"Sun\", return \"weekend\". if string is \"Mon\", \"Tue\", \"Wed\", \"Thu\" or \"Fri\", take into account the integer. if integer is from 9-23, return \"weekday\". if integer is from 0-8, return \"sleeping\". if integer is more than 24, return an error statement stating there are only 24 hours in a day where midnight starts at 0.\n    \"\"\"\n        if day == \"Sat\" or day == \"Sun\":\n        return \"weekend\"\n    elif day == \"Mon\" or day == \"Tue\" or day == \"Wed\" or day == \"Thu\" or day == \"Fri\":\n        if hour >= 9 and hour <= 23:\n            return \"weekday\"\n        elif hour >= 0 and hour <= 8:\n            return \"sleeping\"\n        else:\n            return \"There are",
                "id": 13,
                "key": 0
            }
        ],
        []
    ]
}