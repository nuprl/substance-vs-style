{
    "directed": true,
    "multigraph": true,
    "graph": [],
    "nodes": [
        {
            "stderr_id": 0,
            "stdout_id": 1,
            "hover": "stdout:\n[4, 2]\n\nstderr:\n_no_stderr_",
            "color": "red",
            "id": 0
        },
        {
            "stderr_id": 0,
            "stdout_id": 3,
            "hover": "stdout:\n[4, 2]\n\n[2.2]\n\n[5]\n\nstderr:\n_no_stderr_",
            "color": "red",
            "id": 1
        },
        {
            "stderr_id": 0,
            "stdout_id": 6,
            "hover": "stdout:\n[4.3, 4, 2]\n\n[1.1, 2.2, 3.3]\n\nstderr:\n_no_stderr_",
            "color": "green",
            "id": 2
        },
        {
            "stderr_id": 0,
            "stdout_id": 0,
            "hover": "stdout:\n[4.3, 4, 2]\n\n[1.1, 2.2, 3.3]\n\n[5]\n\nstderr:\n_no_stderr_",
            "color": "red",
            "id": 3
        },
        {
            "stderr_id": 0,
            "stdout_id": 4,
            "hover": "stdout:\nNone\n\nNone\n\nNone\n\nstderr:\n_no_stderr_",
            "color": "red",
            "id": 4
        },
        {
            "stderr_id": 1,
            "stdout_id": 2,
            "hover": "stdout:\n_no_stdout_\nstderr:\nTraceback (most recent call last):\n  File \"/tmp/file.py\", line 9, in <module>\n    print(remove_odd([4.3, 4, 5, 2, 7]))\n  File \"/tmp/file.py\", line 6, in remove_odd\n    if lst[i] % 2 != 0:\nIndexError: list index out of range\n\nTraceback (most recent call last):\n  File \"/tmp/file.py\", line 9, in <module>\n    print(remove_odd([1.1, 2.2, 3.3]))\n  File \"/tmp/file.py\", line 6, in remove_odd\n    if lst[i] % 2 != 0:\nIndexError: list index out of range\n\nTraceback (most recent call last):\n  File \"/tmp/file.py\", line 9, in <module>\n    print(remove_odd([3, 5, 7]))\n  File \"/tmp/file.py\", line 6, in remove_odd\n    if lst[i] % 2 != 0:\nIndexError: list index out of range\n",
            "color": "grey",
            "id": 5
        },
        {
            "stderr_id": 3,
            "stdout_id": 5,
            "hover": "stdout:\n\n[1.1, 2.2, 3.3]\n\n\nstderr:\nTraceback (most recent call last):\n  File \"/tmp/file.py\", line 9, in <module>\n    print(remove_odd([4.3, 4, 5, 2, 7]))\n  File \"/tmp/file.py\", line 6, in remove_odd\n    if type(lst[i]) != float and lst[i] % 2 != 0:\nIndexError: list index out of range\n\n\nTraceback (most recent call last):\n  File \"/tmp/file.py\", line 9, in <module>\n    print(remove_odd([3, 5, 7]))\n  File \"/tmp/file.py\", line 6, in remove_odd\n    if type(lst[i]) != float and lst[i] % 2 != 0:\nIndexError: list index out of range\n",
            "color": "blue",
            "id": 6
        },
        {
            "stderr_id": 2,
            "stdout_id": 5,
            "hover": "stdout:\n\n[1.1, 2.2, 3.3]\n\n\nstderr:\nTraceback (most recent call last):\n  File \"/tmp/file.py\", line 11, in <module>\n    print(remove_odd([4.3, 4, 5, 2, 7]))\n  File \"/tmp/file.py\", line 6, in remove_odd\n    if type(lst[i]) == float:\nIndexError: list index out of range\n\n\nTraceback (most recent call last):\n  File \"/tmp/file.py\", line 11, in <module>\n    print(remove_odd([3, 5, 7]))\n  File \"/tmp/file.py\", line 6, in remove_odd\n    if type(lst[i]) == float:\nIndexError: list index out of range\n",
            "color": "red",
            "id": 7
        }
    ],
    "adjacency": [
        [
            {
                "diff": 31,
                "color": "#d83034",
                "arrow_color": "#d83034",
                "username": "student0",
                "hover": "username:student0\n\ndiff:\n--- \n+++ \n@@ -12,8 +12,9 @@\n list of numbers-without-odd-integer+with+decimals+or+even numbers. \"\"\"\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    takes in a list of numbers. returns the list of numbers without odd integer numbers.\n    \"\"\"\n        return [x for x in lst if x % 2 == 0]\n\nprint(remove_odd([1,2,3,4,5,6,7,8,9,10]))\n\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    takes in a list of numbers. returns the list of numbers with decimals or even numbers.\n    \"\"\"\n        return [num for num in lst if num % 2 == 0]\n",
                "id": 0,
                "key": 0
            },
            {
                "diff": 44,
                "color": "#d83034",
                "arrow_color": "#d83034",
                "username": "student0",
                "hover": "username:student0\n\ndiff:\n--- \n+++ \n@@ -13,7 +13,7 @@\n of numbers with-decimals+doubles or even numbers.\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    takes in a list of numbers. returns the list of numbers with decimals or even numbers.\n    \"\"\"\n        return [num for num in lst if num % 2 == 0]\n\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    takes in a list of numbers. returns the list of numbers with doubles or even numbers.\n    \"\"\"\n        return [num for num in lst if num % 2 == 0]\n",
                "id": 0,
                "key": 1
            },
            {
                "diff": 16,
                "color": "#f9e858",
                "arrow_color": "#f9e858",
                "username": "student10",
                "hover": "username:student10\n\ndiff:\n--- \n+++ \n@@ -7,17 +7,11 @@\n odd integers from-list.-Function-would-keep-all-values-if-they-have-decimal-points.+list,+but+keeps+odd+floats. Returns list. \"\"\"\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    Function removes all odd integers from list. Function would keep all values if they have decimal points. Returns list.\n    \"\"\"\n        return [x for x in lst if x % 2 == 0]\n\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    Function removes all odd integers from list, but keeps odd floats. Returns list.\n    \"\"\"\n        return [i for i in lst if isinstance(i, int) and i % 2 == 0]\n\n",
                "id": 0,
                "key": 2
            },
            {
                "diff": 14,
                "color": "#f9e858",
                "arrow_color": "#f9e858",
                "username": "student10",
                "hover": "username:student10\n\ndiff:\n--- \n+++ \n@@ -7,11 +7,8 @@\n odd integers from-list,-but-keeps-odd-floats.+list+. Returns list. \"\"\"\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    Function removes all odd integers from list, but keeps odd floats. Returns list.\n    \"\"\"\n        return [i for i in lst if isinstance(i, int) and i % 2 == 0]\n\n\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    Function removes all odd integers from list . Returns list.\n    \"\"\"\n        return [x for x in lst if x % 2 == 0]\n",
                "id": 0,
                "key": 3
            },
            {
                "diff": 1,
                "color": "#008dff",
                "arrow_color": "#008dff",
                "username": "student17",
                "hover": "username:student17\n\ndiff:\n--- \n+++ \n@@ -28,10 +28,8 @@\n list. if given-4.3,-4,+3, 5,-2, 7 output a\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    if given 4.3, 4, 5, 2, 7 output 4.3, 4, 2 in a list.\nif given 1.1, 2.2, 3.3 output 1.1, 2.2, 3.3 a list.\nif given 4.3, 4, 5, 2, 7 output a empty list.\n    \"\"\"\n        return [i for i in lst if i % 2 == 0]\n\n\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    if given 4.3, 4, 5, 2, 7 output 4.3, 4, 2 in a list.\nif given 1.1, 2.2, 3.3 output 1.1, 2.2, 3.3 a list.\nif given 3, 5, 7 output a empty list.\n    \"\"\"\n        new_list = []\n    for i in lst:\n        if i % 2 == 0:\n            new_list.append(i)\n    return new_list\n\nprint(remove_odd([4.3, 4, 5, 2, 7]))\nprint(remove_odd([1.1, 2.2, 3.3]))\nprint(remove_odd([3, 5, 7]))\n\n",
                "id": 0,
                "key": 4
            },
            {
                "diff": 25,
                "color": "#008dff",
                "arrow_color": "#008dff",
                "username": "student17",
                "hover": "username:student17\n\ndiff:\n--- \n+++ \n@@ -3,11 +3,11 @@\n \"\"\" if given-4.3,+[4.3, 4, 5, 2,-7+7] output 4.3, 4,@@ -15,24 +15,4 @@\n in a list.-if-given-1.1,-2.2,-3.3-output-1.1,-2.2,-3.3-a-list.-if-given-3,-5,-7-output-a-empty-list. \"\"\"\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    if given 4.3, 4, 5, 2, 7 output 4.3, 4, 2 in a list.\nif given 1.1, 2.2, 3.3 output 1.1, 2.2, 3.3 a list.\nif given 3, 5, 7 output a empty list.\n    \"\"\"\n        new_list = []\n    for i in lst:\n        if i % 2 == 0:\n            new_list.append(i)\n    return new_list\n\nprint(remove_odd([4.3, 4, 5, 2, 7]))\nprint(remove_odd([1.1, 2.2, 3.3]))\nprint(remove_odd([3, 5, 7]))\n\n\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    if given [4.3, 4, 5, 2, 7] output 4.3, 4, 2 in a list.\n\n    \"\"\"\n        return [i for i in lst if i % 2 == 0]\n\n",
                "id": 0,
                "key": 5
            },
            {
                "diff": 39,
                "color": "#008dff",
                "arrow_color": "#008dff",
                "username": "student17",
                "hover": "username:student17\n\ndiff:\n--- \n+++ \n@@ -3,16 +3,13 @@\n \"\"\" if given-[4.3,+4.3, 4, 5, 2,-7]+7 output-4.3,+[4.3, 4,-2-in-a-list.+2] \"\"\"\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    if given [4.3, 4, 5, 2, 7] output 4.3, 4, 2 in a list.\n\n    \"\"\"\n        return [i for i in lst if i % 2 == 0]\n\n\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    if given 4.3, 4, 5, 2, 7 output [4.3, 4, 2]\n\n    \"\"\"\n        return [x for x in lst if x % 2 == 0]\n",
                "id": 0,
                "key": 6
            },
            {
                "diff": 33,
                "color": "#008dff",
                "arrow_color": "#008dff",
                "username": "student17",
                "hover": "username:student17\n\ndiff:\n--- \n+++ \n@@ -9,7 +9,10 @@\n 2, 7 output-[4.3,+4.3, 4,-2]+2+in+a+list. \"\"\"\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    if given 4.3, 4, 5, 2, 7 output [4.3, 4, 2]\n\n    \"\"\"\n        return [x for x in lst if x % 2 == 0]\n\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    if given 4.3, 4, 5, 2, 7 output 4.3, 4, 2 in a list.\n\n    \"\"\"\n        return [x for x in lst if x % 2 == 0]\n\n",
                "id": 0,
                "key": 7
            },
            {
                "diff": 17,
                "color": "#008dff",
                "arrow_color": "#008dff",
                "username": "student17",
                "hover": "username:student17\n\ndiff:\n--- \n+++ \n@@ -3,16 +3,29 @@\n \"\"\" if given-4.3,+[4.3, 4, 5, 2,-7+7] output-4.3,+[4.3, 4,-2-in-a-list.+2]+if+given+[1.1,+2.2,+3.3]+output+[1.1,+2.2,+3.3]+if+given+[3,+5,+7]+output+[] \"\"\"\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    if given 4.3, 4, 5, 2, 7 output 4.3, 4, 2 in a list.\n\n    \"\"\"\n        return [x for x in lst if x % 2 == 0]\n\n\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    if given [4.3, 4, 5, 2, 7] output [4.3, 4, 2]\nif given [1.1, 2.2, 3.3] output [1.1, 2.2, 3.3]\nif given [3, 5, 7] output []\n\n    \"\"\"\n        return [x for x in lst if x % 2 == 0]\n\n",
                "id": 0,
                "key": 8
            },
            {
                "diff": 43,
                "color": "#008dff",
                "arrow_color": "#008dff",
                "username": "student17",
                "hover": "username:student17\n\ndiff:\n--- \n+++ \n@@ -11,7 +11,7 @@\n output [4.3, 4,-2]+2], if given [1.1,@@ -20,12 +20,12 @@\n output [1.1, 2.2,-3.3]+3.3], if given [3, 5, 7] output-[]+[]. \"\"\"\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    if given [4.3, 4, 5, 2, 7] output [4.3, 4, 2]\nif given [1.1, 2.2, 3.3] output [1.1, 2.2, 3.3]\nif given [3, 5, 7] output []\n\n    \"\"\"\n        return [x for x in lst if x % 2 == 0]\n\n\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    if given [4.3, 4, 5, 2, 7] output [4.3, 4, 2],\nif given [1.1, 2.2, 3.3] output [1.1, 2.2, 3.3],\nif given [3, 5, 7] output [].\n\n    \"\"\"\n        return [x for x in lst if x % 2 == 0]\n\n",
                "id": 0,
                "key": 9
            },
            {
                "diff": 26,
                "color": "#008dff",
                "arrow_color": "#008dff",
                "username": "student17",
                "hover": "username:student17\n\ndiff:\n--- \n+++ \n@@ -1,31 +1,9 @@\n def remove_odd(lst): \"\"\"-if-given-[4.3,-4,-5,-2,-7]+input:+2 output-[4.3,-4,-2],-if-given-[1.1,-2.2,-3.3]-output-[1.1,-2.2,-3.3],-if-given-[3,-5,-7]-output-[].+=+4 \"\"\"\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    if given [4.3, 4, 5, 2, 7] output [4.3, 4, 2],\nif given [1.1, 2.2, 3.3] output [1.1, 2.2, 3.3],\nif given [3, 5, 7] output [].\n\n    \"\"\"\n        return [x for x in lst if x % 2 == 0]\n\n\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    input: 2 output = 4\n\n    \"\"\"\n        return [i for i in lst if i % 2 == 0]\n\n",
                "id": 0,
                "key": 10
            },
            {
                "diff": 37,
                "color": "#ffcd8e",
                "arrow_color": "#ffcd8e",
                "username": "student25",
                "hover": "username:student25\n\ndiff:\n--- \n+++ \n@@ -9,5 +9,21 @@\n from the given-list.+list+and+returns+a+new+list+including+all+of+the+original+number+except+for+the+odd+integers. \"\"\"\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    This function removes odd integers from the given list.\n    \"\"\"\n        return [x for x in lst if x % 2 == 0]\n\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    This function removes odd integers from the given list and returns a new list including all of the original number except for the odd integers.\n    \"\"\"\n        new_list = []\n    for i in lst:\n        if i % 2 == 0:\n            new_list.append(i)\n    return new_list\n\nprint(remove_odd([1,2,3,4,5,6,7,8,9,10]))\n",
                "id": 0,
                "key": 11
            },
            {
                "diff": 42,
                "color": "#ffcd8e",
                "arrow_color": "#ffcd8e",
                "username": "student25",
                "hover": "username:student25\n\ndiff:\n--- \n+++ \n@@ -20,10 +20,17 @@\n of the original-number+numbers except for the odd integers.+Floats+are+not+removed+from+the+list. \"\"\"\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    This function removes odd integers from the given list and returns a new list including all of the original number except for the odd integers.\n    \"\"\"\n        new_list = []\n    for i in lst:\n        if i % 2 == 0:\n            new_list.append(i)\n    return new_list\n\nprint(remove_odd([1,2,3,4,5,6,7,8,9,10]))\n\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    This function removes odd integers from the given list and returns a new list including all of the original numbers except for the odd integers. Floats are not removed from the list.\n    \"\"\"\n        new_lst = []\n    for i in lst:\n        if i % 2 == 0:\n            new_lst.append(i)\n    return new_lst\n",
                "id": 0,
                "key": 12
            },
            {
                "diff": 35,
                "color": "#Ff73b6",
                "arrow_color": "#Ff73b6",
                "username": "student3",
                "hover": "username:student3\n\ndiff:\n--- \n+++ \n@@ -6,7 +6,5 @@\n element which are-integer-and odd \"\"\"\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    remove the element which are integer and odd\n    \"\"\"\n        return [x for x in lst if isinstance(x, int) and x % 2 == 0]\n\n\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    remove the element which are odd\n    \"\"\"\n        return [x for x in lst if x % 2 == 0]\n\n",
                "id": 0,
                "key": 13
            },
            {
                "diff": 2,
                "color": "#Ff73b6",
                "arrow_color": "#Ff73b6",
                "username": "student3",
                "hover": "username:student3\n\ndiff:\n--- \n+++ \n@@ -2,7 +2,7 @@\n remove_odd(lst): \"\"\" remove-the+int element which are\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    remove the element which are odd\n    \"\"\"\n        return [x for x in lst if x % 2 == 0]\n\n\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    remove int element which are odd\n    \"\"\"\n        return [x for x in lst if x % 2 == 0]\n\n",
                "id": 0,
                "key": 14
            },
            {
                "diff": 11,
                "color": "#ffd700",
                "arrow_color": "#ffd700",
                "username": "student48",
                "hover": "username:student48\n\ndiff:\n--- \n+++ \n@@ -3,6 +3,7 @@\n \"\"\" remove odd+whole numbers from the\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    remove odd numbers from the list\n    \"\"\"\n        return [x for x in lst if x % 2 == 0]\n\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    remove odd whole numbers from the list\n    \"\"\"\n        return [x for x in lst if x % 2 == 0]\n",
                "id": 0,
                "key": 15
            },
            {
                "diff": 15,
                "color": "#d83034",
                "arrow_color": "#d83034",
                "username": "student0",
                "hover": "username:student0\n\ndiff:\n--- \n+++ \n@@ -13,8 +13,7 @@\n of numbers with-doubles-or+only even numbers. \"\"\"\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    takes in a list of numbers. returns the list of numbers with doubles or even numbers.\n    \"\"\"\n        return [num for num in lst if num % 2 == 0]\n\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    takes in a list of numbers. returns the list of numbers with only even numbers.\n    \"\"\"\n        for i in lst:\n        if i % 2 != 0:\n            lst.remove(i)\n    return lst\n\nprint(remove_odd([1,2,3,4,5,6,7,8,9,10]))\n",
                "id": 1,
                "key": 0
            },
            {
                "diff": 12,
                "color": "#008dff",
                "arrow_color": "#008dff",
                "username": "student17",
                "hover": "username:student17\n\ndiff:\n--- \n+++ \n@@ -1,9 +1,5 @@\n def remove_odd(lst): \"\"\"-input:-2-output-=-4+abc \"\"\"\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    input: 2 output = 4\n\n    \"\"\"\n        return [i for i in lst if i % 2 == 0]\n\n\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    abc\n\n    \"\"\"\n        for i in lst:\n        if i % 2 != 0:\n            lst.remove(i)\n    return lst\n\n",
                "id": 1,
                "key": 1
            },
            {
                "diff": 8,
                "color": "#ffcd8e",
                "arrow_color": "#ffcd8e",
                "username": "student25",
                "hover": "username:student25\n\ndiff:\n--- \n+++ \n@@ -13,7 +13,6 @@\n and returns a-new list including all\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    This function removes odd integers from the given list and returns a new list including all of the original numbers except for the odd integers. Floats are not removed from the list.\n    \"\"\"\n        new_lst = []\n    for i in lst:\n        if i % 2 == 0:\n            new_lst.append(i)\n    return new_lst\n\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    This function removes odd integers from the given list and returns a list including all of the original numbers except for the odd integers. Floats are not removed from the list.\n    \"\"\"\n        for i in lst:\n        if i % 2 != 0:\n            lst.remove(i)\n    return lst\n",
                "id": 1,
                "key": 2
            },
            {
                "diff": 28,
                "color": "#Ff73b6",
                "arrow_color": "#Ff73b6",
                "username": "student3",
                "hover": "username:student3\n\ndiff:\n--- \n+++ \n@@ -2,7 +2,15 @@\n remove_odd(lst): \"\"\" remove-odd-interger+element+which+are+even+or+have+1 number+behind+the+comma \"\"\"\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    remove odd interger number\n\n    \"\"\"\n        return [x for x in lst if x % 2 == 0]\n\n\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    remove element which are even or have 1 number behind the comma\n\n    \"\"\"\n        for i in lst:\n        if i % 2 != 0:\n            lst.remove(i)\n    return lst\n\n",
                "id": 1,
                "key": 3
            },
            {
                "diff": 38,
                "color": "#d83034",
                "arrow_color": "#d83034",
                "username": "student0",
                "hover": "username:student0\n\ndiff:\n--- \n+++ \n@@ -7,12 +7,24 @@\n list of numbers.+create+a+ODD+list+of+odd+numbers+1+through+10. returns the list of numbers-without-odd-numbers.+with+numbers+in+ODD+removed. \"\"\"\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    takes in a list of numbers. returns the list of numbers without odd numbers.\n    \"\"\"\n        return [x for x in lst if x % 2 == 0]\n\n\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    takes in a list of numbers. create a ODD list of odd numbers 1 through 10. returns the list of numbers with numbers in ODD removed.\n    \"\"\"\n        odd = [1, 3, 5, 7, 9]\n    for i in odd:\n        if i in lst:\n            lst.remove(i)\n    return lst\n\nprint(remove_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\n",
                "id": 2,
                "key": 0
            },
            {
                "diff": 23,
                "color": "#c701ff",
                "arrow_color": "#c701ff",
                "username": "student21",
                "hover": "username:student21\n\ndiff:\n--- \n+++ \n@@ -1,12 +1,27 @@\n def remove_odd(lst): \"\"\"+if+the+value+in+the+list+is+an+integer,+evaluate+if+it+is+odd+and remove-only+from the-odd-integers-from-given list+if+it+is+odd. \"\"\"\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    remove only the odd integers from given list \n    \"\"\"\n        return [x for x in lst if x % 2 == 0]\n\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    if the value in the list is an integer, evaluate if it is odd and remove from the list if it is odd.\n    \"\"\"\n        for i in lst:\n        if isinstance(i, int):\n            if i % 2 != 0:\n                lst.remove(i)\n    return lst\n",
                "id": 3,
                "key": 0
            },
            {
                "diff": 3,
                "color": "#c701ff",
                "arrow_color": "#c701ff",
                "username": "student21",
                "hover": "username:student21\n\ndiff:\n--- \n+++ \n@@ -1,10 +1,27 @@\n def remove_odd(lst): \"\"\"+if+the+value+in+the+list+is+an+integer,+evaluate+if+it+is+odd+and remove-odd-integers from-given+the list+if+it+is+odd. \"\"\"\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    remove odd integers from given list \n    \"\"\"\n        return [x for x in lst if x % 2 == 0]\n\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    if the value in the list is an integer, evaluate if it is odd and remove from the list if it is odd.\n    \"\"\"\n        for i in lst:\n        if type(i) == int:\n            if i % 2 == 1:\n                lst.remove(i)\n    return lst\n\nprint(remove_odd([1,2,3,4,5,6,7,8,9,10]))\nprint(remove_odd([1,2,3,4,5,6,7,8,9,10, \"hello\", \"",
                "id": 3,
                "key": 1
            },
            {
                "diff": 10,
                "color": "#003a7d",
                "arrow_color": "#003a7d",
                "username": "student26",
                "hover": "username:student26\n\ndiff:\n--- \n+++ \n@@ -7,4 +7,10 @@\n in a list+ignoring+decimals+and+print+the+list \"\"\"\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    Remove odd numbers in a list\n    \"\"\"\n        return [x for x in lst if x % 2 == 0]\n\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    Remove odd numbers in a list ignoring decimals and print the list\n    \"\"\"\n        for i in lst:\n        if i % 2 != 0:\n            lst.remove(i)\n    print(lst)\n\nremove_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n",
                "id": 4,
                "key": 0
            }
        ],
        [
            {
                "diff": 5,
                "color": "#d83034",
                "arrow_color": "#d83034",
                "username": "student0",
                "hover": "username:student0\n\ndiff:\n--- \n+++ \n@@ -12,8 +12,7 @@\n list of numbers-with-only-even+without+odd numbers. \"\"\"\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    takes in a list of numbers. returns the list of numbers with only even numbers.\n    \"\"\"\n        for i in lst:\n        if i % 2 != 0:\n            lst.remove(i)\n    return lst\n\nprint(remove_odd([1,2,3,4,5,6,7,8,9,10]))\n\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    takes in a list of numbers. returns the list of numbers without odd numbers.\n    \"\"\"\n        return [x for x in lst if x % 2 == 0]\n\n",
                "id": 0,
                "key": 0
            },
            {
                "diff": 21,
                "color": "#008dff",
                "arrow_color": "#008dff",
                "username": "student17",
                "hover": "username:student17\n\ndiff:\n--- \n+++ \n@@ -1,5 +1,13 @@\n def remove_odd(lst): \"\"\"-abc+remove+the+odd+numbers+in+the+list+of+numbers \"\"\"\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    abc\n\n    \"\"\"\n        for i in lst:\n        if i % 2 != 0:\n            lst.remove(i)\n    return lst\n\n\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    remove the odd numbers in the list of numbers\n    \"\"\"\n        return [x for x in lst if x % 2 == 0]\n",
                "id": 0,
                "key": 1
            },
            {
                "diff": 22,
                "color": "#Ff73b6",
                "arrow_color": "#Ff73b6",
                "username": "student3",
                "hover": "username:student3\n\ndiff:\n--- \n+++ \n@@ -2,15 +2,11 @@\n remove_odd(lst): \"\"\" remove+the element which are-even-or-have-1-number-behind-the-comma+integer+and+odd \"\"\"\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    remove element which are even or have 1 number behind the comma\n\n    \"\"\"\n        for i in lst:\n        if i % 2 != 0:\n            lst.remove(i)\n    return lst\n\n\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    remove the element which are integer and odd\n    \"\"\"\n        return [x for x in lst if isinstance(x, int) and x % 2 == 0]\n\n",
                "id": 0,
                "key": 2
            },
            {
                "diff": 36,
                "color": "#ffcd8e",
                "arrow_color": "#ffcd8e",
                "username": "student25",
                "hover": "username:student25\n\ndiff:\n--- \n+++ \n@@ -8,8 +8,8 @@\n integers from the-given-list+input+\"lst\" and returns a@@ -25,11 +25,14 @@\n the odd integers.-Floats-are-not-removed-from+All+floats+in+the+given+list+remain+in the list. \"\"\"\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    This function removes odd integers from the given list and returns a list including all of the original numbers except for the odd integers. Floats are not removed from the list.\n    \"\"\"\n        for i in lst:\n        if i % 2 != 0:\n            lst.remove(i)\n    return lst\n\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    This function removes odd integers from the input \"lst\" and returns a list including all of the original numbers except for the odd integers. All floats in the given list remain in the list.\n    \"\"\"\n        for i in lst:\n        if i % 2 != 0:\n            lst.remove(i)\n    return lst\n\nprint(remove_odd([1,2,3,4,5,6,7,8,9,10]))\n",
                "id": 1,
                "key": 0
            },
            {
                "diff": 4,
                "color": "#7fff00",
                "arrow_color": "#7fff00",
                "username": "student4",
                "hover": "username:student4\n\ndiff:\n--- \n+++ \n@@ -3,8 +3,7 @@\n \"\"\" deletes odd-whole-numbers+integers from the list,\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    deletes odd whole numbers from the list, returns the appended list\n    \"\"\"\n        for i in lst:\n        if i % 2 != 0:\n            lst.remove(i)\n    return lst\n\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    deletes odd integers from the list, returns the appended list\n    \"\"\"\n        for i in lst:\n        if i % 2 != 0:\n            lst.remove(i)\n    return lst\n",
                "id": 1,
                "key": 1
            },
            {
                "diff": 13,
                "color": "#7fff00",
                "arrow_color": "#7fff00",
                "username": "student4",
                "hover": "username:student4\n\ndiff:\n--- \n+++ \n@@ -2,8 +2,10 @@\n remove_odd(lst): \"\"\" deletes+integers+that+are odd-integers from the list,\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    deletes odd integers from the list, returns the appended list\n    \"\"\"\n        for i in lst:\n        if i % 2 != 0:\n            lst.remove(i)\n    return lst\n\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    deletes integers that are odd from the list, returns the appended list\n    \"\"\"\n        for i in lst:\n        if i % 2 != 0:\n            lst.remove(i)\n    return lst\n",
                "id": 1,
                "key": 2
            },
            {
                "diff": 24,
                "color": "#7fff00",
                "arrow_color": "#7fff00",
                "username": "student4",
                "hover": "username:student4\n\ndiff:\n--- \n+++ \n@@ -2,7 +2,7 @@\n remove_odd(lst): \"\"\" deletes-integers+ints that are odd\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    deletes integers that are odd from the list, returns the appended list\n    \"\"\"\n        for i in lst:\n        if i % 2 != 0:\n            lst.remove(i)\n    return lst\n\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    deletes ints that are odd from the list, returns the appended list\n    \"\"\"\n        for i in lst:\n        if i % 2 != 0:\n            lst.remove(i)\n    return lst\n",
                "id": 1,
                "key": 3
            },
            {
                "diff": 18,
                "color": "#7fff00",
                "arrow_color": "#7fff00",
                "username": "student4",
                "hover": "username:student4\n\ndiff:\n--- \n+++ \n@@ -1,6 +1,12 @@\n def remove_odd(lst): \"\"\"+for+ints+in+the+given+list, deletes ints that\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    deletes ints that are odd from the list, returns the appended list\n    \"\"\"\n        for i in lst:\n        if i % 2 != 0:\n            lst.remove(i)\n    return lst\n\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    for ints in the given list, deletes ints that are odd from the list, returns the appended list\n    \"\"\"\n        for ints in lst:\n        if ints % 2 != 0:\n            lst.remove(ints)\n    return lst\n",
                "id": 1,
                "key": 4
            },
            {
                "diff": 0,
                "color": "#ff4500",
                "arrow_color": "#ff4500",
                "username": "student51",
                "hover": "username:student51\n\ndiff:\n\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    For each object in the list, remove it if it is an odd integer. Return the list.\n    \"\"\"\n        for i in lst:\n        if i % 2 != 0:\n            lst.remove(i)\n    return lst\n\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    For each object in the list, remove it if it is an odd integer. Return the list.\n    \"\"\"\n        for i in lst:\n        if i % 2 != 0:\n            lst.remove(i)\n    return lst\n\n",
                "id": 1,
                "key": 5
            },
            {
                "diff": 9,
                "color": "#ff4500",
                "arrow_color": "#ff4500",
                "username": "student51",
                "hover": "username:student51\n\ndiff:\n--- \n+++ \n@@ -1,14 +1,12 @@\n def remove_odd(lst): \"\"\"-For+remove each object in the-list,-remove-it+list if it is\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    For each object in the list, remove it if it is an odd integer. Return the list.\n    \"\"\"\n        for i in lst:\n        if i % 2 != 0:\n            lst.remove(i)\n    return lst\n\n\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    remove each object in the list if it is an odd integer. Return the list.\n    \"\"\"\n        for i in lst:\n        if i % 2 != 0:\n            lst.remove(i)\n    return lst\n\n",
                "id": 1,
                "key": 6
            },
            {
                "diff": 20,
                "color": "#7fff00",
                "arrow_color": "#7fff00",
                "username": "student4",
                "hover": "username:student4\n\ndiff:\n--- \n+++ \n@@ -2,7 +2,11 @@\n remove_odd(lst): \"\"\" for-ints+values+with+the+int+type in the given\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    for ints in the given list, deletes ints that are odd from the list, returns the appended list\n    \"\"\"\n        for ints in lst:\n        if ints % 2 != 0:\n            lst.remove(ints)\n    return lst\n\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    for values with the int type in the given list, deletes ints that are odd from the list, returns the appended list\n    \"\"\"\n        for i in lst:\n        if type(i) == int:\n            if i % 2 != 0:\n                lst.remove(i)\n    return lst\n",
                "id": 3,
                "key": 0
            },
            {
                "diff": 29,
                "color": "#ff4500",
                "arrow_color": "#ff4500",
                "username": "student51",
                "hover": "username:student51\n\ndiff:\n--- \n+++ \n@@ -1,18 +1,31 @@\n def remove_odd(lst): \"\"\"-remove+For each object in the-list+list, if it is-an+and+integer+then+check+if+it+is odd-integer.+and+if+it+is+odd+then+remove+it. Return the list.\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    remove each object in the list if it is an odd integer. Return the list.\n    \"\"\"\n        for i in lst:\n        if i % 2 != 0:\n            lst.remove(i)\n    return lst\n\n\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    For each object in the list, if it is and integer then check if it is odd and if it is odd then remove it. Return the list.\n    \"\"\"\n        for i in lst:\n        if type(i) == int:\n            if i % 2 != 0:\n                lst.remove(i)\n    return lst\n",
                "id": 3,
                "key": 1
            }
        ],
        [
            {
                "diff": 7,
                "color": "#4ecb8d",
                "arrow_color": "#4ecb8d",
                "username": "student18",
                "hover": "username:student18\n\ndiff:\n--- \n+++ \n@@ -1,19 +1,26 @@\n def remove_odd(lst): \"\"\"-Remove-numbers-that-are+Create+a+list.+Only+add either-not-an+a even number or a-float+decimal+to+the+list from the lst.+Then,+return+the+list. \"\"\"\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    Remove numbers that are either not an even number or a float from the lst. \n    \"\"\"\n        return [i for i in lst if isinstance(i, float) or i % 2 == 0]\n\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    Create a list. Only add either a even number or a decimal to the list from the lst. Then, return the list.\n    \"\"\"\n        new_list = []\n    for i in lst:\n        if i % 2 == 0 or type(i) == float:\n            new_list.append(i)\n    return new_list\n\nprint(remove_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(remove_odd([1, 2, 3, 4, 5, 6, 7, 8, 9,",
                "id": 2,
                "key": 0
            },
            {
                "diff": 19,
                "color": "#ff7f50",
                "arrow_color": "#ff7f50",
                "username": "student30",
                "hover": "username:student30\n\ndiff:\n--- \n+++ \n@@ -2,21 +2,8 @@\n remove_odd(lst): \"\"\" Removes-numbers+odd+integers from-lst-if-the-number-%-1-=-0-and-the-number-%-2-=-1.+lst. \"\"\"\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    Removes numbers from lst if the number % 1 = 0 and the number % 2 = 1.\n    \"\"\"\n        for i in range(len(lst) - 1, -1, -1):\n        if lst[i] % 2 == 1:\n            lst.pop(i)\n    return lst\n\n\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    Removes odd integers from lst.\n    \"\"\"\n        return [x for x in lst if x % 2 == 0]\n\n",
                "id": 0,
                "key": 0
            }
        ],
        [
            {
                "diff": 32,
                "color": "#4ecb8d",
                "arrow_color": "#4ecb8d",
                "username": "student18",
                "hover": "username:student18\n\ndiff:\n--- \n+++ \n@@ -5,6 +5,7 @@\n numbers that are+either not an even\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    Remove numbers that are not an even number or a float from the lst. \n    \"\"\"\n        for i in lst:\n        if i % 2 != 0 and type(i) != float:\n            lst.remove(i)\n    return lst\n\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    Remove numbers that are either not an even number or a float from the lst. \n    \"\"\"\n        return [i for i in lst if isinstance(i, float) or i % 2 == 0]\n",
                "id": 2,
                "key": 0
            },
            {
                "diff": 40,
                "color": "#c701ff",
                "arrow_color": "#c701ff",
                "username": "student21",
                "hover": "username:student21\n\ndiff:\n--- \n+++ \n@@ -1,27 +1,10 @@\n def remove_odd(lst): \"\"\"-if-the-value-in-the+remove+odd+integers+from+given list-is-an-integer,-evaluate-if-it-is-odd-and-remove-from-the-list-if-it-is-odd. \"\"\"\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    if the value in the list is an integer, evaluate if it is odd and remove from the list if it is odd.\n    \"\"\"\n        for i in lst:\n        if isinstance(i, int):\n            if i % 2 != 0:\n                lst.remove(i)\n    return lst\n\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    remove odd integers from given list \n    \"\"\"\n        return [x for x in lst if x % 2 == 0]\n",
                "id": 0,
                "key": 0
            },
            {
                "diff": 0,
                "color": "#c701ff",
                "arrow_color": "#c701ff",
                "username": "student21",
                "hover": "username:student21\n\ndiff:\n\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    if the value in the list is an integer, evaluate if it is odd and remove from the list if it is odd.\n    \"\"\"\n        for i in lst:\n        if type(i) == int:\n            if i % 2 == 1:\n                lst.remove(i)\n    return lst\n\nprint(remove_odd([1,2,3,4,5,6,7,8,9,10]))\nprint(remove_odd([1,2,3,4,5,6,7,8,9,10, \"hello\", \"\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    if the value in the list is an integer, evaluate if it is odd and remove from the list if it is odd.\n    \"\"\"\n        for i in lst:\n        if type(i) == int:\n            if i % 2 != 0:\n                lst.remove(i)\n    return lst\n\n",
                "id": 3,
                "key": 0
            },
            {
                "diff": 0,
                "color": "#c701ff",
                "arrow_color": "#c701ff",
                "username": "student21",
                "hover": "username:student21\n\ndiff:\n\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    if the value in the list is an integer, evaluate if it is odd and remove from the list if it is odd.\n    \"\"\"\n        for i in lst:\n        if type(i) == int:\n            if i % 2 != 0:\n                lst.remove(i)\n    return lst\n\n\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    if the value in the list is an integer, evaluate if it is odd and remove from the list if it is odd.\n    \"\"\"\n        for i in lst:\n        if type(i) == int:\n            if i % 2 != 0:\n                lst.remove(i)\n    return lst\n\nprint(remove_odd([1,2,3,4,5,6,7,8,9,10]))\n",
                "id": 3,
                "key": 1
            }
        ],
        [
            {
                "diff": 6,
                "color": "#003a7d",
                "arrow_color": "#003a7d",
                "username": "student26",
                "hover": "username:student26\n\ndiff:\n--- \n+++ \n@@ -7,9 +7,4 @@\n in a list-and-print-the-new-list \"\"\"\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    Remove odd numbers in a list and print the new list\n    \"\"\"\n        for i in lst:\n        if i % 2 != 0:\n            lst.remove(i)\n    print(lst)\n\nremove_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    Remove odd numbers in a list\n    \"\"\"\n        return [x for x in lst if x % 2 == 0]\n",
                "id": 0,
                "key": 0
            },
            {
                "diff": 30,
                "color": "#7fff00",
                "arrow_color": "#7fff00",
                "username": "student4",
                "hover": "username:student4\n\ndiff:\n--- \n+++ \n@@ -7,5 +7,9 @@\n numbers from the+list,+returns+the+appended list \"\"\"\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    deletes odd whole numbers from the list\n    \"\"\"\n        for i in range(len(lst) - 1, -1, -1):\n        if lst[i] % 2 != 0:\n            del lst[i]\n\n\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    deletes odd whole numbers from the list, returns the appended list\n    \"\"\"\n        for i in lst:\n        if i % 2 != 0:\n            lst.remove(i)\n    return lst\n",
                "id": 1,
                "key": 0
            }
        ],
        [
            {
                "diff": 34,
                "color": "#8a2be2",
                "arrow_color": "#8a2be2",
                "username": "student41",
                "hover": "username:student41\n\ndiff:\n--- \n+++ \n@@ -3,7 +3,6 @@\n \"\"\" For every-whole number in the@@ -12,6 +11,11 @@\n if that item+is+not+a+float+and is not divisible\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    For every whole number in the inputted list, if that item is not divisible by two it is removed from the list. It returns the list with the remaining values.\n    \"\"\"\n        for i in range(len(lst)):\n        if lst[i] % 2 != 0:\n            lst.remove(lst[i])\n    return lst\n\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    For every number in the inputted list, if that item is not a float and is not divisible by two it is removed from the list. It returns the list with the remaining values.\n    \"\"\"\n        for i in range(len(lst)):\n        if type(lst[i]) != float and lst[i] % 2 != 0:\n            lst.pop(i)\n    return lst\n",
                "id": 6,
                "key": 0
            }
        ],
        [
            {
                "diff": 41,
                "color": "#8a2be2",
                "arrow_color": "#8a2be2",
                "username": "student41",
                "hover": "username:student41\n\ndiff:\n--- \n+++ \n@@ -3,7 +3,7 @@\n \"\"\" For every-number+item in the inputted\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    For every number in the inputted list, if that item is not a float and is not divisible by two it is removed from the list. It returns the list with the remaining values.\n    \"\"\"\n        for i in range(len(lst)):\n        if type(lst[i]) != float and lst[i] % 2 != 0:\n            lst.pop(i)\n    return lst\n\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    For every item in the inputted list, if that item is not a float and is not divisible by two it is removed from the list. It returns the list with the remaining values.\n    \"\"\"\n        for i in range(len(lst)):\n        if type(lst[i]) != float and lst[i] % 2 != 0:\n            lst.pop(i)\n    return lst\n",
                "id": 6,
                "key": 0
            },
            {
                "diff": 27,
                "color": "#8a2be2",
                "arrow_color": "#8a2be2",
                "username": "student41",
                "hover": "username:student41\n\ndiff:\n--- \n+++ \n@@ -12,15 +12,24 @@\n that item is-not a float-and+it is+kept+in+the+list.+Otherwise,+if+that+item+is+then not divisible by-two+two, it is removed\n\nFROM completion:\ndef remove_odd(lst):\n    \"\"\"\n    For every item in the inputted list, if that item is not a float and is not divisible by two it is removed from the list. It returns the list with the remaining values.\n    \"\"\"\n        for i in range(len(lst)):\n        if type(lst[i]) != float and lst[i] % 2 != 0:\n            lst.pop(i)\n    return lst\n\n\nTO completion:\ndef remove_odd(lst):\n    \"\"\"\n    For every item in the inputted list, if that item is a float it is kept in the list. Otherwise, if that item is then not divisible by two, it is removed from the list. It returns the list with the remaining values.\n    \"\"\"\n        for i in range(len(lst)):\n        if type(lst[i]) == float:\n            continue\n        elif lst[i] % 2 != 0:\n            lst.pop(i)\n    return lst\n",
                "id": 7,
                "key": 0
            }
        ],
        []
    ]
}