"edges":
  !!int "0": |-
    ---
    +++
    @@ -27,5 +27,12 @@
     corresponds to that-parameter+parameter,+with+a+line+break+between+each+entry """
  !!int "1": ""
  !!int "2": |-
    ---
    +++
    @@ -2,12 +2,18 @@
     sortedBooks(books, writer): """+iterate+through+each+element+in+list, remove-any element from list-that+if+it does not have
  !!int "3": |-
    ---
    +++
    @@ -2,6 +2,12 @@
     sortedBooks(books, writer): """+Returns+the+list+with+the+a Sort the elements
  !!int "4": |-
    ---
    +++
    @@ -21,4 +21,8 @@
     the input string+in+a+dictionary+list """
  !!int "5": |-
    ---
    +++
    @@ -26,4 +26,18 @@
     the author key.+Order+each+dictionary+in+the+list+by+ascending+the+values+in+the+year+key. """
  !!int "6": |-
    ---
    +++
    @@ -22,7 +22,16 @@
     input string in-a-dictionary-list+the+order+from+lowest+to+highest+value+of+their+'year'+key+value """
  !!int "7": |-
    ---
    +++
    @@ -14,12 +14,10 @@
     list of dictionaries-where+thats+authors+match the input writer-matches-the-key-author """
  !!int "8": |-
    ---
    +++
    @@ -14,9 +14,17 @@
     list of dictionaries-thats-authors-match+where+the+associated+data+to+the+key+'author'+is+equal+to the input writer
  !!int "9": |-
    ---
    +++
    @@ -17,6 +17,9 @@
     name. Then return+a+list+with all input entries@@ -30,8 +33,8 @@
     parameter, with each-sub-dictionary-starting+input+entry on a new
  !!int "10": |-
    ---
    +++
    @@ -25,6 +25,15 @@
     match the string.+Sort+the+dictionaries+by+"year"+in+an+ascending+order. Return the updated
  !!int "11": |-
    ---
    +++
    @@ -8,8 +8,8 @@
     entries in the-dictionary-books+input+list where the value
  !!int "12": |-
    ---
    +++
    @@ -31,12 +31,12 @@
     to that parameter,-with-each-input-entry-on-a-new-line+sorted+in+order+according+to+the+year+value """
  !!int "13": |-
    ---
    +++
    @@ -28,11 +28,9 @@
     to that parameter,-with+separated+by a line break-between-each-entry """
  !!int "14": |-
    ---
    +++
    @@ -7,11 +7,17 @@
     array list by+the+key year with+smallest+number+first+in the-oldest-book+array+list first remove the@@ -32,5 +38,5 @@
     remove the other-dictionary+dictionary. """
  !!int "15": |-
    ---
    +++
    @@ -2,14 +2,22 @@
     sortedBooks(books, writer): """-If+remove+any+element+from+list+that+does+not+have the-author-is-equal-to+same+'author'+as the-second-element,-dictionary+string+provided+by+user """
  !!int "16": |-
    ---
    +++
    @@ -4,7 +4,7 @@
     """ Returns the-dictionaries+information of the specified
  !!int "17": |-
    ---
    +++
    @@ -16,9 +16,9 @@
     its dictionary, from-highest+lowest to-lowest.+highest. Then removes the
  !!int "18": |-
    ---
    +++
    @@ -28,9 +28,12 @@
     to that parameter,-separated-by+with+each+sub-dictionary+starting+on a+new line-break """
  !!int "19": |-
    ---
    +++
    @@ -9,6 +9,7 @@
     in the dictionary+books where the value
  !!int "20": |-
    ---
    +++
    @@ -25,13 +25,15 @@
     of the author-key.-Order+key+and each dictionary in the list+is+sorted by ascending the
  !!int "21": |-
    ---
    +++
    @@ -3,9 +3,7 @@
     writer): """ Returns-a-list-of+the dictionaries of the
  !!int "22": |-
    ---
    +++
    @@ -23,4 +23,12 @@
     the input writer.+Sort+the+entries+in+order+of+increasing+year. """
  !!int "23": |-
    ---
    +++
    @@ -8,5 +8,5 @@
     of the specified-author.+writer. """
"nodes":
  !!int "0":
    "stderr":
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      5
    "stdout":
    - |
      [{'author': 'Austen', 'book': 'Emma', 'year': 1815}, {'author': 'Austen', 'book': 'Persuasion', 'year': 1818}, {'author': 'Austen', 'book': 'Pride and Prejudice', 'year': 1813}]
    - |
      [{'author': 'Woolf', 'book': 'The Voyage Out', 'year': 1915}]
    - |
      []
    "stdout_id": !!int |-
      6
  !!int "1":
    "stderr":
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      5
    "stdout":
    - |
      [{'author': 'Austen', 'book': 'Pride and Prejudice', 'year': 1813}, {'author': 'Austen', 'book': 'Emma', 'year': 1815}, {'author': 'Austen', 'book': 'Persuasion', 'year': 1818}]
    - |
      [{'author': 'Woolf', 'book': 'The Voyage Out', 'year': 1915}]
    - |
      []
    "stdout_id": !!int |-
      3
  !!int "2":
    "stderr":
    - |2
        File "/tmp/file.py", line 7
          print(sortedBooks([{'author': 'Austen', 'book': 'Emma', 'year': 1815},
      IndentationError: expected an indented block after 'if' statement on line 6
    - |2
        File "/tmp/file.py", line 7
          print(sortedBooks([{'author': 'Woolf', 'book': 'The Voyage Out', 'year': 1915},
      IndentationError: expected an indented block after 'if' statement on line 6
    - |2
        File "/tmp/file.py", line 7
          print(sortedBooks([{'author': 'Woolf', 'book': 'The Voyage Out', 'year': 1915}],
      IndentationError: expected an indented block after 'if' statement on line 6
    "stderr_id": !!int |-
      11
    "stdout":
    - ""
    - ""
    - ""
    "stdout_id": !!int |-
      2
  !!int "3":
    "stderr":
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 6, in <module>
          print(sortedBooks([{'author': 'Austen', 'book': 'Emma', 'year': 1815},
        File "/tmp/file.py", line 5, in sortedBooks
          return '
      '.join([book for book in books if book.split(' - ')[1] == writer])
        File "/tmp/file.py", line 5, in <listcomp>
          return '
      '.join([book for book in books if book.split(' - ')[1] == writer])
      AttributeError: 'dict' object has no attribute 'split'
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 6, in <module>
          print(sortedBooks([{'author': 'Woolf', 'book': 'The Voyage Out', 'year': 1915},
        File "/tmp/file.py", line 5, in sortedBooks
          return '
      '.join([book for book in books if book.split(' - ')[1] == writer])
        File "/tmp/file.py", line 5, in <listcomp>
          return '
      '.join([book for book in books if book.split(' - ')[1] == writer])
      AttributeError: 'dict' object has no attribute 'split'
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 6, in <module>
          print(sortedBooks([{'author': 'Woolf', 'book': 'The Voyage Out', 'year': 1915}],
        File "/tmp/file.py", line 5, in sortedBooks
          return '
      '.join([book for book in books if book.split(' - ')[1] == writer])
        File "/tmp/file.py", line 5, in <listcomp>
          return '
      '.join([book for book in books if book.split(' - ')[1] == writer])
      AttributeError: 'dict' object has no attribute 'split'
    "stderr_id": !!int |-
      12
    "stdout":
    - ""
    - ""
    - ""
    "stdout_id": !!int |-
      2
  !!int "4":
    "stderr":
    - |2
        File "/tmp/file.py", line 9
          sortedBooks(books, 'J. R. R. Tolkien')
      IndentationError: expected an indented block after 'if' statement on line 6
    - |2
        File "/tmp/file.py", line 9
          sortedBooks(books, 'J. R. R. Tolkien')
      IndentationError: expected an indented block after 'if' statement on line 6
    - |2
        File "/tmp/file.py", line 9
          sortedBooks(books, 'J. R. R. Tolkien')
      IndentationError: expected an indented block after 'if' statement on line 6
    "stderr_id": !!int |-
      6
    "stdout":
    - ""
    - ""
    - ""
    "stdout_id": !!int |-
      2
  !!int "5":
    "stderr":
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      5
    "stdout":
    - |
      [{'author': 'Woolf', 'book': 'The Voyage Out', 'year': 1915}, {'author': 'Austen', 'book': 'Persuasion', 'year': 1818}, {'author': 'Austen', 'book': 'Emma', 'year': 1815}]
    - |
      [{'author': 'Woolf', 'book': 'The Voyage Out', 'year': 1915}]
    - |
      []
    "stdout_id": !!int |-
      5
  !!int "6":
    "stderr":
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      5
    "stdout":
    - |
      [{'author': 'Austen', 'book': 'Pride and Prejudice', 'year': 1813}, {'author': 'Austen', 'book': 'Emma', 'year': 1815}, {'author': 'Austen', 'book': 'Persuasion', 'year': 1818}]
    - |
      [{'author': 'Austen', 'book': 'Persuasion', 'year': 1818}]
    - |
      []
    "stdout_id": !!int |-
      1
  !!int "7":
    "stderr":
    - ""
    - ""
    - ""
    "stderr_id": !!int |-
      5
    "stdout":
    - |
      [{'author': 'Austen', 'book': 'Pride and Prejudice', 'year': 1813}, {'author': 'Austen', 'book': 'Emma', 'year': 1815}, {'author': 'Austen', 'book': 'Persuasion', 'year': 1818}, {'author': 'Woolf', 'book': 'The Voyage Out', 'year': 1915}]
    - |
      [{'author': 'Austen', 'book': 'Persuasion', 'year': 1818}, {'author': 'Woolf', 'book': 'The Voyage Out', 'year': 1915}]
    - |
      [{'author': 'Woolf', 'book': 'The Voyage Out', 'year': 1915}]
    "stdout_id": !!int |-
      0
  !!int "8":
    "stderr":
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 6, in <module>
          print(sortedBooks([{'author': 'Austen', 'book': 'Emma', 'year': 1815},
        File "/tmp/file.py", line 5, in sortedBooks
          return sorted(books, key=lambda x: x[1] == writer)
        File "/tmp/file.py", line 5, in <lambda>
          return sorted(books, key=lambda x: x[1] == writer)
      KeyError: 1
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 6, in <module>
          print(sortedBooks([{'author': 'Woolf', 'book': 'The Voyage Out', 'year': 1915},
        File "/tmp/file.py", line 5, in sortedBooks
          return sorted(books, key=lambda x: x[1] == writer)
        File "/tmp/file.py", line 5, in <lambda>
          return sorted(books, key=lambda x: x[1] == writer)
      KeyError: 1
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 6, in <module>
          print(sortedBooks([{'author': 'Woolf', 'book': 'The Voyage Out', 'year': 1915}],
        File "/tmp/file.py", line 5, in sortedBooks
          return sorted(books, key=lambda x: x[1] == writer)
        File "/tmp/file.py", line 5, in <lambda>
          return sorted(books, key=lambda x: x[1] == writer)
      KeyError: 1
    "stderr_id": !!int |-
      1
    "stdout":
    - ""
    - ""
    - ""
    "stdout_id": !!int |-
      2
  !!int "9":
    "stderr":
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 15, in <module>
          print(sortedBooks([{'author': 'Austen', 'book': 'Emma', 'year': 1815},
        File "/tmp/file.py", line 7, in sortedBooks
          if books[0]['title'] == 'The Voyage Out':
      KeyError: 'title'
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 15, in <module>
          print(sortedBooks([{'author': 'Woolf', 'book': 'The Voyage Out', 'year': 1915},
        File "/tmp/file.py", line 7, in sortedBooks
          if books[0]['title'] == 'The Voyage Out':
      KeyError: 'title'
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 15, in <module>
          print(sortedBooks([{'author': 'Woolf', 'book': 'The Voyage Out', 'year': 1915}],
        File "/tmp/file.py", line 12, in sortedBooks
          if books[0]['title'] == 'The Voyage Out':
      KeyError: 'title'
    "stderr_id": !!int |-
      8
    "stdout":
    - ""
    - ""
    - ""
    "stdout_id": !!int |-
      2
  !!int "10":
    "stderr":
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 10, in <module>
          print(sortedBooks([{'author': 'Austen', 'book': 'Emma', 'year': 1815},
        File "/tmp/file.py", line 6, in sortedBooks
          if book['title'] == 'The Voyage Out':
      KeyError: 'title'
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 10, in <module>
          print(sortedBooks([{'author': 'Woolf', 'book': 'The Voyage Out', 'year': 1915},
        File "/tmp/file.py", line 6, in sortedBooks
          if book['title'] == 'The Voyage Out':
      KeyError: 'title'
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 10, in <module>
          print(sortedBooks([{'author': 'Woolf', 'book': 'The Voyage Out', 'year': 1915}],
        File "/tmp/file.py", line 6, in sortedBooks
          if book['title'] == 'The Voyage Out':
      KeyError: 'title'
    "stderr_id": !!int |-
      7
    "stdout":
    - ""
    - ""
    - ""
    "stdout_id": !!int |-
      2
  !!int "11":
    "stderr":
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 6, in <module>
          print(sortedBooks([{'author': 'Austen', 'book': 'Emma', 'year': 1815},
        File "/tmp/file.py", line 5, in sortedBooks
          return sorted(books, key=lambda book: book[writer])
        File "/tmp/file.py", line 5, in <lambda>
          return sorted(books, key=lambda book: book[writer])
      KeyError: 'Austen'
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 6, in <module>
          print(sortedBooks([{'author': 'Woolf', 'book': 'The Voyage Out', 'year': 1915},
        File "/tmp/file.py", line 5, in sortedBooks
          return sorted(books, key=lambda book: book[writer])
        File "/tmp/file.py", line 5, in <lambda>
          return sorted(books, key=lambda book: book[writer])
      KeyError: 'Woolf'
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 6, in <module>
          print(sortedBooks([{'author': 'Woolf', 'book': 'The Voyage Out', 'year': 1915}],
        File "/tmp/file.py", line 5, in sortedBooks
          return sorted(books, key=lambda book: book[writer])
        File "/tmp/file.py", line 5, in <lambda>
          return sorted(books, key=lambda book: book[writer])
      KeyError: 'Austen'
    "stderr_id": !!int |-
      0
    "stdout":
    - ""
    - ""
    - ""
    "stdout_id": !!int |-
      2
  !!int "12":
    "stderr":
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 6, in <module>
          print(sortedBooks([{'author': 'Austen', 'book': 'Emma', 'year': 1815},
        File "/tmp/file.py", line 5, in sortedBooks
          return sorted(books[writer], key=lambda book: book['title'])
      TypeError: list indices must be integers or slices, not str
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 6, in <module>
          print(sortedBooks([{'author': 'Woolf', 'book': 'The Voyage Out', 'year': 1915},
        File "/tmp/file.py", line 5, in sortedBooks
          return sorted(books[writer], key=lambda book: book['title'])
      TypeError: list indices must be integers or slices, not str
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 6, in <module>
          print(sortedBooks([{'author': 'Woolf', 'book': 'The Voyage Out', 'year': 1915}],
        File "/tmp/file.py", line 5, in sortedBooks
          return sorted(books[writer], key=lambda book: book['title'])
      TypeError: list indices must be integers or slices, not str
    "stderr_id": !!int |-
      10
    "stdout":
    - ""
    - ""
    - ""
    "stdout_id": !!int |-
      2
  !!int "13":
    "stderr":
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 10, in <module>
          print(sortedBooks([{'author': 'Austen', 'book': 'Emma', 'year': 1815},
        File "/tmp/file.py", line 7, in sortedBooks
          if book['writer'] == writer:
      KeyError: 'writer'
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 10, in <module>
          print(sortedBooks([{'author': 'Woolf', 'book': 'The Voyage Out', 'year': 1915},
        File "/tmp/file.py", line 7, in sortedBooks
          if book['writer'] == writer:
      KeyError: 'writer'
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 10, in <module>
          print(sortedBooks([{'author': 'Woolf', 'book': 'The Voyage Out', 'year': 1915}],
        File "/tmp/file.py", line 7, in sortedBooks
          if book['writer'] == writer:
      KeyError: 'writer'
    "stderr_id": !!int |-
      3
    "stdout":
    - ""
    - ""
    - ""
    "stdout_id": !!int |-
      2
  !!int "14":
    "stderr":
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 6, in <module>
          print(sortedBooks([{'author': 'Austen', 'book': 'Emma', 'year': 1815},
        File "/tmp/file.py", line 5, in sortedBooks
          return {k: v for k, v in books.items() if v['author'] == writer}
      AttributeError: 'list' object has no attribute 'items'
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 6, in <module>
          print(sortedBooks([{'author': 'Woolf', 'book': 'The Voyage Out', 'year': 1915},
        File "/tmp/file.py", line 5, in sortedBooks
          return {k: v for k, v in books.items() if v['author'] == writer}
      AttributeError: 'list' object has no attribute 'items'
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 6, in <module>
          print(sortedBooks([{'author': 'Woolf', 'book': 'The Voyage Out', 'year': 1915}],
        File "/tmp/file.py", line 5, in sortedBooks
          return {k: v for k, v in books.items() if v['author'] == writer}
      AttributeError: 'list' object has no attribute 'items'
    "stderr_id": !!int |-
      2
    "stdout":
    - ""
    - ""
    - ""
    "stdout_id": !!int |-
      2
  !!int "15":
    "stderr":
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 6, in <module>
          print(sortedBooks([{'author': 'Austen', 'book': 'Emma', 'year': 1815},
        File "/tmp/file.py", line 5, in sortedBooks
          return sorted([book for book in books if book['author'] == writer], key=lambda x: x['title'])
        File "/tmp/file.py", line 5, in <lambda>
          return sorted([book for book in books if book['author'] == writer], key=lambda x: x['title'])
      KeyError: 'title'
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 6, in <module>
          print(sortedBooks([{'author': 'Woolf', 'book': 'The Voyage Out', 'year': 1915},
        File "/tmp/file.py", line 5, in sortedBooks
          return sorted([book for book in books if book['author'] == writer], key=lambda x: x['title'])
        File "/tmp/file.py", line 5, in <lambda>
          return sorted([book for book in books if book['author'] == writer], key=lambda x: x['title'])
      KeyError: 'title'
    - ""
    "stderr_id": !!int |-
      9
    "stdout":
    - ""
    - ""
    - |
      []
    "stdout_id": !!int |-
      4
  !!int "16":
    "stderr":
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 6, in <module>
          print(sortedBooks([{'author': 'Austen', 'book': 'Emma', 'year': 1815},
        File "/tmp/file.py", line 5, in sortedBooks
          return sorted([book for book in books if book['author'] == writer], key=lambda book: book['title'])
        File "/tmp/file.py", line 5, in <lambda>
          return sorted([book for book in books if book['author'] == writer], key=lambda book: book['title'])
      KeyError: 'title'
    - |
      Traceback (most recent call last):
        File "/tmp/file.py", line 6, in <module>
          print(sortedBooks([{'author': 'Woolf', 'book': 'The Voyage Out', 'year': 1915},
        File "/tmp/file.py", line 5, in sortedBooks
          return sorted([book for book in books if book['author'] == writer], key=lambda book: book['title'])
        File "/tmp/file.py", line 5, in <lambda>
          return sorted([book for book in books if book['author'] == writer], key=lambda book: book['title'])
      KeyError: 'title'
    - ""
    "stderr_id": !!int |-
      4
    "stdout":
    - ""
    - ""
    - |
      []
    "stdout_id": !!int |-
      4
"student_color":
  "student27": |-
    #d83034
  "student29": |-
    #f9e858
  "student32": |-
    #008dff
  "student49": |-
    #4ecb8d
  "student62": |-
    #c701ff
  "student66": |-
    #ffcd8e
  "student67": |-
    #003a7d
  "student68": |-
    #Ff73b6
  "student70": |-
    #ff7f50
  "student78": |-
    #7fff00
