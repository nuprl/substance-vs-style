!Graph
problem: has_qu
nodes:
- &id001 !Node
  id: 0
  stdout:
  - 'False

    '
  - 'False

    '
  - 'False

    '
  - 'False

    '
  stderr:
  - ''
  - ''
  - ''
  - ''
  _node_tags: null
- &id002 !Node
  id: 1
  stdout:
  - 'False

    '
  - 'True

    '
  - 'True

    '
  - 'True

    '
  stderr:
  - ''
  - ''
  - ''
  - ''
  _node_tags: null
- &id003 !Node
  id: 2
  stdout:
  - 'False

    '
  - 'True

    '
  - 'False

    '
  - 'True

    '
  stderr:
  - ''
  - ''
  - ''
  - ''
  _node_tags: null
edges:
- !Edge
  node_from: *id001
  node_to: *id002
  username: student12
  prompt_from: "def has_qu(lst):\n    \"\"\"\n    Return true if the list contains\
    \ the letter Q or U, else return false\n    \"\"\"\n    "
  prompt_to: "def has_qu(lst):\n    \"\"\"\n    Return true if the list contains the\
    \ uppercase letters Q or U, else return false\n    \"\"\"\n    "
  completion_from: "for i in lst:\n        if i == \"q\" or i == \"u\":\n        \
    \    return True\n    return False\n"
  completion_to: "for i in lst:\n        if i == 'Q' or i == 'U':\n            return\
    \ True\n    return False\n"
  diff: "--- \n+++ \n@@ -8,7 +8,8 @@\n list contains the-letter+uppercase+letters\
    \ Q or U,"
  attempt_id: 1
  total_attempts: 2
  state: success
  _edge_tags: null
- !Edge
  node_from: *id003
  node_to: *id002
  username: student38
  prompt_from: "def has_qu(lst):\n    \"\"\"\n    If a string in lst has \"Q\", return\
    \ True. If not, return False. \n    \"\"\"\n    "
  prompt_to: "def has_qu(lst):\n    \"\"\"\n    If a string in lst has \"Q\" or \"\
    U\", return True. If not, return False. \n    \"\"\"\n    "
  completion_from: "for word in lst:\n        if \"Q\" in word:\n            return\
    \ True\n    return False\n"
  completion_to: "for word in lst:\n        if \"Q\" in word or \"U\" in word:\n \
    \           return True\n    return False\n"
  diff: "--- \n+++ \n@@ -7,7 +7,9 @@\n in lst has-\"Q\",+\"Q\"+or+\"U\", return True.\
    \ If"
  attempt_id: 1
  total_attempts: 2
  state: success
  _edge_tags: null
- !Edge
  node_from: *id001
  node_to: *id001
  username: student77
  prompt_from: "def has_qu(lst):\n    \"\"\"\n    Given a list of letters, return\
    \ True if the list has a Q or U, and False if the list does not.\n    \"\"\"\n\
    \    "
  prompt_to: "def has_qu(lst):\n    \"\"\"\n    Given a list of letters, return \"\
    True\" if the list has a Q or U or both, and \"False\" if the list does not.\n\
    \    \"\"\"\n    "
  completion_from: 'return ''q'' in lst or ''u'' in lst

    '
  completion_to: "if 'q' in lst or 'u' in lst:\n        return True\n    else:\n \
    \       return False\n"
  diff: "--- \n+++ \n@@ -7,7 +7,7 @@\n of letters, return-True+\"True\" if the list@@\
    \ -15,9 +15,11 @@\n a Q or-U,+U+or+both, and-False+\"False\" if the list"
  attempt_id: 1
  total_attempts: 3
  state: neutral
  _edge_tags: null
- !Edge
  node_from: *id001
  node_to: *id002
  username: student77
  prompt_from: "def has_qu(lst):\n    \"\"\"\n    Given a list of letters, return\
    \ \"True\" if the list has a Q or U or both, and \"False\" if the list does not.\n\
    \    \"\"\"\n    "
  prompt_to: "def has_qu(lst):\n    \"\"\"\n    Given a list of letters, return \"\
    True\" if the list has the letter \"Q\" or \"U\" or both, and \"False\" if the\
    \ list does not.\n    \"\"\"\n    "
  completion_from: "if 'q' in lst or 'u' in lst:\n        return True\n    else:\n\
    \        return False\n"
  completion_to: 'return "Q" in lst or "U" in lst

    '
  diff: "--- \n+++ \n@@ -12,10 +12,11 @@\n the list has-a-Q+the+letter+\"Q\" or-U+\"\
    U\" or both, and"
  attempt_id: 2
  total_attempts: 3
  state: success
  _edge_tags: null
student_start_node_tags: {}
