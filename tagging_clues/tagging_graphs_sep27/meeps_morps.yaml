!Graph
problem: meeps_morps
nodes:
- &id003 !Node
  id: 0
  stdout:
  - '[3, 2]

    '
  - '[2, 0]

    '
  - '[0, 0]

    '
  stderr:
  - ''
  - ''
  - ''
  _node_tags: null
- !Node
  id: 1
  stdout:
  - ''
  - ''
  - ''
  stderr:
  - 'NameError: name ''count_'' is not defined'
  - 'NameError: name ''count_'' is not defined'
  - 'NameError: name ''count_'' is not defined'
  _node_tags: null
- &id002 !Node
  id: 2
  stdout:
  - '(3, 2)

    '
  - '(2, 0)

    '
  - '(0, 0)

    '
  stderr:
  - ''
  - ''
  - ''
  _node_tags: null
- &id004 !Node
  id: 3
  stdout:
  - ''
  - ''
  - ''
  stderr:
  - 'AttributeError: ''list'' object has no attribute ''items'''
  - 'AttributeError: ''list'' object has no attribute ''items'''
  - 'AttributeError: ''list'' object has no attribute ''items'''
  _node_tags: null
- &id001 !Node
  id: 4
  stdout:
  - '(0, 0)

    '
  - '(0, 0)

    '
  - '(0, 0)

    '
  stderr:
  - ''
  - ''
  - ''
  _node_tags: null
edges:
- !Edge
  node_from: *id001
  node_to: *id002
  username: student16
  prompt_from: "def meeps_morps(items):\n    \"\"\"\n    count the number of 'meep'\
    \ and 'morp' in a list\n    \"\"\"\n    "
  prompt_to: "def meeps_morps(items):\n    \"\"\"\n    count the number of 'Meep'\
    \ and 'Morp' in a list\n    \"\"\"\n    "
  completion_from: "meeps = 0\n    morps = 0\n    for item in items:\n        if item\
    \ == 'meep':\n            meeps += 1\n        elif item == 'morp':\n         \
    \   morps += 1\n    return meeps, morps\n"
  completion_to: "meeps = 0\n    morps = 0\n    for item in items:\n        if item\
    \ == 'Meep':\n            meeps += 1\n        elif item == 'Morp':\n         \
    \   morps += 1\n    return meeps, morps\n"
  diff: "--- \n+++ \n@@ -5,9 +5,9 @@\n the number of-'meep'+'Meep' and-'morp'+'Morp'\
    \ in a list"
  attempt_id: 1
  total_attempts: 3
  state: neutral
  _edge_tags: null
- !Edge
  node_from: *id002
  node_to: *id003
  username: student16
  prompt_from: "def meeps_morps(items):\n    \"\"\"\n    count the number of 'Meep'\
    \ and 'Morp' in a list\n    \"\"\"\n    "
  prompt_to: "def meeps_morps(items):\n    \"\"\"\n    count the number of 'Meep'\
    \ and 'Morp' in a list as a list\n    \"\"\"\n    "
  completion_from: "meeps = 0\n    morps = 0\n    for item in items:\n        if item\
    \ == 'Meep':\n            meeps += 1\n        elif item == 'Morp':\n         \
    \   morps += 1\n    return meeps, morps\n"
  completion_to: "meeps = 0\n    morps = 0\n    for item in items:\n        if item\
    \ == 'Meep':\n            meeps += 1\n        elif item == 'Morp':\n         \
    \   morps += 1\n    return [meeps, morps]\n\n"
  diff: "--- \n+++ \n@@ -11,4 +11,7 @@\n in a list+as+a+list \"\"\""
  attempt_id: 2
  total_attempts: 3
  state: success
  _edge_tags: null
- !Edge
  node_from: *id002
  node_to: *id002
  username: student22
  prompt_from: "def meeps_morps(items):\n    \"\"\"\n    take in a list of strings\
    \ and output a count of how many times the word 'Meep' and 'Morp' occur\n    \"\
    \"\"\n    "
  prompt_to: "def meeps_morps(items):\n    \"\"\"\n    take in a list of strings and\
    \ output a tuple count of how many times the word 'Meep' and 'Morp' occur\n  \
    \  \"\"\"\n    "
  completion_from: "meep_count = 0\n    morp_count = 0\n    for item in items:\n \
    \       if item == 'Meep':\n            meep_count += 1\n        elif item ==\
    \ 'Morp':\n            morp_count += 1\n    return meep_count, morp_count\n"
  completion_to: "meeps = 0\n    morps = 0\n    for item in items:\n        if item\
    \ == 'Meep':\n            meeps += 1\n        elif item == 'Morp':\n         \
    \   morps += 1\n    return (meeps, morps)\n"
  diff: "--- \n+++ \n@@ -10,6 +10,7 @@\n and output a+tuple count of how"
  attempt_id: 1
  total_attempts: 3
  state: neutral
  _edge_tags: null
- !Edge
  node_from: *id002
  node_to: *id003
  username: student22
  prompt_from: "def meeps_morps(items):\n    \"\"\"\n    take in a list of strings\
    \ and output a tuple count of how many times the word 'Meep' and 'Morp' occur\n\
    \    \"\"\"\n    "
  prompt_to: "def meeps_morps(items):\n    \"\"\"\n    take in a list of strings and\
    \ output a list count of how many times the word 'Meep' and 'Morp' occur\n   \
    \ \"\"\"\n    "
  completion_from: "meeps = 0\n    morps = 0\n    for item in items:\n        if item\
    \ == 'Meep':\n            meeps += 1\n        elif item == 'Morp':\n         \
    \   morps += 1\n    return (meeps, morps)\n"
  completion_to: "meep_count = 0\n    morp_count = 0\n    for item in items:\n   \
    \     if item == 'Meep':\n            meep_count += 1\n        elif item == 'Morp':\n\
    \            morp_count += 1\n    return [meep_count, morp_count]\n"
  diff: "--- \n+++ \n@@ -10,7 +10,7 @@\n and output a-tuple+list count of how"
  attempt_id: 2
  total_attempts: 3
  state: success
  _edge_tags: null
- !Edge
  node_from: *id002
  node_to: *id003
  username: student5
  prompt_from: "def meeps_morps(items):\n    \"\"\"\n    The function meeps_morps\
    \ will take a list as an input and return the number of times \"Meep\" appears\
    \ and the number that \"Morp\" appears in a list\n    \"\"\"\n    "
  prompt_to: "def meeps_morps(items):\n    \"\"\"\n    The function meeps_morps will\
    \ take a list as an input and return a list with the number of times \"Meep\"\
    \ appears and the number that \"Morp\" appears.\n    \"\"\"\n    "
  completion_from: "meep_count = 0\n    morp_count = 0\n    for i in items:\n    \
    \    if i == \"Meep\":\n            meep_count += 1\n        elif i == \"Morp\"\
    :\n            morp_count += 1\n    return meep_count, morp_count\n"
  completion_to: "meep_count = 0\n    morp_count = 0\n    for item in items:\n   \
    \     if item == \"Meep\":\n            meep_count += 1\n        elif item ==\
    \ \"Morp\":\n            morp_count += 1\n    return [meep_count, morp_count]\n"
  diff: "--- \n+++ \n@@ -13,6 +13,9 @@\n input and return+a+list+with the number of@@\
    \ -24,8 +27,5 @@\n number that \"Morp\"-appears-in-a-list+appears. \"\"\""
  attempt_id: 1
  total_attempts: 2
  state: success
  _edge_tags: null
- !Edge
  node_from: *id001
  node_to: *id002
  username: student61
  prompt_from: "def meeps_morps(items):\n    \"\"\"\n    function counts amount of\
    \ times that 'meeps' and 'morps' appear in input\n    \"\"\"\n    "
  prompt_to: "def meeps_morps(items):\n    \"\"\"\n    function counts amount of times\
    \ that 'Meep' and 'Morp' appear in input\n    \"\"\"\n    "
  completion_from: "meeps = 0\n    morps = 0\n    for item in items:\n        if item\
    \ == 'meeps':\n            meeps += 1\n        elif item == 'morps':\n       \
    \     morps += 1\n    return meeps, morps\n\n"
  completion_to: "meeps = 0\n    morps = 0\n    for item in items:\n        if item\
    \ == 'Meep':\n            meeps += 1\n        elif item == 'Morp':\n         \
    \   morps += 1\n    return meeps, morps\n"
  diff: "--- \n+++ \n@@ -7,9 +7,9 @@\n of times that-'meeps'+'Meep' and-'morps'+'Morp'\
    \ appear in input"
  attempt_id: 1
  total_attempts: 5
  state: neutral
  _edge_tags: null
- !Edge
  node_from: *id002
  node_to: *id002
  username: student61
  prompt_from: "def meeps_morps(items):\n    \"\"\"\n    function counts amount of\
    \ times that 'Meep' and 'Morp' appear in input\n    \"\"\"\n    "
  prompt_to: "def meeps_morps(items):\n    \"\"\"\n    function counts amount of times\
    \ that 'Meep' and 'Morp' appear in input of strings\n    \"\"\"\n    "
  completion_from: "meeps = 0\n    morps = 0\n    for item in items:\n        if item\
    \ == 'Meep':\n            meeps += 1\n        elif item == 'Morp':\n         \
    \   morps += 1\n    return meeps, morps\n"
  completion_to: "meep_count = 0\n    morp_count = 0\n    for item in items:\n   \
    \     if item == 'Meep':\n            meep_count += 1\n        elif item == 'Morp':\n\
    \            morp_count += 1\n    return meep_count, morp_count\n"
  diff: "--- \n+++ \n@@ -13,4 +13,6 @@\n appear in input+of+strings \"\"\""
  attempt_id: 2
  total_attempts: 5
  state: neutral
  _edge_tags: null
- !Edge
  node_from: *id002
  node_to: *id004
  username: student61
  prompt_from: "def meeps_morps(items):\n    \"\"\"\n    function counts amount of\
    \ times that 'Meep' and 'Morp' appear in input of strings\n    \"\"\"\n    "
  prompt_to: "def meeps_morps(items):\n    \"\"\"\n    function counts amount of times\
    \ that 'Meep' and 'Morp' appear in dictionary\n    \"\"\"\n    "
  completion_from: "meep_count = 0\n    morp_count = 0\n    for item in items:\n \
    \       if item == 'Meep':\n            meep_count += 1\n        elif item ==\
    \ 'Morp':\n            morp_count += 1\n    return meep_count, morp_count\n"
  completion_to: "meep_count = 0\n    morp_count = 0\n    for key, value in items.items():\n\
    \        if key == 'Meep':\n            meep_count += value\n        elif key\
    \ == 'Morp':\n            morp_count += value\n    return meep_count, morp_count\n\
    \n"
  diff: "--- \n+++ \n@@ -12,7 +12,5 @@\n 'Morp' appear in-input-of-strings+dictionary\
    \ \"\"\""
  attempt_id: 3
  total_attempts: 5
  state: neutral
  _edge_tags: null
- !Edge
  node_from: *id004
  node_to: *id002
  username: student61
  prompt_from: "def meeps_morps(items):\n    \"\"\"\n    function counts amount of\
    \ times that 'Meep' and 'Morp' appear in dictionary\n    \"\"\"\n    "
  prompt_to: "def meeps_morps(items):\n    \"\"\"\n    function counts amount of times\
    \ that 'Meep' and 'Morp' appear in list\n    \"\"\"\n    "
  completion_from: "meep_count = 0\n    morp_count = 0\n    for key, value in items.items():\n\
    \        if key == 'Meep':\n            meep_count += value\n        elif key\
    \ == 'Morp':\n            morp_count += value\n    return meep_count, morp_count\n\
    \n"
  completion_to: "meep_count = 0\n    morp_count = 0\n    for item in items:\n   \
    \     if item == 'Meep':\n            meep_count += 1\n        elif item == 'Morp':\n\
    \            morp_count += 1\n    return meep_count, morp_count\n\n"
  diff: "--- \n+++ \n@@ -12,5 +12,5 @@\n 'Morp' appear in-dictionary+list \"\"\""
  attempt_id: 4
  total_attempts: 5
  state: fail
  _edge_tags: null
student_start_node_tags: {}
