!Graph
problem: planets_mass
nodes:
- &id009 !Node
  id: 0
  stdout:
  - ''
  - ''
  - ''
  stderr:
  - 'TypeError: string indices must be integers'
  - 'TypeError: string indices must be integers'
  - 'TypeError: string indices must be integers'
  _node_tags: null
- &id001 !Node
  id: 1
  stdout:
  - ''
  - ''
  - ''
  stderr:
  - 'TypeError: ''>'' not supported between instances of ''str'' and ''int'''
  - 'TypeError: ''>'' not supported between instances of ''str'' and ''int'''
  - 'TypeError: ''>'' not supported between instances of ''str'' and ''int'''
  _node_tags: null
- &id004 !Node
  id: 2
  stdout:
  - '15

    '
  - '15

    '
  - '0

    '
  stderr:
  - ''
  - ''
  - ''
  _node_tags: null
- &id007 !Node
  id: 3
  stdout:
  - ''
  - ''
  - ''
  stderr:
  - 'TypeError: ''int'' object is not subscriptable'
  - 'TypeError: ''int'' object is not subscriptable'
  - 'KeyError: ''Mercury'''
  _node_tags: null
- &id010 !Node
  id: 4
  stdout:
  - ''
  - ''
  - '0

    '
  stderr:
  - 'TypeError: ''int'' object is not subscriptable'
  - 'TypeError: ''int'' object is not subscriptable'
  - ''
  _node_tags: null
- &id006 !Node
  id: 5
  stdout:
  - ''
  - ''
  - ''
  stderr:
  - 'NameError: name ''planet_mass'' is not defined. Did you mean: ''planets_mass''?'
  - 'NameError: name ''planet_mass'' is not defined. Did you mean: ''planets_mass''?'
  - 'NameError: name ''planet_mass'' is not defined. Did you mean: ''planets_mass''?'
  _node_tags: null
- &id016 !Node
  id: 6
  stdout:
  - ''
  - ''
  - ''
  stderr:
  - 'TypeError: unsupported operand type(s) for +=: ''int'' and ''dict'''
  - 'TypeError: unsupported operand type(s) for +=: ''int'' and ''dict'''
  - 'TypeError: unsupported operand type(s) for +=: ''int'' and ''dict'''
  _node_tags: null
- &id003 !Node
  id: 7
  stdout:
  - '0

    '
  - '0

    '
  - '0

    '
  stderr:
  - ''
  - ''
  - ''
  _node_tags: null
- &id012 !Node
  id: 8
  stdout:
  - ''
  - ''
  - '0

    '
  stderr:
  - 'TypeError: unsupported operand type(s) for +=: ''int'' and ''str'''
  - 'TypeError: unsupported operand type(s) for +=: ''int'' and ''str'''
  - ''
  _node_tags: null
- !Node
  id: 9
  stdout:
  - ''
  - ''
  - ''
  stderr:
  - 'TypeError: ''<='' not supported between instances of ''str'' and ''int'''
  - 'TypeError: ''<='' not supported between instances of ''str'' and ''int'''
  - 'TypeError: ''<='' not supported between instances of ''str'' and ''int'''
  _node_tags: null
- &id008 !Node
  id: 10
  stdout:
  - ''
  - ''
  - ''
  stderr:
  - 'TypeError: ''int'' object is not subscriptable'
  - 'TypeError: ''int'' object is not subscriptable'
  - 'KeyError: ''Venus'''
  _node_tags: null
- &id014 !Node
  id: 11
  stdout:
  - ''
  - ''
  - ''
  stderr:
  - 'NameError: name ''planets_mass_dict'' is not defined. Did you mean: ''planets_mass''?'
  - 'NameError: name ''planets_mass_dict'' is not defined. Did you mean: ''planets_mass''?'
  - 'NameError: name ''planets_mass_dict'' is not defined. Did you mean: ''planets_mass''?'
  _node_tags: null
- &id013 !Node
  id: 12
  stdout:
  - ''
  - ''
  - '0

    '
  stderr:
  - 'NameError: name ''planet_mass'' is not defined. Did you mean: ''planets_mass''?'
  - 'NameError: name ''planet_mass'' is not defined. Did you mean: ''planets_mass''?'
  - ''
  _node_tags: null
- &id002 !Node
  id: 13
  stdout:
  - ''
  - ''
  - ''
  stderr:
  - 'NameError: name ''mass_'' is not defined. Did you mean: ''mass_16''?'
  - 'NameError: name ''mass_'' is not defined. Did you mean: ''mass_16''?'
  - 'NameError: name ''mass_'' is not defined. Did you mean: ''mass_16''?'
  _node_tags: null
- &id015 !Node
  id: 14
  stdout:
  - ''
  - ''
  - ''
  stderr:
  - 'TypeError: unsupported operand type(s) for +: ''int'' and ''str'''
  - 'TypeError: unsupported operand type(s) for +: ''int'' and ''str'''
  - 'TypeError: unsupported operand type(s) for +: ''int'' and ''str'''
  _node_tags: null
- &id011 !Node
  id: 15
  stdout:
  - ''
  - ''
  - ''
  stderr:
  - 'TypeError: ''int'' object is not subscriptable'
  - 'TypeError: ''int'' object is not subscriptable'
  - 'TypeError: ''int'' object is not subscriptable'
  _node_tags: null
- &id005 !Node
  id: 16
  stdout:
  - '115

    '
  - '145

    '
  - '100

    '
  stderr:
  - ''
  - ''
  - ''
  _node_tags: null
- &id017 !Node
  id: 17
  stdout:
  - ''
  - ''
  - ''
  stderr:
  - 'NameError: name ''planets_dict'' is not defined. Did you mean: ''planets_mass''?'
  - 'NameError: name ''planets_dict'' is not defined. Did you mean: ''planets_mass''?'
  - 'NameError: name ''planets_dict'' is not defined. Did you mean: ''planets_mass''?'
  _node_tags: null
edges:
- !Edge
  node_from: *id001
  node_to: *id002
  username: student14
  prompt_from: "def planets_mass(planets):\n    \"\"\"\n    if the number attached\
    \ to each planet name is greater than 16, get rid of it. Add up the remaining\
    \ numbers attached to each planet that are less than 16\n    \"\"\"\n    "
  prompt_to: "def planets_mass(planets):\n    \"\"\"\n    if planet mass is less than\
    \ 16, add up the total planet mass in each bracket\n    \"\"\"\n    "
  completion_from: "total = 0\n    for planet in planets:\n        if planet[1] >\
    \ 16:\n            continue\n        total += planet[1]\n    return total\n"
  completion_to: "mass_16 = 0\n    mass_32 = 0\n    mass_64 = 0\n    mass_128 = 0\n\
    \    mass_256 = 0\n    mass_512 = 0\n    mass_1024 = 0\n    mass_2048 = 0\n  \
    \  mass_4096 = 0\n    mass_8192 = 0\n    mass_16384 = 0\n    mass_32768 = 0\n\
    \    mass_65536 = 0\n    mass_"
  diff: "--- \n+++ \n@@ -2,33 +2,19 @@\n planets_mass(planets): \"\"\" if-the-number-attached-to-each\
    \ planet-name+mass is-greater+less than 16,-get-rid-of-it.-Add+add up the-remaining-numbers-attached-to+total+planet+mass+in\
    \ each-planet-that-are-less-than-16+bracket \"\"\""
  attempt_id: 1
  total_attempts: 5
  state: neutral
  _edge_tags: null
- !Edge
  node_from: *id002
  node_to: *id003
  username: student14
  prompt_from: "def planets_mass(planets):\n    \"\"\"\n    if planet mass is less\
    \ than 16, add up the total planet mass in each bracket\n    \"\"\"\n    "
  prompt_to: "def planets_mass(planets):\n    \"\"\"\n    if 'sun' is in the string,\
    \ output is 15\n    \"\"\"\n    "
  completion_from: "mass_16 = 0\n    mass_32 = 0\n    mass_64 = 0\n    mass_128 =\
    \ 0\n    mass_256 = 0\n    mass_512 = 0\n    mass_1024 = 0\n    mass_2048 = 0\n\
    \    mass_4096 = 0\n    mass_8192 = 0\n    mass_16384 = 0\n    mass_32768 = 0\n\
    \    mass_65536 = 0\n    mass_"
  completion_to: "if 'sun' in planets:\n        return 15\n    else:\n        return\
    \ 0\n"
  diff: "--- \n+++ \n@@ -2,19 +2,12 @@\n planets_mass(planets): \"\"\" if-planet-mass+'sun'\
    \ is-less-than-16,-add-up+in the-total-planet-mass-in-each-bracket+string,+output+is+15\
    \ \"\"\""
  attempt_id: 2
  total_attempts: 5
  state: neutral
  _edge_tags: null
- !Edge
  node_from: *id003
  node_to: *id003
  username: student14
  prompt_from: "def planets_mass(planets):\n    \"\"\"\n    if 'sun' is in the string,\
    \ output is 15\n    \"\"\"\n    "
  prompt_to: "def planets_mass(planets):\n    \"\"\"\n    if 'sun' is in planets,\
    \ output is 15. else, output 0\n    \"\"\"\n    "
  completion_from: "if 'sun' in planets:\n        return 15\n    else:\n        return\
    \ 0\n"
  completion_to: "if 'sun' in planets:\n        return 15\n    else:\n        return\
    \ 0\n"
  diff: "--- \n+++ \n@@ -5,9 +5,11 @@\n 'sun' is in-the-string,+planets, output is-15+15.+else,+output+0\
    \ \"\"\""
  attempt_id: 3
  total_attempts: 5
  state: neutral
  _edge_tags: null
- !Edge
  node_from: *id003
  node_to: *id004
  username: student14
  prompt_from: "def planets_mass(planets):\n    \"\"\"\n    if 'sun' is in planets,\
    \ output is 15. else, output 0\n    \"\"\"\n    "
  prompt_to: "def planets_mass(planets):\n    \"\"\"\n    if 'Sun' is in planets,\
    \ output is 15. else, output 0\n    \"\"\"\n    "
  completion_from: "if 'sun' in planets:\n        return 15\n    else:\n        return\
    \ 0\n"
  completion_to: "if 'Sun' in planets:\n        return 15\n    else:\n        return\
    \ 0\n"
  diff: "--- \n+++ \n@@ -2,7 +2,7 @@\n planets_mass(planets): \"\"\" if-'sun'+'Sun'\
    \ is in planets,"
  attempt_id: 4
  total_attempts: 5
  state: success
  _edge_tags: null
- !Edge
  node_from: *id005
  node_to: *id006
  username: student24
  prompt_from: "def planets_mass(planets):\n    \"\"\"\n    For each item in dictionary,\
    \ add the values from that name if the name is in the dictionary for planets.\
    \ Return the sum of those values.\n    \"\"\"\n    "
  prompt_to: "def planets_mass(planets):\n    \"\"\"\n    For each item in the dictionary,\
    \ add the values from that name if the name is in a different dictionary. Return\
    \ the sum of those values.\n    \"\"\"\n    "
  completion_from: "total_mass = 0\n    for name in planets:\n        if name in planets:\n\
    \            total_mass += planets[name]\n    return total_mass\n"
  completion_to: "mass = 0\n    for planet in planets:\n        if planet in planet_mass:\n\
    \            mass += planet_mass[planet]\n    return mass\n"
  diff: "--- \n+++ \n@@ -5,6 +5,7 @@\n each item in+the dictionary, add the@@ -17,10\
    \ +18,9 @@\n name is in-the-dictionary-for-planets.+a+different+dictionary. Return\
    \ the sum"
  attempt_id: 1
  total_attempts: 3
  state: neutral
  _edge_tags: null
- !Edge
  node_from: *id006
  node_to: *id005
  username: student24
  prompt_from: "def planets_mass(planets):\n    \"\"\"\n    For each item in the dictionary,\
    \ add the values from that name if the name is in a different dictionary. Return\
    \ the sum of those values.\n    \"\"\"\n    "
  prompt_to: "def planets_mass(planets):\n    \"\"\"\n    For each item in the dictionary,\
    \ add the values from that name in planets if the name is in a different dictionary\
    \ and and in planets. Return the sum of those values.\n    \"\"\"\n    "
  completion_from: "mass = 0\n    for planet in planets:\n        if planet in planet_mass:\n\
    \            mass += planet_mass[planet]\n    return mass\n"
  completion_to: "mass = 0\n    for name in planets:\n        if name in planets:\n\
    \            mass += planets[name]\n    return mass\n"
  diff: "--- \n+++ \n@@ -13,6 +13,8 @@\n from that name+in+planets if the name@@ -20,7\
    \ +22,11 @@\n in a different-dictionary.+dictionary+and+and+in+planets. Return\
    \ the sum"
  attempt_id: 2
  total_attempts: 3
  state: fail
  _edge_tags: null
- !Edge
  node_from: *id005
  node_to: *id005
  username: student46
  prompt_from: "def planets_mass(planets):\n    \"\"\"\n    The function will take\
    \ in a dictionary where the keys are strings, with the first letter capitalized,\
    \ and integers are stored inside them. It will remove any strings that are not\
    \ associated with planets, then it will take all the integers stored inside and\
    \ add them together and output that.\n    \"\"\"\n    "
  prompt_to: "def planets_mass(planets):\n    \"\"\"\n    The function will take in\
    \ a dictionary where the keys are strings, with the first letter capitalized,\
    \ and integers are stored inside them. It will remove any strings that are not\
    \ associated with planets, then it will take all the integers stored inside and\
    \ add them together and output that.\n    \"\"\"\n    "
  completion_from: "# remove all keys that are not planets\n    for key in planets.keys():\n\
    \        if key[0] != key[0].upper():\n            del planets[key]\n    # add\
    \ all the values together\n    total = 0\n    for value in planets.values():\n\
    \        total += value\n    return total\n"
  completion_to: "for key in planets:\n        if key[0].isupper() == False:\n   \
    \         del planets[key]\n    mass = 0\n    for key in planets:\n        mass\
    \ += planets[key]\n    return mass\n"
  diff: ''
  attempt_id: 1
  total_attempts: 3
  state: neutral
  _edge_tags: null
- !Edge
  node_from: *id005
  node_to: *id004
  username: student46
  prompt_from: "def planets_mass(planets):\n    \"\"\"\n    The function will take\
    \ in a dictionary where the keys are strings, with the first letter capitalized,\
    \ and integers are stored inside them. It will remove any strings that are not\
    \ associated with planets, then it will take all the integers stored inside and\
    \ add them together and output that.\n    \"\"\"\n    "
  prompt_to: "def planets_mass(planets):\n    \"\"\"\n    The function will take in\
    \ a dictionary where the keys are strings and integers are stored inside them.\
    \ It will remove any strings that are not associated with planets, then it will\
    \ take all the integers stored inside and add them together and output that.\n\
    \    \"\"\"\n    "
  completion_from: "for key in planets:\n        if key[0].isupper() == False:\n \
    \           del planets[key]\n    mass = 0\n    for key in planets:\n        mass\
    \ += planets[key]\n    return mass\n"
  completion_to: "total = 0\n    for planet in planets:\n        if planet == \"Mercury\"\
    \ or planet == \"Venus\" or planet == \"Earth\" or planet == \"Mars\" or planet\
    \ == \"Jupiter\" or planet == \"Saturn\" or planet == \"Uranus\" or planet ==\
    \ \"Neptune\":\n            total += planets[planet]\n    return total\n"
  diff: "--- \n+++ \n@@ -12,12 +12,7 @@\n the keys are-strings,-with-the-first-letter-capitalized,+strings\
    \ and integers are"
  attempt_id: 2
  total_attempts: 3
  state: success
  _edge_tags: null
- !Edge
  node_from: *id007
  node_to: *id008
  username: student47
  prompt_from: "def planets_mass(planets):\n    \"\"\"\n    \"add up all the numbers\
    \ associated with 'Venus' and 'Mercury'\"\n    \"\"\"\n    "
  prompt_to: "def planets_mass(planets):\n    \"\"\"\n    \"add up all the floats\
    \ associated with 'Venus' and 'Mercury'\"\n    \"\"\"\n    "
  completion_from: 'return planets[''Mercury''][''mass''] + planets[''Venus''][''mass'']


    '
  completion_to: 'return sum(planets[''Venus''][''mass'']) + sum(planets[''Mercury''][''mass''])

    '
  diff: "--- \n+++ \n@@ -5,7 +5,7 @@\n up all the-numbers+floats associated with 'Venus'"
  attempt_id: 1
  total_attempts: 5
  state: neutral
  _edge_tags: null
- !Edge
  node_from: *id008
  node_to: *id008
  username: student47
  prompt_from: "def planets_mass(planets):\n    \"\"\"\n    \"add up all the floats\
    \ associated with 'Venus' and 'Mercury'\"\n    \"\"\"\n    "
  prompt_to: "def planets_mass(planets):\n    \"\"\"\n    \"add up all the integers\
    \ associated with 'Venus' and 'Mercury'\"\n    \"\"\"\n    "
  completion_from: 'return sum(planets[''Venus''][''mass'']) + sum(planets[''Mercury''][''mass''])

    '
  completion_to: 'return planets[''Venus''][''mass''] + planets[''Mercury''][''mass'']

    '
  diff: "--- \n+++ \n@@ -5,7 +5,7 @@\n up all the-floats+integers associated with\
    \ 'Venus'"
  attempt_id: 2
  total_attempts: 5
  state: neutral
  _edge_tags: null
- !Edge
  node_from: *id008
  node_to: *id009
  username: student47
  prompt_from: "def planets_mass(planets):\n    \"\"\"\n    \"add up all the integers\
    \ associated with 'Venus' and 'Mercury'\"\n    \"\"\"\n    "
  prompt_to: "def planets_mass(planets):\n    \"\"\"\n    \"add up all the integers\
    \ that are associated with with a string that is 'Venus' and 'Mercury'\"\n   \
    \ \"\"\"\n    "
  completion_from: 'return planets[''Venus''][''mass''] + planets[''Mercury''][''mass'']

    '
  completion_to: "mass = 0\n    for planet in planets:\n        if planet['name']\
    \ == 'Venus' or planet['name'] == 'Mercury':\n            mass += planet['mass']\n\
    \    return mass\n"
  diff: "--- \n+++ \n@@ -6,8 +6,15 @@\n all the integers+that+are associated with+with+a+string+that+is\
    \ 'Venus' and 'Mercury'\""
  attempt_id: 3
  total_attempts: 5
  state: neutral
  _edge_tags: null
- !Edge
  node_from: *id009
  node_to: *id003
  username: student47
  prompt_from: "def planets_mass(planets):\n    \"\"\"\n    \"add up all the integers\
    \ that are associated with with a string that is 'Venus' and 'Mercury'\"\n   \
    \ \"\"\"\n    "
  prompt_to: "def planets_mass(planets):\n    \"\"\"\n    \"go through the 0 index\
    \ of the planets if they are 'Venus' and 'Mercury', add up the integers that are\
    \ associated with them\"\n    \"\"\"\n    "
  completion_from: "mass = 0\n    for planet in planets:\n        if planet['name']\
    \ == 'Venus' or planet['name'] == 'Mercury':\n            mass += planet['mass']\n\
    \    return mass\n"
  completion_to: "total = 0\n    for planet in planets:\n        if planet[0] == 'Venus'\
    \ or planet[0] == 'Mercury':\n            total += planet[1]\n    return total\n"
  diff: "--- \n+++ \n@@ -1,21 +1,27 @@\n def planets_mass(planets): \"\"\"-\"add+\"\
    go+through+the+0+index+of+the+planets+if+they+are+'Venus'+and+'Mercury',+add up-all\
    \ the integers that are associated with-with-a-string-that-is-'Venus'-and-'Mercury'\"\
    +them\" \"\"\""
  attempt_id: 4
  total_attempts: 5
  state: fail
  _edge_tags: null
- !Edge
  node_from: *id010
  node_to: *id004
  username: student53
  prompt_from: "def planets_mass(planets):\n    \"\"\"\n    loop through planets and\
    \ if the element is == 'Venus' or 'Mercury' add value to a new list and return\
    \ the sum of the new list. \n    \"\"\"\n    "
  prompt_to: "def planets_mass(planets):\n    \"\"\"\n    loop through planets and\
    \ if the key == 'Venus' or 'Mercury' add the values together and return this value\n\
    \    \"\"\"\n    "
  completion_from: "mass_list = []\n    for planet in planets:\n        if planet\
    \ == 'Venus' or planet == 'Mercury':\n            mass_list.append(planets[planet]['mass'])\n\
    \    return sum(mass_list)\n"
  completion_to: "total_mass = 0\n    for key, value in planets.items():\n       \
    \ if key == 'Venus' or key == 'Mercury':\n            total_mass += value\n  \
    \  return total_mass\n"
  diff: "--- \n+++ \n@@ -7,24 +7,17 @@\n and if the-element-is+key == 'Venus' or 'Mercury'\
    \ add-value-to-a-new-list+the+values+together and return-the-sum-of-the-new-list.+this+value\
    \ \"\"\""
  attempt_id: 1
  total_attempts: 2
  state: success
  _edge_tags: null
- !Edge
  node_from: *id005
  node_to: *id005
  username: student55
  prompt_from: "def planets_mass(planets):\n    \"\"\"\n    Write a function that\
    \ gets a dictionary of planets and their masses. All the planets masses in a dictionary\
    \ using the name of the planet as the key. The function should return the sum\
    \ of all the planets' masses.\n    \"\"\"\n    "
  prompt_to: "def planets_mass(planets):\n    \"\"\"\n    Write a function that gets\
    \ a dictionary of planets and their masses. All the planets masses in a dictionary\
    \ using the name of the planet as the key. The function should return the sum\
    \ of all the planets' masses. The sun and pluto are not planets, so they cannot\
    \ be added.\n    \"\"\"\n    "
  completion_from: 'return sum(planets.values())

    '
  completion_to: "mass = 0\n    for planet in planets:\n        if planet != \"sun\"\
    \ and planet != \"pluto\":\n            mass += planets[planet]\n    return mass\n"
  diff: "--- \n+++ \n@@ -40,4 +40,16 @@\n the planets' masses.+The+sun+and+pluto+are+not+planets,+so+they+cannot+be+added.\
    \ \"\"\""
  attempt_id: 1
  total_attempts: 5
  state: neutral
  _edge_tags: null
- !Edge
  node_from: *id005
  node_to: *id011
  username: student55
  prompt_from: "def planets_mass(planets):\n    \"\"\"\n    Write a function that\
    \ gets a dictionary of planets and their masses. All the planets masses in a dictionary\
    \ using the name of the planet as the key. The function should return the sum\
    \ of all the planets' masses. The sun and pluto are not planets, so they cannot\
    \ be added.\n    \"\"\"\n    "
  prompt_to: "def planets_mass(planets):\n    \"\"\"\n    Write a function that gets\
    \ a dictionary. The function should sum up the masses of the planets and returns\
    \ the total.\n    \"\"\"\n    "
  completion_from: "mass = 0\n    for planet in planets:\n        if planet != \"\
    sun\" and planet != \"pluto\":\n            mass += planets[planet]\n    return\
    \ mass\n"
  completion_to: "total = 0\n    for planet in planets:\n        total += planets[planet]['mass']\n\
    \    return total\n\n"
  diff: "--- \n+++ \n@@ -7,49 +7,19 @@\n that gets a-dictionary-of-planets-and-their-masses.-All-the-planets-masses-in-a-dictionary-using-the-name-of-the-planet-as-the-key.+dictionary.\
    \ The function should-return+sum+up the-sum+masses of-all the-planets'-masses.-The-sun+planets\
    \ and-pluto-are-not-planets,-so-they-cannot-be-added.+returns+the+total. \"\"\""
  attempt_id: 2
  total_attempts: 5
  state: neutral
  _edge_tags: null
- !Edge
  node_from: *id011
  node_to: *id005
  username: student55
  prompt_from: "def planets_mass(planets):\n    \"\"\"\n    Write a function that\
    \ gets a dictionary. The function should sum up the masses of the planets and\
    \ returns the total.\n    \"\"\"\n    "
  prompt_to: "def planets_mass(planets):\n    \"\"\"\n    Write a function that gets\
    \ a dictionary. The key of the dictionary is the name of the planet and the value\
    \ is the mass. The function should sum up the masses of only the planets and returns\
    \ the total.\n    \"\"\"\n    "
  completion_from: "total = 0\n    for planet in planets:\n        total += planets[planet]['mass']\n\
    \    return total\n\n"
  completion_to: "total = 0\n    for planet in planets:\n        total += planets[planet]\n\
    \    return total\n"
  diff: "--- \n+++ \n@@ -9,6 +9,23 @@\n a dictionary. The+key+of+the+dictionary+is+the+name+of+the+planet+and+the+value+is+the+mass.+The\
    \ function should sum@@ -16,6 +33,7 @@\n the masses of+only the planets and"
  attempt_id: 3
  total_attempts: 5
  state: neutral
  _edge_tags: null
- !Edge
  node_from: *id005
  node_to: *id004
  username: student55
  prompt_from: "def planets_mass(planets):\n    \"\"\"\n    Write a function that\
    \ gets a dictionary. The key of the dictionary is the name of the planet and the\
    \ value is the mass. The function should sum up the masses of only the planets\
    \ and returns the total.\n    \"\"\"\n    "
  prompt_to: "def planets_mass(planets):\n    \"\"\"\n    Write a function that gets\
    \ a dictionary. The key of the dictionary is the name of the planet and the value\
    \ is the mass. The function should sum up the masses of only the planets and returns\
    \ the total. The sun and pluto are not planets.\n    \"\"\"\n    "
  completion_from: "total = 0\n    for planet in planets:\n        total += planets[planet]\n\
    \    return total\n"
  completion_to: "total = 0\n    for planet in planets:\n        if planet != \"Sun\"\
    \ and planet != \"Pluto\":\n            total += planets[planet]\n    return total\n"
  diff: "--- \n+++ \n@@ -40,4 +40,11 @@\n returns the total.+The+sun+and+pluto+are+not+planets.\
    \ \"\"\""
  attempt_id: 4
  total_attempts: 5
  state: success
  _edge_tags: null
- !Edge
  node_from: *id012
  node_to: *id013
  username: student58
  prompt_from: "def planets_mass(planets):\n    \"\"\"\n    return the sum of the\
    \ integers. If the integer corresponds to strings 'Pluto' or 'Sun', ignore the\
    \ integer\n    \"\"\"\n    "
  prompt_to: "def planets_mass(planets):\n    \"\"\"\n    return the sum of the integers\
    \ unless planet = 'Sun' or 'Pluto'\n    \"\"\"\n    "
  completion_from: "total = 0\n    for planet in planets:\n        if planet == 'Pluto'\
    \ or planet == 'Sun':\n            continue\n        else:\n            total\
    \ += planet\n    return total\n"
  completion_to: "total = 0\n    for planet in planets:\n        if planet == 'Sun'\
    \ or planet == 'Pluto':\n            continue\n        total += planet_mass[planet]\n\
    \    return total\n"
  diff: "--- \n+++ \n@@ -6,17 +6,11 @@\n sum of the-integers.-If-the-integer-corresponds-to-strings+integers+unless+planet+=+'Sun'+or\
    \ 'Pluto'-or-'Sun',-ignore-the-integer \"\"\""
  attempt_id: 1
  total_attempts: 5
  state: neutral
  _edge_tags: null
- !Edge
  node_from: *id013
  node_to: *id014
  username: student58
  prompt_from: "def planets_mass(planets):\n    \"\"\"\n    return the sum of the\
    \ integers unless planet = 'Sun' or 'Pluto'\n    \"\"\"\n    "
  prompt_to: "def planets_mass(planets):\n    \"\"\"\n    return the sum of the integers\
    \ unless planets = 'Sun' or 'Pluto'\n    \"\"\"\n    "
  completion_from: "total = 0\n    for planet in planets:\n        if planet == 'Sun'\
    \ or planet == 'Pluto':\n            continue\n        total += planet_mass[planet]\n\
    \    return total\n"
  completion_to: "if planets == 'Sun' or planets == 'Pluto':\n        return 0\n \
    \   else:\n        return planets_mass_dict[planets]\n"
  diff: "--- \n+++ \n@@ -8,7 +8,7 @@\n the integers unless-planet+planets = 'Sun'\
    \ or"
  attempt_id: 2
  total_attempts: 5
  state: neutral
  _edge_tags: null
- !Edge
  node_from: *id014
  node_to: *id015
  username: student58
  prompt_from: "def planets_mass(planets):\n    \"\"\"\n    return the sum of the\
    \ integers unless planets = 'Sun' or 'Pluto'\n    \"\"\"\n    "
  prompt_to: "def planets_mass(planets):\n    \"\"\"\n    If planets = 'Sun' or 'Pluto',\
    \ return 0. Else return the sum of the integers\n    \"\"\"\n    "
  completion_from: "if planets == 'Sun' or planets == 'Pluto':\n        return 0\n\
    \    else:\n        return planets_mass_dict[planets]\n"
  completion_to: "if planets == 'Sun' or planets == 'Pluto':\n        return 0\n \
    \   else:\n        return sum(planets)\n"
  diff: "--- \n+++ \n@@ -1,16 +1,19 @@\n def planets_mass(planets): \"\"\"+If+planets+=+'Sun'+or+'Pluto',+return+0.+Else\
    \ return the sum of the integers-unless-planets-=-'Sun'-or-'Pluto' \"\"\""
  attempt_id: 3
  total_attempts: 5
  state: neutral
  _edge_tags: null
- !Edge
  node_from: *id015
  node_to: *id016
  username: student58
  prompt_from: "def planets_mass(planets):\n    \"\"\"\n    If planets = 'Sun' or\
    \ 'Pluto', return 0. Else return the sum of the integers\n    \"\"\"\n    "
  prompt_to: "def planets_mass(planets):\n    \"\"\"\n    If planets = 'Sun' or 'Pluto',\
    \ return 0. Else add the integer to x. Return x\n    \"\"\"\n    "
  completion_from: "if planets == 'Sun' or planets == 'Pluto':\n        return 0\n\
    \    else:\n        return sum(planets)\n"
  completion_to: "x = 0\n    if planets == 'Sun' or planets == 'Pluto':\n        return\
    \ 0\n    else:\n        x += planets\n        return x\n"
  diff: "--- \n+++ \n@@ -10,10 +10,11 @@\n return 0. Else-return+add the-sum-of-the-integers+integer+to+x.+Return+x\
    \ \"\"\""
  attempt_id: 4
  total_attempts: 5
  state: fail
  _edge_tags: null
- !Edge
  node_from: *id011
  node_to: *id011
  username: student65
  prompt_from: "def planets_mass(planets):\n    \"\"\"\n    This function takes a\
    \ dictionary. If an entry is a planet, then it adds the key to the total mass.\
    \ The output is the total mass of all planets in the dictionary.\n    \"\"\"\n\
    \    "
  prompt_to: "def planets_mass(planets):\n    \"\"\"\n    This function returns the\
    \ total mass of all planets in a dictionary\n    \"\"\"\n    "
  completion_from: "total_mass = 0\n    for key in planets:\n        if planets[key][\"\
    type\"] == \"planet\":\n            total_mass += planets[key][\"mass\"]\n   \
    \ return total_mass\n"
  completion_to: "total_mass = 0\n    for planet in planets:\n        total_mass +=\
    \ planets[planet]['mass']\n    return total_mass\n"
  diff: "--- \n+++ \n@@ -3,27 +3,7 @@\n \"\"\" This function-takes-a-dictionary.-If-an-entry-is-a-planet,-then-it-adds-the-key-to-the-total-mass.-The-output-is+returns\
    \ the total mass@@ -31,6 +11,6 @@\n all planets in-the-dictionary.+a+dictionary\
    \ \"\"\""
  attempt_id: 1
  total_attempts: 4
  state: neutral
  _edge_tags: null
- !Edge
  node_from: *id011
  node_to: *id011
  username: student65
  prompt_from: "def planets_mass(planets):\n    \"\"\"\n    This function returns\
    \ the total mass of all planets in a dictionary\n    \"\"\"\n    "
  prompt_to: "def planets_mass(planets):\n    \"\"\"\n    This function takes the\
    \ input of a dictionary. If the key is a planet, it takes the entry and adds it\
    \ to the total mass. The function outputs the total mass of all planets in the\
    \ dictionary.\n    \"\"\"\n    "
  completion_from: "total_mass = 0\n    for planet in planets:\n        total_mass\
    \ += planets[planet]['mass']\n    return total_mass\n"
  completion_to: "total_mass = 0\n    for key in planets:\n        if key in planets:\n\
    \            total_mass += planets[key][\"mass\"]\n    return total_mass\n"
  diff: "--- \n+++ \n@@ -3,7 +3,32 @@\n \"\"\" This function-returns+takes+the+input+of+a+dictionary.+If+the+key+is+a+planet,+it+takes+the+entry+and+adds+it+to+the+total+mass.+The+function+outputs\
    \ the total mass@@ -11,6 +36,6 @@\n all planets in-a-dictionary+the+dictionary.\
    \ \"\"\""
  attempt_id: 2
  total_attempts: 4
  state: neutral
  _edge_tags: null
- !Edge
  node_from: *id011
  node_to: *id017
  username: student65
  prompt_from: "def planets_mass(planets):\n    \"\"\"\n    This function takes the\
    \ input of a dictionary. If the key is a planet, it takes the entry and adds it\
    \ to the total mass. The function outputs the total mass of all planets in the\
    \ dictionary.\n    \"\"\"\n    "
  prompt_to: "def planets_mass(planets):\n    \"\"\"\n    This function takes the\
    \ input of a dictionary. If the key is the name of a planet, its value is added\
    \ to the total mass. Otherwise, 0 is added. The function returns the total mass\
    \ of all planets in the dictionary.\n    \"\"\"\n    "
  completion_from: "total_mass = 0\n    for key in planets:\n        if key in planets:\n\
    \            total_mass += planets[key][\"mass\"]\n    return total_mass\n"
  completion_to: "total_mass = 0\n    for planet in planets:\n        if planet in\
    \ planets_dict:\n            total_mass += planets[planet]\n        else:\n  \
    \          total_mass += 0\n    return total_mass\n"
  diff: "--- \n+++ \n@@ -13,22 +13,26 @@\n the key is+the+name+of a planet,-it-takes-the-entry-and-adds-it+its+value+is+added\
    \ to the total mass.+Otherwise,+0+is+added. The function-outputs+returns the total\
    \ mass"
  attempt_id: 3
  total_attempts: 4
  state: fail
  _edge_tags: null
- !Edge
  node_from: *id004
  node_to: *id005
  username: student9
  prompt_from: "def planets_mass(planets):\n    \"\"\"\n    The function add together\
    \ each number that corresponds with a string that is a planet. 'Sun' and 'Pluto'\
    \ are not planets.\n    \"\"\"\n    "
  prompt_to: "def planets_mass(planets):\n    \"\"\"\n    The function add together\
    \ each number that corresponds with a string that is a planet.\n    \"\"\"\n \
    \   "
  completion_from: "total_mass = 0\n    for planet in planets:\n        if planet\
    \ == 'Sun' or planet == 'Pluto':\n            continue\n        total_mass +=\
    \ planets[planet]\n    return total_mass\n"
  completion_to: "total = 0\n    for planet in planets:\n        total += planets[planet]\n\
    \    return total\n\n"
  diff: "--- \n+++ \n@@ -16,10 +16,4 @@\n is a planet.-'Sun'-and-'Pluto'-are-not-planets.\
    \ \"\"\""
  attempt_id: 1
  total_attempts: 2
  state: fail
  _edge_tags: null
student_start_node_tags: {}
