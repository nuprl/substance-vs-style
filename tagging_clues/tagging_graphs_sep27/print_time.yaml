!Graph
problem: print_time
nodes:
- &id006 !Node
  id: 0
  stdout:
  - 'weekend

    '
  - 'weekend

    '
  - 'weekday

    '
  - 'weekday

    '
  - 'sleeping

    '
  - 'weekday

    '
  stderr:
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  _node_tags: null
- &id011 !Node
  id: 1
  stdout:
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  stderr:
  - 'IndentationError: expected an indented block after ''else'' statement on line
    14'
  - 'IndentationError: expected an indented block after ''else'' statement on line
    14'
  - 'IndentationError: expected an indented block after ''else'' statement on line
    14'
  - 'IndentationError: expected an indented block after ''else'' statement on line
    14'
  - 'IndentationError: expected an indented block after ''else'' statement on line
    14'
  - 'IndentationError: expected an indented block after ''else'' statement on line
    14'
  _node_tags: null
- &id001 !Node
  id: 2
  stdout:
  - 'Invalid day

    '
  - 'Invalid day

    '
  - 'Invalid day

    '
  - 'Invalid day

    '
  - 'Invalid day

    '
  - 'Invalid day

    '
  stderr:
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  _node_tags: null
- &id003 !Node
  id: 3
  stdout:
  - 'weekday

    '
  - 'weekday

    '
  - 'weekday

    '
  - 'weekday

    '
  - 'sleeping

    '
  - 'sleeping

    '
  stderr:
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  _node_tags: null
- &id005 !Node
  id: 4
  stdout:
  - 'Weekday

    '
  - 'Weekday

    '
  - 'Weekday

    '
  - 'Weekday

    '
  - 'Sleeping

    '
  - 'Sleeping

    '
  stderr:
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  _node_tags: null
- &id004 !Node
  id: 5
  stdout:
  - 'weekend

    '
  - 'weekend

    '
  - 'weekday

    '
  - 'weekday

    '
  - 'sleeping

    '
  - 'sleeping

    '
  stderr:
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  _node_tags: null
- &id007 !Node
  id: 6
  stdout:
  - 'weekend

    '
  - 'weekend

    '
  - 'weekday

    '
  - 'weekday

    '
  - 'weekday

    '
  - 'weekday

    '
  stderr:
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  _node_tags: null
- &id012 !Node
  id: 7
  stdout:
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  stderr:
  - 'SyntaxError: unterminated string literal (detected at line 13)'
  - 'SyntaxError: unterminated string literal (detected at line 13)'
  - 'SyntaxError: unterminated string literal (detected at line 13)'
  - 'SyntaxError: unterminated string literal (detected at line 13)'
  - 'SyntaxError: unterminated string literal (detected at line 13)'
  - 'SyntaxError: unterminated string literal (detected at line 13)'
  _node_tags: null
- &id002 !Node
  id: 8
  stdout:
  - 'weekday

    '
  - 'weekday

    '
  - 'weekday

    '
  - 'weekday

    '
  - 'sleeping

    '
  - 'weekday

    '
  stderr:
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  _node_tags: null
- &id010 !Node
  id: 9
  stdout:
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  stderr:
  - 'NameError: name ''print_'' is not defined. Did you mean: ''print''?'
  - 'NameError: name ''print_'' is not defined. Did you mean: ''print''?'
  - 'NameError: name ''print_'' is not defined. Did you mean: ''print''?'
  - 'NameError: name ''print_'' is not defined. Did you mean: ''print''?'
  - 'NameError: name ''print_'' is not defined. Did you mean: ''print''?'
  - 'NameError: name ''print_'' is not defined. Did you mean: ''print''?'
  _node_tags: null
- &id008 !Node
  id: 10
  stdout:
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  stderr:
  - 'IndentationError: expected an indented block after ''if'' statement on line 5'
  - 'IndentationError: expected an indented block after ''if'' statement on line 5'
  - 'IndentationError: expected an indented block after ''if'' statement on line 5'
  - 'IndentationError: expected an indented block after ''if'' statement on line 5'
  - 'IndentationError: expected an indented block after ''if'' statement on line 5'
  - 'IndentationError: expected an indented block after ''if'' statement on line 5'
  _node_tags: null
- &id009 !Node
  id: 11
  stdout:
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  stderr:
  - 'SyntaxError: ''('' was never closed'
  - 'SyntaxError: ''('' was never closed'
  - 'SyntaxError: ''('' was never closed'
  - 'SyntaxError: ''('' was never closed'
  - 'SyntaxError: ''('' was never closed'
  - 'SyntaxError: ''('' was never closed'
  _node_tags: null
edges:
- !Edge
  node_from: *id001
  node_to: *id002
  username: student12
  prompt_from: "def print_time(day,hour):\n    \"\"\"\n    Return if the day of the\
    \ week is a weekday or weekend if the hour is not between 0 and 8. Else, return\
    \ sleeping.\n    \"\"\"\n    "
  prompt_to: "def print_time(day,hour):\n    \"\"\"\n    If the hour is between 0\
    \ and 8, return sleeping. Return weekend if the day is Saturday or Sunday. Return\
    \ weekday if the day is any day between Monday and Friday.\n    \"\"\"\n    "
  completion_from: "if day in ['Monday','Tuesday','Wednesday','Thursday','Friday']:\n\
    \        if hour >= 0 and hour <= 8:\n            return 'Sleeping'\n        else:\n\
    \            return 'Weekday'\n    elif day in ['Saturday','Sunday']:\n      \
    \  if hour >= 0 and hour <= 8:\n            return 'Sleeping'\n        else:\n\
    \            return 'Weekend'\n    else:\n        return 'Invalid day'\n"
  completion_to: "if hour < 8:\n        return \"sleeping\"\n    elif day == \"Saturday\"\
    \ or day == \"Sunday\":\n        return \"weekend\"\n    else:\n        return\
    \ \"weekday\"\n\nprint(print_time(\"Monday\",5))\nprint(print_time(\"Saturday\"\
    ,5))\nprint(print_time(\"Monday\",12))\n"
  diff: "--- \n+++ \n@@ -1,28 +1,35 @@\n def print_time(day,hour): \"\"\"+If+the+hour+is+between+0+and+8,+return+sleeping.\
    \ Return+weekend if the day-of-the-week is-a+Saturday+or+Sunday.+Return weekday-or-weekend\
    \ if the-hour+day is-not+any+day between-0+Monday and-8.-Else,-return-sleeping.+Friday.\
    \ \"\"\""
  attempt_id: 1
  total_attempts: 4
  state: neutral
  _edge_tags:
    - a3
- !Edge
  node_from: *id002
  node_to: *id003
  username: student12
  prompt_from: "def print_time(day,hour):\n    \"\"\"\n    If the hour is between\
    \ 0 and 8, return sleeping. Return weekend if the day is Saturday or Sunday. Return\
    \ weekday if the day is any day between Monday and Friday.\n    \"\"\"\n    "
  prompt_to: "def print_time(day,hour):\n    \"\"\"\n    If the hour is between 0\
    \ and 8, return sleeping. Else, return weekend if the day is Saturday or Sunday.\
    \ Else, return weekday if the day is any day between Monday and Friday.\n    \"\
    \"\"\n    "
  completion_from: "if hour < 8:\n        return \"sleeping\"\n    elif day == \"\
    Saturday\" or day == \"Sunday\":\n        return \"weekend\"\n    else:\n    \
    \    return \"weekday\"\n\nprint(print_time(\"Monday\",5))\nprint(print_time(\"\
    Saturday\",5))\nprint(print_time(\"Monday\",12))\n"
  completion_to: "if hour >= 0 and hour <= 8:\n        return \"sleeping\"\n    elif\
    \ day == \"Saturday\" or day == \"Sunday\":\n        return \"weekend\"\n    else:\n\
    \        return \"weekday\"\n\nprint(print_time(\"Monday\",5))\nprint(print_time(\"\
    Saturday\",10))\nprint(print_time(\"Monday\",22))\n"
  diff: "--- \n+++ \n@@ -11,7 +11,8 @@\n 8, return sleeping.-Return+Else,+return weekend\
    \ if the@@ -20,7 +21,8 @@\n Saturday or Sunday.-Return+Else,+return weekday if\
    \ the"
  attempt_id: 2
  total_attempts: 4
  state: neutral
  _edge_tags:
    - m3
- !Edge
  node_from: *id003
  node_to: *id004
  username: student12
  prompt_from: "def print_time(day,hour):\n    \"\"\"\n    If the hour is between\
    \ 0 and 8, return sleeping. Else, return weekend if the day is Saturday or Sunday.\
    \ Else, return weekday if the day is any day between Monday and Friday.\n    \"\
    \"\"\n    "
  prompt_to: "def print_time(day,hour):\n    \"\"\"\n    If the hour is between 0\
    \ and 8, return sleeping. Else, return weekend if the day is Sat or Sun. Else,\
    \ return weekday if the day is any day between Monday and Friday.\n    \"\"\"\n\
    \    "
  completion_from: "if hour >= 0 and hour <= 8:\n        return \"sleeping\"\n   \
    \ elif day == \"Saturday\" or day == \"Sunday\":\n        return \"weekend\"\n\
    \    else:\n        return \"weekday\"\n\nprint(print_time(\"Monday\",5))\nprint(print_time(\"\
    Saturday\",10))\nprint(print_time(\"Monday\",22))\n"
  completion_to: "if hour >= 0 and hour <= 8:\n        return \"sleeping\"\n    elif\
    \ day == \"Sat\" or day == \"Sun\":\n        return \"weekend\"\n    else:\n \
    \       return \"weekday\"\n\nprint(print_time(\"Mon\",8))\n"
  diff: "--- \n+++ \n@@ -18,9 +18,9 @@\n the day is-Saturday+Sat or-Sunday.+Sun. Else,\
    \ return weekday"
  attempt_id: 3
  total_attempts: 4
  state: success
  _edge_tags:
    - a4
- !Edge
  node_from: *id005
  node_to: *id006
  username: student36
  prompt_from: "def print_time(day,hour):\n    \"\"\"\n    Accept the day of the week,\
    \ and the time of day and if the time is between 9-23 return weekend for Sat and\
    \ Sun and weekday for any other. If the time is between 0-8 return sleeping\n\
    \    \"\"\"\n    "
  prompt_to: "def print_time(day,hour):\n    \"\"\"\n    Return weekend for Sat and\
    \ Sun or weekday for any other.  If the time is between 0-8 return sleeping\n\
    \    \"\"\"\n    "
  completion_from: "if day == \"Saturday\" or day == \"Sunday\":\n        return \"\
    Weekend\"\n    elif hour >= 9 and hour <= 23:\n        return \"Weekday\"\n  \
    \  else:\n        return \"Sleeping\"\n\nprint(print_time(\"Monday\",10))\nprint(print_time(\"\
    Saturday\",10))\nprint(print_time(\"Sunday\",10))\nprint(print_time(\"Monday\"\
    ,2))\n"
  completion_to: "if day == 'Sat' or day == 'Sun':\n        return 'weekend'\n   \
    \ elif hour >= 0 and hour < 8:\n        return 'sleeping'\n    else:\n       \
    \ return 'weekday'\n\nprint(print_time('Sat',5))\nprint(print_time('Mon',5))\n\
    print(print_time('Mon',8))\n"
  diff: "--- \n+++ \n@@ -1,31 +1,13 @@\n def print_time(day,hour): \"\"\"-Accept-the-day-of-the-week,-and-the-time-of-day-and-if-the-time-is-between-9-23-return+Return\
    \ weekend for Sat and Sun-and+or weekday for any"
  attempt_id: 1
  total_attempts: 3
  state: neutral
  _edge_tags: null
- !Edge
  node_from: *id006
  node_to: *id004
  username: student36
  prompt_from: "def print_time(day,hour):\n    \"\"\"\n    Return weekend for Sat\
    \ and Sun or weekday for any other.  If the time is between 0-8 return sleeping\n\
    \    \"\"\"\n    "
  prompt_to: "def print_time(day,hour):\n    \"\"\"\n    Return weekend for Sat and\
    \ Sun or weekday for any other.  If the time is between 0-9 return sleeping\n\
    \    \"\"\"\n    "
  completion_from: "if day == 'Sat' or day == 'Sun':\n        return 'weekend'\n \
    \   elif hour >= 0 and hour < 8:\n        return 'sleeping'\n    else:\n     \
    \   return 'weekday'\n\nprint(print_time('Sat',5))\nprint(print_time('Mon',5))\n\
    print(print_time('Mon',8))\n"
  completion_to: "if day == \"Sat\" or day == \"Sun\":\n        return \"weekend\"\
    \n    elif hour < 9:\n        return \"sleeping\"\n    else:\n        return \"\
    weekday\"\n\nprint(print_time(\"Sat\",5))\nprint(print_time(\"Mon\",8))\nprint(print_time(\"\
    Mon\",11))\n"
  diff: "--- \n+++ \n@@ -17,7 +17,7 @@\n time is between-0-8+0-9 return sleeping \"\
    \"\""
  attempt_id: 2
  total_attempts: 3
  state: success
  _edge_tags:
    - m2
- !Edge
  node_from: *id007
  node_to: *id004
  username: student38
  prompt_from: "def print_time(day,hour):\n    \"\"\"\n    Return 'weekend' if day\
    \ is 'Sat' or 'Sun' and 'weekday' if not. If hour is from 0 to 8, return 'sleeping'.\
    \ \n    \"\"\"\n    "
  prompt_to: "def print_time(day,hour):\n    \"\"\"\n    If hour is from 0 to 8, return\
    \ 'sleeping'. Return 'weekend' if day is 'Sat' or 'Sun' and 'weekday' if not.\
    \ \n    \"\"\"\n    "
  completion_from: "if day in ['Sat','Sun']:\n        return 'weekend'\n    else:\n\
    \        return 'weekday'\n    \n    if hour in range(0,9):\n        return 'sleeping'\n\
    \    else:\n        return 'not sleeping'\n\nprint_time('Sat',5)\n"
  completion_to: "if hour < 9:\n        return 'sleeping'\n    elif day == 'Sat' or\
    \ day == 'Sun':\n        return 'weekend'\n    else:\n        return 'weekday'\n\
    print_time('Sat',5)\n"
  diff: "--- \n+++ \n@@ -1,6 +1,15 @@\n def print_time(day,hour): \"\"\"+If+hour+is+from+0+to+8,+return+'sleeping'.\
    \ Return 'weekend' if@@ -13,13 +22,4 @@\n 'weekday' if not.-If-hour-is-from-0-to-8,-return-'sleeping'.\
    \ \"\"\""
  attempt_id: 1
  total_attempts: 2
  state: success
  _edge_tags:
    - m3
- !Edge
  node_from: *id008
  node_to: *id006
  username: student42
  prompt_from: "def print_time(day,hour):\n    \"\"\"\n    take in a day and an hour.\
    \ if the hour is between 0 and 8, output the string \"sleeping\". if not, check\
    \ if the day is either \"Sat\" or \"Sun\", and if so, output the string \"weekend\"\
    . else, output \"weekday\". \n    \"\"\"\n    "
  prompt_to: "def print_time(day,hour):\n    \"\"\"\n    take in a day and an hour.\
    \ if the hour is between 0 and 8, return the string \"sleeping\". if not, check\
    \ if the day is either \"Sat\" or \"Sun\", and if so, return the string \"weekend\"\
    . else, return the string \"weekday\". \n    \"\"\"\n    "
  completion_from: "if hour < 8:\n        print(\"sleeping\")\n    elif day == \"\
    Sat\" or day == \"Sun\":\n        print(\"weekend\")\n    else:\n        print(\"\
    weekday\")\n\nprint_time(\"Sat\",8)\nprint_time(\"Sat\",7)\nprint_time(\"Mon\"\
    ,8)\n"
  completion_to: "if hour < 8:\n        return \"sleeping\"\n    elif day == \"Sat\"\
    \ or day == \"Sun\":\n        return \"weekend\"\n    else:\n        return \"\
    weekday\"\n"
  diff: "--- \n+++ \n@@ -16,7 +16,7 @@\n 0 and 8,-output+return the string \"sleeping\"\
    .@@ -34,11 +34,13 @@\n and if so,-output+return the string \"weekend\". else,-output+return+the+string\
    \ \"weekday\". \"\"\""
  attempt_id: 1
  total_attempts: 3
  state: neutral
  _edge_tags:
    - m3
- !Edge
  node_from: *id006
  node_to: *id004
  username: student42
  prompt_from: "def print_time(day,hour):\n    \"\"\"\n    take in a day and an hour.\
    \ if the hour is between 0 and 8, return the string \"sleeping\". if not, check\
    \ if the day is either \"Sat\" or \"Sun\", and if so, return the string \"weekend\"\
    . else, return the string \"weekday\". \n    \"\"\"\n    "
  prompt_to: "def print_time(day,hour):\n    \"\"\"\n    take in a day and an hour.\
    \ if the hour is less than or equal to 8, return the string \"sleeping\". if not,\
    \ check if the day is either \"Sat\" or \"Sun\", and if so, return the string\
    \ \"weekend\". else, return the string \"weekday\". \n    \"\"\"\n    "
  completion_from: "if hour < 8:\n        return \"sleeping\"\n    elif day == \"\
    Sat\" or day == \"Sun\":\n        return \"weekend\"\n    else:\n        return\
    \ \"weekday\"\n"
  completion_to: "if hour <= 8:\n        return \"sleeping\"\n    elif day == \"Sat\"\
    \ or day == \"Sun\":\n        return \"weekend\"\n    else:\n        return \"\
    weekday\"\n"
  diff: "--- \n+++ \n@@ -12,9 +12,11 @@\n the hour is-between-0-and+less+than+or+equal+to\
    \ 8, return the"
  attempt_id: 2
  total_attempts: 3
  state: success
  _edge_tags:
    - m2
- !Edge
  node_from: *id009
  node_to: *id004
  username: student43
  prompt_from: "def print_time(day,hour):\n    \"\"\"\n    First check the first component\
    \ of the input, if it is Sat or if it is Sun, then return weekend. If not true,\
    \ then check the second component of the input, if the it is in the range from\
    \ 0 to 8, including 0 and 8, then return sleeping. If not true, then return weekday.\
    \ \n    \"\"\"\n    "
  prompt_to: "def print_time(day,hour):\n    \"\"\"\n    First check the first component\
    \ of the input, if it is Sat or if it is Sun, then return weekend. If not true,\
    \ then check the second component of the input, if the it is in the range from\
    \ 0 to 8, including 0 and 8, then return sleeping. If not true, then return weekday.\
    \ \n    \"\"\"\n    "
  completion_from: "if day == 'Sat' or day == 'Sun':\n        return 'weekend'\n \
    \   elif hour >= 0 and hour <= 8:\n        return 'sleeping'\n    else:\n    \
    \    return 'weekday'\n    \nprint_time('Sat',5)\n\nprint_time('Sat',9)\n\nprint_time('Mon',5)\n\
    \nprint_time('Mon',9)\n\nprint_time('Sun',5"
  completion_to: "if day == 'Sat' or day == 'Sun':\n        return 'weekend'\n   \
    \ elif hour in range(0,9):\n        return 'sleeping'\n    else:\n        return\
    \ 'weekday'\n"
  diff: ''
  attempt_id: 1
  total_attempts: 2
  state: success
  _edge_tags:
    - 0
- !Edge
  node_from: *id008
  node_to: *id008
  username: student54
  prompt_from: "def print_time(day,hour):\n    \"\"\"\n    If sat or sun, print weekend.\
    \ If Mon-Fri, print weekday. If hours 0-8, print sleeping.\n    \"\"\"\n    "
  prompt_to: "def print_time(day,hour):\n    \"\"\"\n    If Sat or Sun, print weekend.\
    \ If Mon-Fri, print weekday. If hours 0-8, print sleeping.\n    \"\"\"\n    "
  completion_from: "if day == 0 or day == 6:\n        print(\"It's the weekend!\"\
    )\n    elif day >= 1 and day <= 5:\n        print(\"It's a weekday.\")\n    if\
    \ hour >= 0 and hour < 8:\n        print(\"It's sleeping time.\")\n    elif hour\
    \ >= 8 and hour < 18:\n        print(\"It's working time.\")\n    elif hour >=\
    \ 18 and hour < 24:\n        print(\"It's"
  completion_to: "if day == 'Sat' or day == 'Sun':\n        print('It\\'s the weekend!')\n\
    \    else:\n        print('It\\'s a weekday.')\n    if hour >= 0 and hour < 8:\n\
    \        print('Sleeping...')\n    elif hour >= 8 and hour < 12:\n        print('Working...')\n\
    \    elif hour >= 12 and hour < 18:\n        print('Eating...')\n   "
  diff: "--- \n+++ \n@@ -2,9 +2,9 @@\n print_time(day,hour): \"\"\" If-sat+Sat or-sun,+Sun,\
    \ print weekend. If"
  attempt_id: 1
  total_attempts: 5
  state: neutral
  _edge_tags:
    - m3
- !Edge
  node_from: *id008
  node_to: *id007
  username: student54
  prompt_from: "def print_time(day,hour):\n    \"\"\"\n    If Sat or Sun, print weekend.\
    \ If Mon-Fri, print weekday. If hours 0-8, print sleeping.\n    \"\"\"\n    "
  prompt_to: "def print_time(day,hour):\n    \"\"\"\n    If Sat or Sun, return weekend.\
    \ If Mon-Fri, return weekday. If hours 0-8, return sleeping.\n    \"\"\"\n    "
  completion_from: "if day == 'Sat' or day == 'Sun':\n        print('It\\'s the weekend!')\n\
    \    else:\n        print('It\\'s a weekday.')\n    if hour >= 0 and hour < 8:\n\
    \        print('Sleeping...')\n    elif hour >= 8 and hour < 12:\n        print('Working...')\n\
    \    elif hour >= 12 and hour < 18:\n        print('Eating...')\n   "
  completion_to: "if day == 'Sat' or day == 'Sun':\n        return 'weekend'\n   \
    \ elif day == 'Mon' or day == 'Tue' or day == 'Wed' or day == 'Thu' or day ==\
    \ 'Fri':\n        return 'weekday'\n    elif hour >= 0 and hour < 8:\n       \
    \ return 'sleeping'\n    else:\n        return 'weekday'\n"
  diff: "--- \n+++ \n@@ -5,15 +5,15 @@\n Sat or Sun,-print+return weekend. If Mon-Fri,-print+return\
    \ weekday. If hours 0-8,-print+return sleeping. \"\"\""
  attempt_id: 2
  total_attempts: 5
  state: neutral
  _edge_tags:
    - m2
    - m3
- !Edge
  node_from: *id007
  node_to: *id010
  username: student54
  prompt_from: "def print_time(day,hour):\n    \"\"\"\n    If Sat or Sun, return weekend.\
    \ If Mon-Fri, return weekday. If hours 0-8, return sleeping.\n    \"\"\"\n    "
  prompt_to: "def print_time(day,hour):\n    \"\"\"\n    If hours 0-8, return sleeping.\
    \ If Sat or Sun, return weekend. If Mon-Fri, return weekday. \n    \"\"\"\n  \
    \  "
  completion_from: "if day == 'Sat' or day == 'Sun':\n        return 'weekend'\n \
    \   elif day == 'Mon' or day == 'Tue' or day == 'Wed' or day == 'Thu' or day ==\
    \ 'Fri':\n        return 'weekday'\n    elif hour >= 0 and hour < 8:\n       \
    \ return 'sleeping'\n    else:\n        return 'weekday'\n"
  completion_to: "if hour < 8:\n        return \"sleeping\"\n    elif day == \"Sat\"\
    \ or day == \"Sun\":\n        return \"weekend\"\n    else:\n        return \"\
    weekday\"\n\nprint_time(\"Mon\",9)\n\nprint_time(\"Sat\",7)\n\nprint_time(\"Sun\"\
    ,8)\n\nprint_time(\"Mon\",8)\n\nprint_time(\"Sat\",8)\n\nprint_"
  diff: "--- \n+++ \n@@ -1,6 +1,11 @@\n def print_time(day,hour): \"\"\"+If+hours+0-8,+return+sleeping.\
    \ If Sat or@@ -11,9 +16,4 @@\n Mon-Fri, return weekday.-If-hours-0-8,-return-sleeping.\
    \ \"\"\""
  attempt_id: 3
  total_attempts: 5
  state: neutral
  _edge_tags:
    - m2
- !Edge
  node_from: *id010
  node_to: *id004
  username: student54
  prompt_from: "def print_time(day,hour):\n    \"\"\"\n    If hours 0-8, return sleeping.\
    \ If Sat or Sun, return weekend. If Mon-Fri, return weekday. \n    \"\"\"\n  \
    \  "
  prompt_to: "def print_time(day,hour):\n    \"\"\"\n    If hours 0-8, or equal to\
    \ 8, return sleeping. If Sat or Sun, return weekend. If Mon-Fri, return weekday.\
    \ \n    \"\"\"\n    "
  completion_from: "if hour < 8:\n        return \"sleeping\"\n    elif day == \"\
    Sat\" or day == \"Sun\":\n        return \"weekend\"\n    else:\n        return\
    \ \"weekday\"\n\nprint_time(\"Mon\",9)\n\nprint_time(\"Sat\",7)\n\nprint_time(\"\
    Sun\",8)\n\nprint_time(\"Mon\",8)\n\nprint_time(\"Sat\",8)\n\nprint_"
  completion_to: "if hour < 8 or hour == 8:\n        return \"sleeping\"\n    elif\
    \ day == \"Sat\" or day == \"Sun\":\n        return \"weekend\"\n    else:\n \
    \       return \"weekday\"\n\nprint_time(\"Mon\",8)\n"
  diff: "--- \n+++ \n@@ -4,6 +4,10 @@\n If hours 0-8,+or+equal+to+8, return sleeping.\
    \ If"
  attempt_id: 4
  total_attempts: 5
  state: success
  _edge_tags:
    - 0
- !Edge
  node_from: *id011
  node_to: *id012
  username: student57
  prompt_from: "def print_time(day,hour):\n    \"\"\"\n    given a string and an integer,\
    \ if given string is either \"Sat\" or \"Sun\", return \"weekend\". if string\
    \ is a weekday (i.e. \"Mon\" or \"Tue\"), take into account the integer. if integer\
    \ is from 9-23, return \"weekday\". if integer is from 0-8, return \"sleeping\"\
    . if integer is more than 24, return an error statement stating there are only\
    \ 24 hours in a day where midnight starts at 0.\n    \"\"\"\n    "
  prompt_to: "def print_time(day,hour):\n    \"\"\"\n    given a string and an integer,\
    \ if given string is either \"Sat\" or \"Sun\", return \"weekend\". if string\
    \ is \"Mon\", \"Tue\", \"Wed\", \"Thu\" or \"Fri\", take into account the integer.\
    \ if integer is from 9-23, return \"weekday\". if integer is from 0-8, return\
    \ \"sleeping\". if integer is more than 24, return an error statement stating\
    \ there are only 24 hours in a day where midnight starts at 0.\n    \"\"\"\n \
    \   "
  completion_from: "if day == \"Sat\" or day == \"Sun\":\n        return \"weekend\"\
    \n    elif day == \"Mon\" or day == \"Tue\":\n        if hour >= 9 and hour <=\
    \ 23:\n            return \"weekday\"\n        elif hour >= 0 and hour <= 8:\n\
    \            return \"sleeping\"\n        else:\n            return \"There are\
    \ only 24 hours in a day where midnight starts at 0.\"\n    else:\n       "
  completion_to: "if day == \"Sat\" or day == \"Sun\":\n        return \"weekend\"\
    \n    elif day == \"Mon\" or day == \"Tue\" or day == \"Wed\" or day == \"Thu\"\
    \ or day == \"Fri\":\n        if hour >= 9 and hour <= 23:\n            return\
    \ \"weekday\"\n        elif hour >= 0 and hour <= 8:\n            return \"sleeping\"\
    \n        else:\n            return \"There are"
  diff: "--- \n+++ \n@@ -20,12 +20,12 @@\n if string is-a-weekday-(i.e.-\"Mon\"+\"\
    Mon\",+\"Tue\",+\"Wed\",+\"Thu\" or-\"Tue\"),+\"Fri\", take into account"
  attempt_id: 1
  total_attempts: 2
  state: fail
  _edge_tags:
    - m3
- !Edge
  node_from: *id004
  node_to: *id007
  username: student77
  prompt_from: "def print_time(day,hour):\n    \"\"\"\n    Given two parameters, \
    \ the first being the day and the second being a measurement of time, return \"\
    weekend\" if the day is 'Sat' or 'Sun', and return weekday if the day is neither.\
    \ Return \"sleeping\" if the measurement of time is between '0' and '8', inclusive.\n\
    \    \"\"\"\n    "
  prompt_to: "def print_time(day,hour):\n    \"\"\"\n    Given two parameters,  the\
    \ first being the day and the second being a measurement of time, return \"weekend\"\
    \ if the day is 'Sat' or 'Sun', and return weekday if the day is neither. Return\
    \ \"sleeping\" if the measurement of time is between '0' and '8', inclusive.\n\
    \    \"\"\"\n    "
  completion_from: "if day == 'Sat' or day == 'Sun':\n        return 'weekend'\n \
    \   elif day == 'Mon' or day == 'Tue' or day == 'Wed' or day == 'Thu' or day ==\
    \ 'Fri':\n        if hour >= 0 and hour <= 8:\n            return 'sleeping'\n\
    \        else:\n            return 'weekday'\n    else:\n        return 'error'\n\
    \nprint(print_time('"
  completion_to: "if day == 'Sat' or day == 'Sun':\n        return 'weekend'\n   \
    \ elif day != 'Sat' or day != 'Sun':\n        return 'weekday'\n    if hour >=\
    \ 0 and hour <= 8:\n        return 'sleeping'\n    else:\n        return 'awake'\n\
    \nprint(print_time('Sat',5))\nprint(print_time('Sat',10))\nprint(print_time"
  diff: ''
  attempt_id: 1
  total_attempts: 3
  state: neutral
  _edge_tags: null
- !Edge
  node_from: *id007
  node_to: *id004
  username: student77
  prompt_from: "def print_time(day,hour):\n    \"\"\"\n    Given two parameters, \
    \ the first being the day and the second being a measurement of time, return \"\
    weekend\" if the day is 'Sat' or 'Sun', and return weekday if the day is neither.\
    \ Return \"sleeping\" if the measurement of time is between '0' and '8', inclusive.\n\
    \    \"\"\"\n    "
  prompt_to: "def print_time(day,hour):\n    \"\"\"\n    Given two parameters,  the\
    \ first being the day and the second being a measurement of time, return \"weekend\"\
    \ if the day is Sat or Sun, and return weekday if the day is neither. Return \"\
    sleeping\" if the measurement of time is between 0 and 8, inclusive. If the time\
    \ is any other, return either \"weekend\" or \"weekday\".\n    \"\"\"\n    "
  completion_from: "if day == 'Sat' or day == 'Sun':\n        return 'weekend'\n \
    \   elif day != 'Sat' or day != 'Sun':\n        return 'weekday'\n    if hour\
    \ >= 0 and hour <= 8:\n        return 'sleeping'\n    else:\n        return 'awake'\n\
    \nprint(print_time('Sat',5))\nprint(print_time('Sat',10))\nprint(print_time"
  completion_to: "if day == \"Sat\" or day == \"Sun\":\n        return \"weekend\"\
    \n    elif hour >= 0 and hour <= 8:\n        return \"sleeping\"\n    else:\n\
    \        return \"weekday\"\n"
  diff: "--- \n+++ \n@@ -23,9 +23,9 @@\n the day is-'Sat'+Sat or-'Sun',+Sun, and return\
    \ weekday@@ -43,8 +43,19 @@\n time is between-'0'+0 and-'8',+8, inclusive.+If+the+time+is+any+other,+return+either+\"\
    weekend\"+or+\"weekday\". \"\"\""
  attempt_id: 2
  total_attempts: 3
  state: success
  _edge_tags:
    - m3
student_start_node_tags:
  student12:
    - 2
  student36:
    - 2
    - 3
    - 4
  student38:
    - 2
    - 3
    - 4
  student42:
    - 2
    - 3
    - 4
  student43:
    - 2
    - 3
    - 4
  student54:
    - 2
    - 3
    - 4
  student57:
    - 1
    - 2
    - 3
    - 4
  student77:
    - 1
    - 2
    - 3
    - 4
