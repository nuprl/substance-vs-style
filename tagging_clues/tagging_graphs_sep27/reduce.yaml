!Graph
problem: reduce
nodes:
- &id003 !Node
  id: 0
  stdout:
  - '4

    '
  - '2

    '
  - '0

    '
  stderr:
  - ''
  - ''
  - ''
  _node_tags: null
- &id002 !Node
  id: 1
  stdout:
  - '--1-1--

    '
  - '~----~

    '
  - '|O.0|

    '
  stderr:
  - ''
  - ''
  - ''
  _node_tags: null
- &id001 !Node
  id: 2
  stdout:
  - '__1-1__

    '
  - '~_--_~

    '
  - '|O.0|

    '
  stderr:
  - ''
  - ''
  - ''
  _node_tags: null
- &id004 !Node
  id: 3
  stdout:
  - '(''__1-1__'', 4)

    '
  - '(''~_--_~'', 2)

    '
  - '(''|O.0|'', 0)

    '
  stderr:
  - ''
  - ''
  - ''
  _node_tags: null
edges:
- !Edge
  node_from: *id001
  node_to: *id002
  username: student17
  prompt_from: "def reduce(val):\n    \"\"\"\n    changing the \"^\" to \"_\" and\
    \ \"^\" to \"_\" in strings\n    \"\"\"\n    "
  prompt_to: "def reduce(val):\n    \"\"\"\n    changing the \"^\" to \"-\" and \"\
    ^\" to \"-\" in strings\n    \"\"\"\n    "
  completion_from: 'return val.replace("^", "_").replace(" ", "_")

    '
  completion_to: 'return val.replace("^", "-").replace("v", "|")

    '
  diff: "--- \n+++ \n@@ -5,11 +5,11 @@\n the \"^\" to-\"_\"+\"-\" and \"^\" to-\"\
    _\"+\"-\" in strings \"\"\""
  attempt_id: 1
  total_attempts: 2
  state: fail
  _edge_tags: null
- !Edge
  node_from: *id003
  node_to: *id004
  username: student26
  prompt_from: "def reduce(val):\n    \"\"\"\n    Count the characters in a string\
    \ and replace all '^' as '_', then print the string\n    \"\"\"\n    "
  prompt_to: "def reduce(val):\n    \"\"\"\n    Count the characters in a string and\
    \ replace all '^' as '_', then return a copy of the new string\n    \"\"\"\n \
    \   "
  completion_from: "count = 0\n    for i in val:\n        if i == '^':\n         \
    \   val = val.replace(i, '_')\n            count += 1\n    print(val)\n    return\
    \ count\n"
  completion_to: "count = 0\n    for i in val:\n        if i == '^':\n           \
    \ count += 1\n    val = val.replace('^', '_')\n    return val, count\n"
  diff: "--- \n+++ \n@@ -14,7 +14,11 @@\n as '_', then-print+return+a+copy+of the+new\
    \ string \"\"\""
  attempt_id: 1
  total_attempts: 4
  state: neutral
  _edge_tags: null
- !Edge
  node_from: *id004
  node_to: *id004
  username: student26
  prompt_from: "def reduce(val):\n    \"\"\"\n    Count the characters in a string\
    \ and replace all '^' as '_', then return a copy of the new string\n    \"\"\"\
    \n    "
  prompt_to: "def reduce(val):\n    \"\"\"\n    Count the characters in a string and\
    \ replace all '^' as '_', then return a copy of the new string\n    \"\"\"\n \
    \   "
  completion_from: "count = 0\n    for i in val:\n        if i == '^':\n         \
    \   count += 1\n    val = val.replace('^', '_')\n    return val, count\n"
  completion_to: "count = 0\n    for i in val:\n        if i == '^':\n           \
    \ count += 1\n    val = val.replace('^', '_')\n    return val, count\n\n"
  diff: ''
  attempt_id: 2
  total_attempts: 4
  state: neutral
  _edge_tags: null
- !Edge
  node_from: *id004
  node_to: *id001
  username: student26
  prompt_from: "def reduce(val):\n    \"\"\"\n    Count the characters in a string\
    \ and replace all '^' as '_', then return a copy of the new string\n    \"\"\"\
    \n    "
  prompt_to: "def reduce(val):\n    \"\"\"\n    Count the characters in a string and\
    \ replace all '^' as '_', then return a copy of the new string. Do not display\
    \ the count\n    \"\"\"\n    "
  completion_from: "count = 0\n    for i in val:\n        if i == '^':\n         \
    \   count += 1\n    val = val.replace('^', '_')\n    return val, count\n\n"
  completion_to: "count = 0\n    new_str = ''\n    for i in val:\n        if i ==\
    \ '^':\n            new_str += '_'\n        else:\n            new_str += i\n\
    \        count += 1\n    return new_str\n"
  diff: "--- \n+++ \n@@ -20,5 +20,10 @@\n of the new-string+string.+Do+not+display+the+count\
    \ \"\"\""
  attempt_id: 3
  total_attempts: 4
  state: success
  _edge_tags: null
student_start_node_tags: {}
